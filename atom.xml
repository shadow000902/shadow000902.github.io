<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shadow&#39;S Site</title>
  <subtitle>谁当声震人间，必长久深自缄默。谁当划破闪电，必长久如云漂泊。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shadow000902.space/"/>
  <updated>2017-06-19T07:03:31.000Z</updated>
  <id>http://shadow000902.space/</id>
  
  <author>
    <name>shadow</name>
    <email>shadow000902@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一千行MySQL学习笔记</title>
    <link href="http://shadow000902.space/2017/06/19/%E4%B8%80%E5%8D%83%E8%A1%8CMySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://shadow000902.space/2017/06/19/一千行MySQL学习笔记/</id>
    <published>2017-06-19T07:02:26.000Z</published>
    <updated>2017-06-19T07:03:31.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div></pre></td><td class="code"><pre><div class="line">/* 启动MySQL */</div><div class="line">net start mysql</div><div class="line"></div><div class="line">/* 连接与断开服务器 */</div><div class="line">mysql -h 地址 -P 端口 -u 用户名 -p 密码</div><div class="line"></div><div class="line">/* 跳过权限验证登录MySQL */</div><div class="line">mysqld --skip-grant-tables</div><div class="line">-- 修改root密码</div><div class="line">密码加密函数password()</div><div class="line">update mysql.user <span class="built_in">set</span> password=password(<span class="string">'root'</span>);</div><div class="line"></div><div class="line">SHOW PROCESSLIST -- 显示哪些线程正在运行</div><div class="line">SHOW VARIABLES -- </div><div class="line"></div><div class="line">/* 数据库操作 */ ------------------</div><div class="line">-- 查看当前数据库</div><div class="line">    select database();</div><div class="line">-- 显示当前时间、用户名、数据库版本</div><div class="line">    select now(), user(), version();</div><div class="line">-- 创建库</div><div class="line">    create database[ <span class="keyword">if</span> not exists] 数据库名 数据库选项</div><div class="line">    数据库选项：</div><div class="line">        CHARACTER SET charset_name</div><div class="line">        COLLATE collation_name</div><div class="line">-- 查看已有库</div><div class="line">    show databases[ like <span class="string">'pattern'</span>]</div><div class="line">-- 查看当前库信息</div><div class="line">    show create database 数据库名</div><div class="line">-- 修改库的选项信息</div><div class="line">    alter database 库名 选项信息</div><div class="line">-- 删除库</div><div class="line">    drop database[ <span class="keyword">if</span> exists] 数据库名</div><div class="line">        同时删除该数据库相关的目录及其目录内容</div><div class="line"></div><div class="line">/* 表的操作 */ ------------------</div><div class="line">-- 创建表</div><div class="line">    create [temporary] table[ <span class="keyword">if</span> not exists] [库名.]表名 ( 表的结构定义 )[ 表选项]</div><div class="line">        每个字段必须有数据类型</div><div class="line">        最后一个字段后不能有逗号</div><div class="line">        temporary 临时表，会话结束时表自动消失</div><div class="line">        对于字段的定义：</div><div class="line">            字段名 数据类型 [NOT NULL | NULL] [DEFAULT default_value] [AUTO_INCREMENT] [UNIQUE [KEY] | [PRIMARY] KEY] [COMMENT <span class="string">'string'</span>]</div><div class="line">-- 表选项</div><div class="line">    -- 字符集</div><div class="line">        CHARSET = charset_name</div><div class="line">        如果表没有设定，则使用数据库字符集</div><div class="line">    -- 存储引擎</div><div class="line">        ENGINE = engine_name    </div><div class="line">        表在管理数据时采用的不同的数据结构，结构不同会导致处理方式、提供的特性操作等不同</div><div class="line">        常见的引擎：InnoDB MyISAM Memory/Heap BDB Merge Example CSV MaxDB Archive</div><div class="line">        不同的引擎在保存表的结构和数据时采用不同的方式</div><div class="line">        MyISAM表文件含义：.frm表定义，.MYD表数据，.MYI表索引</div><div class="line">        InnoDB表文件含义：.frm表定义，表空间数据和日志文件</div><div class="line">        SHOW ENGINES -- 显示存储引擎的状态信息</div><div class="line">        SHOW ENGINE 引擎名 &#123;LOGS|STATUS&#125; -- 显示存储引擎的日志或状态信息</div><div class="line">    -- 数据文件目录</div><div class="line">        DATA DIRECTORY = <span class="string">'目录'</span></div><div class="line">    -- 索引文件目录</div><div class="line">        INDEX DIRECTORY = <span class="string">'目录'</span></div><div class="line">    -- 表注释</div><div class="line">        COMMENT = <span class="string">'string'</span></div><div class="line">    -- 分区选项</div><div class="line">        PARTITION BY ... (详细见手册)</div><div class="line">-- 查看所有表</div><div class="line">    SHOW TABLES[ LIKE <span class="string">'pattern'</span>]</div><div class="line">    SHOW TABLES FROM 表名</div><div class="line">-- 查看表机构</div><div class="line">    SHOW CREATE TABLE 表名    （信息更详细）</div><div class="line">    DESC 表名 / DESCRIBE 表名 / EXPLAIN 表名 / SHOW COLUMNS FROM 表名 [LIKE <span class="string">'PATTERN'</span>]</div><div class="line">    SHOW TABLE STATUS [FROM db_name] [LIKE <span class="string">'pattern'</span>]</div><div class="line">-- 修改表</div><div class="line">    -- 修改表本身的选项</div><div class="line">        ALTER TABLE 表名 表的选项</div><div class="line">        EG:    ALTER TABLE 表名 ENGINE=MYISAM;</div><div class="line">    -- 对表进行重命名</div><div class="line">        RENAME TABLE 原表名 TO 新表名</div><div class="line">        RENAME TABLE 原表名 TO 库名.表名    （可将表移动到另一个数据库）</div><div class="line">        -- RENAME可以交换两个表名</div><div class="line">    -- 修改表的字段机构</div><div class="line">        ALTER TABLE 表名 操作名</div><div class="line">        -- 操作名</div><div class="line">            ADD[ COLUMN] 字段名        -- 增加字段</div><div class="line">                AFTER 字段名            -- 表示增加在该字段名后面</div><div class="line">                FIRST                -- 表示增加在第一个</div><div class="line">            ADD PRIMARY KEY(字段名)    -- 创建主键</div><div class="line">            ADD UNIQUE [索引名] (字段名)-- 创建唯一索引</div><div class="line">            ADD INDEX [索引名] (字段名)    -- 创建普通索引</div><div class="line">            ADD </div><div class="line">            DROP[ COLUMN] 字段名        -- 删除字段</div><div class="line">            MODIFY[ COLUMN] 字段名 字段属性        -- 支持对字段属性进行修改，不能修改字段名(所有原有属性也需写上)</div><div class="line">            CHANGE[ COLUMN] 原字段名 新字段名 字段属性        -- 支持对字段名修改</div><div class="line">            DROP PRIMARY KEY    -- 删除主键(删除主键前需删除其AUTO_INCREMENT属性)</div><div class="line">            DROP INDEX 索引名    -- 删除索引</div><div class="line">            DROP FOREIGN KEY 外键    -- 删除外键</div><div class="line"></div><div class="line">-- 删除表</div><div class="line">    DROP TABLE[ IF EXISTS] 表名 ...</div><div class="line">-- 清空表数据</div><div class="line">    TRUNCATE [TABLE] 表名</div><div class="line">-- 复制表结构</div><div class="line">    CREATE TABLE 表名 LIKE 要复制的表名</div><div class="line">-- 复制表结构和数据</div><div class="line">    CREATE TABLE 表名 [AS] SELECT * FROM 要复制的表名</div><div class="line">-- 检查表是否有错误</div><div class="line">    CHECK TABLE tbl_name [, tbl_name] ... [option] ...</div><div class="line">-- 优化表</div><div class="line">    OPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...</div><div class="line">-- 修复表</div><div class="line">    REPAIR [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ... [QUICK] [EXTENDED] [USE_FRM]</div><div class="line">-- 分析表</div><div class="line">    ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">/* 数据操作 */ ------------------</div><div class="line">-- 增</div><div class="line">    INSERT [INTO] 表名 [(字段列表)] VALUES (值列表)[, (值列表), ...]</div><div class="line">        -- 如果要插入的值列表包含所有字段并且顺序一致，则可以省略字段列表。</div><div class="line">        -- 可同时插入多条数据记录！</div><div class="line">        REPLACE 与 INSERT 完全一样，可互换。</div><div class="line">    INSERT [INTO] 表名 SET 字段名=值[, 字段名=值, ...]</div><div class="line">-- 查</div><div class="line">    SELECT 字段列表 FROM 表名[ 其他子句]</div><div class="line">        -- 可来自多个表的多个字段</div><div class="line">        -- 其他子句可以不使用</div><div class="line">        -- 字段列表可以用*代替，表示所有字段</div><div class="line">-- 删</div><div class="line">    DELETE FROM 表名[ 删除条件子句]</div><div class="line">        没有条件子句，则会删除全部</div><div class="line">-- 改</div><div class="line">    UPDATE 表名 SET 字段名=新值[, 字段名=新值] [更新条件]</div><div class="line"></div><div class="line">/* 字符集编码 */ ------------------</div><div class="line">-- MySQL、数据库、表、字段均可设置编码</div><div class="line">-- 数据编码与客户端编码不需一致</div><div class="line">SHOW VARIABLES LIKE <span class="string">'character_set_%'</span>    -- 查看所有字符集编码项</div><div class="line">    character_<span class="built_in">set</span>_client        客户端向服务器发送数据时使用的编码</div><div class="line">    character_<span class="built_in">set</span>_results        服务器端将结果返回给客户端所使用的编码</div><div class="line">    character_<span class="built_in">set</span>_connection    连接层编码</div><div class="line">SET 变量名 = 变量值</div><div class="line">    <span class="built_in">set</span> character_<span class="built_in">set</span>_client = gbk;</div><div class="line">    <span class="built_in">set</span> character_<span class="built_in">set</span>_results = gbk;</div><div class="line">    <span class="built_in">set</span> character_<span class="built_in">set</span>_connection = gbk;</div><div class="line">SET NAMES GBK;    -- 相当于完成以上三个设置</div><div class="line">-- 校对集</div><div class="line">    校对集用以排序</div><div class="line">    SHOW CHARACTER SET [LIKE <span class="string">'pattern'</span>]/SHOW CHARSET [LIKE <span class="string">'pattern'</span>]    查看所有字符集</div><div class="line">    SHOW COLLATION [LIKE <span class="string">'pattern'</span>]        查看所有校对集</div><div class="line">    charset 字符集编码        设置字符集编码</div><div class="line">    collate 校对集编码        设置校对集编码</div><div class="line"></div><div class="line">/* 数据类型（列类型） */ ------------------</div><div class="line">1. 数值类型</div><div class="line">-- a. 整型 ----------</div><div class="line">    类型            字节        范围（有符号位）</div><div class="line">    tinyint        1字节    -128 ~ 127        无符号位：0 ~ 255</div><div class="line">    smallint    2字节    -32768 ~ 32767</div><div class="line">    mediumint    3字节    -8388608 ~ 8388607</div><div class="line">    int            4字节</div><div class="line">    bigint        8字节</div><div class="line"></div><div class="line">    int(M)    M表示总位数</div><div class="line">    - 默认存在符号位，unsigned 属性修改</div><div class="line">    - 显示宽度，如果某个数不够定义字段时设置的位数，则前面以0补填，zerofill 属性修改</div><div class="line">        例：int(5)    插入一个数<span class="string">'123'</span>，补填后为<span class="string">'00123'</span></div><div class="line">    - 在满足要求的情况下，越小越好。</div><div class="line">    - 1表示bool值真，0表示bool值假。MySQL没有布尔类型，通过整型0和1表示。常用tinyint(1)表示布尔型。</div><div class="line"></div><div class="line">-- b. 浮点型 ----------</div><div class="line">    类型                字节        范围</div><div class="line">    <span class="built_in">float</span>(单精度)        4字节</div><div class="line">    double(双精度)    8字节</div><div class="line">    浮点型既支持符号位 unsigned 属性，也支持显示宽度 zerofill 属性。</div><div class="line">        不同于整型，前后均会补填0.</div><div class="line">    定义浮点型时，需指定总位数和小数位数。</div><div class="line">        <span class="built_in">float</span>(M, D)        double(M, D)</div><div class="line">        M表示总位数，D表示小数位数。</div><div class="line">        M和D的大小会决定浮点数的范围。不同于整型的固定范围。</div><div class="line">        M既表示总位数（不包括小数点和正负号），也表示显示宽度（所有显示符号均包括）。</div><div class="line">        支持科学计数法表示。</div><div class="line">        浮点数表示近似值。</div><div class="line"></div><div class="line">-- c. 定点数 ----------</div><div class="line">    decimal    -- 可变长度</div><div class="line">    decimal(M, D)    M也表示总位数，D表示小数位数。</div><div class="line">    保存一个精确的数值，不会发生数据的改变，不同于浮点数的四舍五入。</div><div class="line">    将浮点数转换为字符串来保存，每9位数字保存为4个字节。</div><div class="line"></div><div class="line">2. 字符串类型</div><div class="line">-- a. char, varchar ----------</div><div class="line">    char    定长字符串，速度快，但浪费空间</div><div class="line">    varchar    变长字符串，速度慢，但节省空间</div><div class="line">    M表示能存储的最大长度，此长度是字符数，非字节数。</div><div class="line">    不同的编码，所占用的空间不同。</div><div class="line">    char,最多255个字符，与编码无关。</div><div class="line">    varchar,最多65535字符，与编码有关。</div><div class="line">    一条有效记录最大不能超过65535个字节。</div><div class="line">        utf8 最大为21844个字符，gbk 最大为32766个字符，latin1 最大为65532个字符</div><div class="line">    varchar 是变长的，需要利用存储空间保存 varchar 的长度，如果数据小于255个字节，则采用一个字节来保存长度，反之需要两个字节来保存。</div><div class="line">    varchar 的最大有效长度由最大行大小和使用的字符集确定。</div><div class="line">    最大有效长度是65532字节，因为在varchar存字符串时，第一个字节是空的，不存在任何数据，然后还需两个字节来存放字符串的长度，所以有效长度是64432-1-2=65532字节。</div><div class="line">    例：若一个表定义为 CREATE TABLE tb(c1 int, c2 char(30), c3 varchar(N)) charset=utf8; 问N的最大值是多少？ 答：(65535-1-2-4-30*3)/3</div><div class="line"></div><div class="line">-- b. blob, text ----------</div><div class="line">    blob 二进制字符串（字节字符串）</div><div class="line">        tinyblob, blob, mediumblob, longblob</div><div class="line">    text 非二进制字符串（字符字符串）</div><div class="line">        tinytext, text, mediumtext, longtext</div><div class="line">    text 在定义时，不需要定义长度，也不会计算总长度。</div><div class="line">    text 类型在定义时，不可给default值</div><div class="line"></div><div class="line">-- c. binary, varbinary ----------</div><div class="line">    类似于char和varchar，用于保存二进制字符串，也就是保存字节字符串而非字符字符串。</div><div class="line">    char, varchar, text 对应 binary, varbinary, blob.</div><div class="line"></div><div class="line">3. 日期时间类型</div><div class="line">    一般用整型保存时间戳，因为PHP可以很方便的将时间戳进行格式化。</div><div class="line">    datetime    8字节    日期及时间        1000-01-01 00:00:00 到 9999-12-31 23:59:59</div><div class="line">    date        3字节    日期            1000-01-01 到 9999-12-31</div><div class="line">    timestamp    4字节    时间戳        19700101000000 到 2038-01-19 03:14:07</div><div class="line">    time        3字节    时间            -838:59:59 到 838:59:59</div><div class="line">    year        1字节    年份            1901 - 2155</div><div class="line">    </div><div class="line">datetime    “YYYY-MM-DD hh:mm:ss”</div><div class="line">timestamp    “YY-MM-DD hh:mm:ss”</div><div class="line">            “YYYYMMDDhhmmss”</div><div class="line">            “YYMMDDhhmmss”</div><div class="line">            YYYYMMDDhhmmss</div><div class="line">            YYMMDDhhmmss</div><div class="line">date        “YYYY-MM-DD”</div><div class="line">            “YY-MM-DD”</div><div class="line">            “YYYYMMDD”</div><div class="line">            “YYMMDD”</div><div class="line">            YYYYMMDD</div><div class="line">            YYMMDD</div><div class="line">time        “hh:mm:ss”</div><div class="line">            “hhmmss”</div><div class="line">            hhmmss</div><div class="line">year        “YYYY”</div><div class="line">            “YY”</div><div class="line">            YYYY</div><div class="line">            YY</div><div class="line"></div><div class="line">4. 枚举和集合</div><div class="line">-- 枚举(enum) ----------</div><div class="line">enum(val1, val2, val3...)</div><div class="line">    在已知的值中进行单选。最大数量为65535.</div><div class="line">    枚举值在保存时，以2个字节的整型(smallint)保存。每个枚举值，按保存的位置顺序，从1开始逐一递增。</div><div class="line">    表现为字符串类型，存储却是整型。</div><div class="line">    NULL值的索引是NULL。</div><div class="line">    空字符串错误值的索引值是0。</div><div class="line"></div><div class="line">-- 集合（<span class="built_in">set</span>） ----------</div><div class="line"><span class="built_in">set</span>(val1, val2, val3...)</div><div class="line">    create table tab ( gender <span class="built_in">set</span>(<span class="string">'男'</span>, <span class="string">'女'</span>, <span class="string">'无'</span>) );</div><div class="line">    insert into tab values (<span class="string">'男, 女'</span>);</div><div class="line">    最多可以有64个不同的成员。以bigint存储，共8个字节。采取位运算的形式。</div><div class="line">    当创建表时，SET成员值的尾部空格将自动被删除。</div><div class="line"></div><div class="line">/* 选择类型 */</div><div class="line">-- PHP角度</div><div class="line">1. 功能满足</div><div class="line">2. 存储空间尽量小，处理效率更高</div><div class="line">3. 考虑兼容问题</div><div class="line"></div><div class="line">-- IP存储 ----------</div><div class="line">1. 只需存储，可用字符串</div><div class="line">2. 如果需计算，查找等，可存储为4个字节的无符号int，即unsigned</div><div class="line">    1) PHP函数转换</div><div class="line">        ip2long可转换为整型，但会出现携带符号问题。需格式化为无符号的整型。</div><div class="line">        利用sprintf函数格式化字符串</div><div class="line">        sprintf(<span class="string">"%u"</span>, ip2long(<span class="string">'192.168.3.134'</span>));</div><div class="line">        然后用long2ip将整型转回IP字符串</div><div class="line">    2) MySQL函数转换(无符号整型，UNSIGNED)</div><div class="line">        INET_ATON(<span class="string">'127.0.0.1'</span>) 将IP转为整型</div><div class="line">        INET_NTOA(2130706433) 将整型转为IP</div><div class="line">        </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">/* 列属性（列约束） */ ------------------</div><div class="line">1. 主键</div><div class="line">    - 能唯一标识记录的字段，可以作为主键。</div><div class="line">    - 一个表只能有一个主键。</div><div class="line">    - 主键具有唯一性。</div><div class="line">    - 声明字段时，用 primary key 标识。</div><div class="line">        也可以在字段列表之后声明</div><div class="line">            例：create table tab ( id int, stu varchar(10), primary key (id));</div><div class="line">    - 主键字段的值不能为null。</div><div class="line">    - 主键可以由多个字段共同组成。此时需要在字段列表后声明的方法。</div><div class="line">        例：create table tab ( id int, stu varchar(10), age int, primary key (stu, age));</div><div class="line"></div><div class="line">2. unique 唯一索引（唯一约束）</div><div class="line">    使得某字段的值也不能重复。</div><div class="line">    </div><div class="line">3. null 约束</div><div class="line">    null不是数据类型，是列的一个属性。</div><div class="line">    表示当前列是否可以为null，表示什么都没有。</div><div class="line">    null, 允许为空。默认。</div><div class="line">    not null, 不允许为空。</div><div class="line">    insert into tab values (null, <span class="string">'val'</span>);</div><div class="line">        -- 此时表示将第一个字段的值设为null, 取决于该字段是否允许为null</div><div class="line">    </div><div class="line">4. default 默认值属性</div><div class="line">    当前字段的默认值。</div><div class="line">    insert into tab values (default, <span class="string">'val'</span>);    -- 此时表示强制使用默认值。</div><div class="line">    create table tab ( add_time timestamp default current_timestamp );</div><div class="line">        -- 表示将当前时间的时间戳设为默认值。</div><div class="line">        current_date, current_time</div><div class="line"></div><div class="line">5. auto_increment 自动增长约束</div><div class="line">    自动增长必须为索引（主键或unique）</div><div class="line">    只能存在一个字段为自动增长。</div><div class="line">    默认为1开始自动增长。可以通过表属性 auto_increment = x进行设置，或 alter table tbl auto_increment = x;</div><div class="line"></div><div class="line">6. comment 注释</div><div class="line">    例：create table tab ( id int ) comment <span class="string">'注释内容'</span>;</div><div class="line"></div><div class="line">7. foreign key 外键约束</div><div class="line">    用于限制主表与从表数据完整性。</div><div class="line">    alter table t1 add constraint `t1_t2_fk` foreign key (t1_id) references t2(id);</div><div class="line">        -- 将表t1的t1_id外键关联到表t2的id字段。</div><div class="line">        -- 每个外键都有一个名字，可以通过 constraint 指定</div><div class="line"></div><div class="line">    存在外键的表，称之为从表（子表），外键指向的表，称之为主表（父表）。</div><div class="line"></div><div class="line">    作用：保持数据一致性，完整性，主要目的是控制存储在外键表（从表）中的数据。</div><div class="line"></div><div class="line">    MySQL中，可以对InnoDB引擎使用外键约束：</div><div class="line">    语法：</div><div class="line">    foreign key (外键字段） references 主表名 (关联字段) [主表记录删除时的动作] [主表记录更新时的动作]</div><div class="line">    此时需要检测一个从表的外键需要约束为主表的已存在的值。外键在没有关联的情况下，可以设置为null.前提是该外键列，没有not null。</div><div class="line"></div><div class="line">    可以不指定主表记录更改或更新时的动作，那么此时主表的操作被拒绝。</div><div class="line">    如果指定了 on update 或 on delete：在删除或更新时，有如下几个操作可以选择：</div><div class="line">    1. cascade，级联操作。主表数据被更新（主键值更新），从表也被更新（外键值更新）。主表记录被删除，从表相关记录也被删除。</div><div class="line">    2. <span class="built_in">set</span> null，设置为null。主表数据被更新（主键值更新），从表的外键被设置为null。主表记录被删除，从表相关记录外键被设置成null。但注意，要求该外键列，没有not null属性约束。</div><div class="line">    3. restrict，拒绝父表删除和更新。</div><div class="line"></div><div class="line">    注意，外键只被InnoDB存储引擎所支持。其他引擎是不支持的。</div><div class="line"></div><div class="line"></div><div class="line">/* 建表规范 */ ------------------</div><div class="line">    -- Normal Format, NF</div><div class="line">        - 每个表保存一个实体信息</div><div class="line">        - 每个具有一个ID字段作为主键</div><div class="line">        - ID主键 + 原子表</div><div class="line">    -- 1NF, 第一范式</div><div class="line">        字段不能再分，就满足第一范式。</div><div class="line">    -- 2NF, 第二范式</div><div class="line">        满足第一范式的前提下，不能出现部分依赖。</div><div class="line">        消除符合主键就可以避免部分依赖。增加单列关键字。</div><div class="line">    -- 3NF, 第三范式</div><div class="line">        满足第二范式的前提下，不能出现传递依赖。</div><div class="line">        某个字段依赖于主键，而有其他字段依赖于该字段。这就是传递依赖。</div><div class="line">        将一个实体信息的数据放在一个表内实现。</div><div class="line"></div><div class="line"></div><div class="line">/* select */ ------------------</div><div class="line"></div><div class="line">select [all|distinct] select_expr from -&gt; <span class="built_in">where</span> -&gt; group by [合计函数] -&gt; having -&gt; order by -&gt; <span class="built_in">limit</span></div><div class="line"></div><div class="line">a. select_expr</div><div class="line">    -- 可以用 * 表示所有字段。</div><div class="line">        select * from tb;</div><div class="line">    -- 可以使用表达式（计算公式、函数调用、字段也是个表达式）</div><div class="line">        select stu, 29+25, now() from tb;</div><div class="line">    -- 可以为每个列使用别名。适用于简化列标识，避免多个列标识符重复。</div><div class="line">        - 使用 as 关键字，也可省略 as.</div><div class="line">        select stu+10 as add10 from tb;</div><div class="line"></div><div class="line">b. from 子句</div><div class="line">    用于标识查询来源。</div><div class="line">    -- 可以为表起别名。使用as关键字。</div><div class="line">        select * from tb1 as tt, tb2 as bb;</div><div class="line">    -- from子句后，可以同时出现多个表。</div><div class="line">        -- 多个表会横向叠加到一起，而数据会形成一个笛卡尔积。</div><div class="line">        select * from tb1, tb2;</div><div class="line"></div><div class="line">c. <span class="built_in">where</span> 子句</div><div class="line">    -- 从from获得的数据源中进行筛选。</div><div class="line">    -- 整型1表示真，0表示假。</div><div class="line">    -- 表达式由运算符和运算数组成。</div><div class="line">        -- 运算数：变量（字段）、值、函数返回值</div><div class="line">        -- 运算符：</div><div class="line">            =, &lt;=&gt;, &lt;&gt;, !=, &lt;=, &lt;, &gt;=, &gt;, !, &amp;&amp;, ||, </div><div class="line">            <span class="keyword">in</span> (not) null, (not) like, (not) <span class="keyword">in</span>, (not) between and, is (not), and, or, not, xor</div><div class="line">            is/is not 加上ture/<span class="literal">false</span>/unknown，检验某个值的真假</div><div class="line">            &lt;=&gt;与&lt;&gt;功能相同，&lt;=&gt;可用于null比较</div><div class="line"></div><div class="line">d. group by 子句, 分组子句</div><div class="line">    group by 字段/别名 [排序方式]</div><div class="line">    分组后会进行排序。升序：ASC，降序：DESC</div><div class="line">    </div><div class="line">    以下[合计函数]需配合 group by 使用：</div><div class="line">    count 返回不同的非NULL值数目    count(*)、count(字段)</div><div class="line">    sum 求和</div><div class="line">    max 求最大值</div><div class="line">    min 求最小值</div><div class="line">    avg 求平均值</div><div class="line">    group_concat 返回带有来自一个组的连接的非NULL值的字符串结果。组内字符串连接。</div><div class="line"></div><div class="line">e. having 子句，条件子句</div><div class="line">    与 <span class="built_in">where</span> 功能、用法相同，执行时机不同。</div><div class="line">    <span class="built_in">where</span> 在开始时执行检测数据，对原数据进行过滤。</div><div class="line">    having 对筛选出的结果再次进行过滤。</div><div class="line">    having 字段必须是查询出来的，<span class="built_in">where</span> 字段必须是数据表存在的。</div><div class="line">    <span class="built_in">where</span> 不可以使用字段的别名，having 可以。因为执行WHERE代码时，可能尚未确定列值。</div><div class="line">    <span class="built_in">where</span> 不可以使用合计函数。一般需用合计函数才会用 having</div><div class="line">    SQL标准要求HAVING必须引用GROUP BY子句中的列或用于合计函数中的列。</div><div class="line"></div><div class="line">f. order by 子句，排序子句</div><div class="line">    order by 排序字段/别名 排序方式 [,排序字段/别名 排序方式]...</div><div class="line">    升序：ASC，降序：DESC</div><div class="line">    支持多个字段的排序。</div><div class="line"></div><div class="line">g. <span class="built_in">limit</span> 子句，限制结果数量子句</div><div class="line">    仅对处理好的结果进行数量限制。将处理好的结果的看作是一个集合，按照记录出现的顺序，索引从0开始。</div><div class="line">    <span class="built_in">limit</span> 起始位置, 获取条数</div><div class="line">    省略第一个参数，表示从索引0开始。<span class="built_in">limit</span> 获取条数</div><div class="line"></div><div class="line">h. distinct, all 选项</div><div class="line">    distinct 去除重复记录</div><div class="line">    默认为 all, 全部记录</div><div class="line"></div><div class="line"></div><div class="line">/* UNION */ ------------------</div><div class="line">    将多个select查询的结果组合成一个结果集合。</div><div class="line">    SELECT ... UNION [ALL|DISTINCT] SELECT ...</div><div class="line">    默认 DISTINCT 方式，即所有返回的行都是唯一的</div><div class="line">    建议，对每个SELECT查询加上小括号包裹。</div><div class="line">    ORDER BY 排序时，需加上 LIMIT 进行结合。</div><div class="line">    需要各select查询的字段数量一样。</div><div class="line">    每个select查询的字段列表(数量、类型)应一致，因为结果中的字段名以第一条select语句为准。</div><div class="line"></div><div class="line"></div><div class="line">/* 子查询 */ ------------------</div><div class="line">    - 子查询需用括号包裹。</div><div class="line">-- from型</div><div class="line">    from后要求是一个表，必须给子查询结果取个别名。</div><div class="line">    - 简化每个查询内的条件。</div><div class="line">    - from型需将结果生成一个临时表格，可用以原表的锁定的释放。</div><div class="line">    - 子查询返回一个表，表型子查询。</div><div class="line">    select * from (select * from tb <span class="built_in">where</span> id&gt;0) as subfrom <span class="built_in">where</span> id&gt;1;</div><div class="line">-- <span class="built_in">where</span>型</div><div class="line">    - 子查询返回一个值，标量子查询。</div><div class="line">    - 不需要给子查询取别名。</div><div class="line">    - <span class="built_in">where</span>子查询内的表，不能直接用以更新。</div><div class="line">    select * from tb <span class="built_in">where</span> money = (select max(money) from tb);</div><div class="line">    -- 列子查询</div><div class="line">        如果子查询结果返回的是一列。</div><div class="line">        使用 <span class="keyword">in</span> 或 not <span class="keyword">in</span> 完成查询</div><div class="line">        exists 和 not exists 条件</div><div class="line">            如果子查询返回数据，则返回1或0。常用于判断条件。</div><div class="line">            select column1 from t1 <span class="built_in">where</span> exists (select * from t2);</div><div class="line">    -- 行子查询</div><div class="line">        查询条件是一个行。</div><div class="line">        select * from t1 <span class="built_in">where</span> (id, gender) <span class="keyword">in</span> (select id, gender from t2);</div><div class="line">        行构造符：(col1, col2, ...) 或 ROW(col1, col2, ...)</div><div class="line">        行构造符通常用于与对能返回两个或两个以上列的子查询进行比较。</div><div class="line"></div><div class="line">    -- 特殊运算符</div><div class="line">    != all()    相当于 not <span class="keyword">in</span></div><div class="line">    = some()    相当于 <span class="keyword">in</span>。any 是 some 的别名</div><div class="line">    != some()    不等同于 not <span class="keyword">in</span>，不等于其中某一个。</div><div class="line">    all, some 可以配合其他运算符一起使用。</div><div class="line"></div><div class="line"></div><div class="line">/* 连接查询(join) */ ------------------</div><div class="line">    将多个表的字段进行连接，可以指定连接条件。</div><div class="line">-- 内连接(inner join)</div><div class="line">    - 默认就是内连接，可省略inner。</div><div class="line">    - 只有数据存在时才能发送连接。即连接结果不能出现空行。</div><div class="line">    on 表示连接条件。其条件表达式与<span class="built_in">where</span>类似。也可以省略条件（表示条件永远为真）</div><div class="line">    也可用<span class="built_in">where</span>表示连接条件。</div><div class="line">    还有 using, 但需字段名相同。 using(字段名)</div><div class="line"></div><div class="line">    -- 交叉连接 cross join</div><div class="line">        即，没有条件的内连接。</div><div class="line">        select * from tb1 cross join tb2;</div><div class="line">-- 外连接(outer join)</div><div class="line">    - 如果数据不存在，也会出现在连接结果中。</div><div class="line">    -- 左外连接 left join</div><div class="line">        如果数据不存在，左表记录会出现，而右表为null填充</div><div class="line">    -- 右外连接 right join</div><div class="line">        如果数据不存在，右表记录会出现，而左表为null填充</div><div class="line">-- 自然连接(natural join)</div><div class="line">    自动判断连接条件完成连接。</div><div class="line">    相当于省略了using，会自动查找相同字段名。</div><div class="line">    natural join</div><div class="line">    natural left join</div><div class="line">    natural right join</div><div class="line"></div><div class="line">select info.id, info.name, info.stu_num, extra_info.hobby, extra_info.sex from info, extra_info <span class="built_in">where</span> info.stu_num = extra_info.stu_id;</div><div class="line"></div><div class="line">/* 导入导出 */ ------------------</div><div class="line">select * into outfile 文件地址 [控制格式] from 表名;    -- 导出表数据</div><div class="line">load data [<span class="built_in">local</span>] infile 文件地址 [replace|ignore] into table 表名 [控制格式];    -- 导入数据</div><div class="line">    生成的数据默认的分隔符是制表符</div><div class="line">    <span class="built_in">local</span>未指定，则数据文件必须在服务器上</div><div class="line">    replace 和 ignore 关键词控制对现有的唯一键记录的重复的处理</div><div class="line">-- 控制格式</div><div class="line">fields    控制字段格式</div><div class="line">默认：fields terminated by <span class="string">'\t'</span> enclosed by <span class="string">''</span> escaped by <span class="string">'\\'</span></div><div class="line">    terminated by <span class="string">'string'</span>    -- 终止</div><div class="line">    enclosed by <span class="string">'char'</span>        -- 包裹</div><div class="line">    escaped by <span class="string">'char'</span>        -- 转义</div><div class="line">    -- 示例：</div><div class="line">        SELECT a,b,a+b INTO OUTFILE <span class="string">'/tmp/result.text'</span></div><div class="line">        FIELDS TERMINATED BY <span class="string">','</span> OPTIONALLY ENCLOSED BY <span class="string">'"'</span></div><div class="line">        LINES TERMINATED BY <span class="string">'\n'</span></div><div class="line">        FROM <span class="built_in">test</span>_table;</div><div class="line">lines    控制行格式</div><div class="line">默认：lines terminated by <span class="string">'\n'</span></div><div class="line">    terminated by <span class="string">'string'</span>    -- 终止</div><div class="line">    </div><div class="line">/* insert */ ------------------</div><div class="line">select语句获得的数据可以用insert插入。</div><div class="line"></div><div class="line">可以省略对列的指定，要求 values () 括号内，提供给了按照列顺序出现的所有字段的值。</div><div class="line">    或者使用<span class="built_in">set</span>语法。</div><div class="line">    insert into tbl_name <span class="built_in">set</span> field=value,...；</div><div class="line"></div><div class="line">可以一次性使用多个值，采用(), (), ();的形式。</div><div class="line">    insert into tbl_name values (), (), ();</div><div class="line"></div><div class="line">可以在列值指定时，使用表达式。</div><div class="line">    insert into tbl_name values (field_value, 10+10, now());</div><div class="line">可以使用一个特殊值 default，表示该列使用默认值。</div><div class="line">    insert into tbl_name values (field_value, default);</div><div class="line"></div><div class="line">可以通过一个查询的结果，作为需要插入的值。</div><div class="line">    insert into tbl_name select ...;</div><div class="line"></div><div class="line">可以指定在插入的值出现主键（或唯一索引）冲突时，更新其他非主键列的信息。</div><div class="line">    insert into tbl_name values/<span class="built_in">set</span>/select on duplicate key update 字段=值, …;</div><div class="line"></div><div class="line">/* delete */ ------------------</div><div class="line">DELETE FROM tbl_name [WHERE <span class="built_in">where</span>_definition] [ORDER BY ...] [LIMIT row_count]</div><div class="line"></div><div class="line">按照条件删除</div><div class="line"></div><div class="line">指定删除的最多记录数。Limit</div><div class="line"></div><div class="line">可以通过排序条件删除。order by + <span class="built_in">limit</span></div><div class="line"></div><div class="line">支持多表删除，使用类似连接语法。</div><div class="line">delete from 需要删除数据多表1，表2 using 表连接操作 条件。</div><div class="line"></div><div class="line">/* truncate */ ------------------</div><div class="line">TRUNCATE [TABLE] tbl_name</div><div class="line">清空数据</div><div class="line">删除重建表</div><div class="line"></div><div class="line">区别：</div><div class="line">1，truncate 是删除表再创建，delete 是逐条删除</div><div class="line">2，truncate 重置auto_increment的值。而delete不会</div><div class="line">3，truncate 不知道删除了几条，而delete知道。</div><div class="line">4，当被用于带分区的表时，truncate 会保留分区</div><div class="line"></div><div class="line"></div><div class="line">/* 备份与还原 */ ------------------</div><div class="line">备份，将数据的结构与表内数据保存起来。</div><div class="line">利用 mysqldump 指令完成。</div><div class="line"></div><div class="line">-- 导出</div><div class="line">1. 导出一张表</div><div class="line">　　mysqldump -u用户名 -p密码 库名 表名 &gt; 文件名(D:/a.sql)</div><div class="line">2. 导出多张表</div><div class="line">　　mysqldump -u用户名 -p密码 库名 表1 表2 表3 &gt; 文件名(D:/a.sql)</div><div class="line">3. 导出所有表</div><div class="line">　　mysqldump -u用户名 -p密码 库名 &gt; 文件名(D:/a.sql)</div><div class="line">4. 导出一个库 </div><div class="line">　　mysqldump -u用户名 -p密码 -B 库名 &gt; 文件名(D:/a.sql)</div><div class="line"></div><div class="line">可以-w携带备份条件</div><div class="line"></div><div class="line">-- 导入</div><div class="line">1. 在登录mysql的情况下：</div><div class="line">　　<span class="built_in">source</span>  备份文件</div><div class="line">2. 在不登录的情况下</div><div class="line">　　mysql -u用户名 -p密码 库名 &lt; 备份文件</div><div class="line"></div><div class="line"></div><div class="line">/* 视图 */ ------------------</div><div class="line">什么是视图：</div><div class="line">    视图是一个虚拟表，其内容由查询定义。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并不在数据库中以存储的数据值集形式存在。行和列数据来自由定义视图的查询所引用的表，并且在引用视图时动态生成。</div><div class="line">    视图具有表结构文件，但不存在数据文件。</div><div class="line">    对其中所引用的基础表来说，视图的作用类似于筛选。定义视图的筛选可以来自当前或其它数据库的一个或多个表，或者其它视图。通过视图进行查询没有任何限制，通过它们进行数据修改时的限制也很少。</div><div class="line">    视图是存储在数据库中的查询的sql语句，它主要出于两种原因：安全原因，视图可以隐藏一些数据，如：社会保险基金表，可以用视图只显示姓名，地址，而不显示社会保险号和工资数等，另一原因是可使复杂的查询易于理解和使用。</div><div class="line"></div><div class="line">-- 创建视图</div><div class="line">CREATE [OR REPLACE] [ALGORITHM = &#123;UNDEFINED | MERGE | TEMPTABLE&#125;] VIEW view_name [(column_list)] AS select_statement</div><div class="line">    - 视图名必须唯一，同时不能与表重名。</div><div class="line">    - 视图可以使用select语句查询到的列名，也可以自己指定相应的列名。</div><div class="line">    - 可以指定视图执行的算法，通过ALGORITHM指定。</div><div class="line">    - column_list如果存在，则数目必须等于SELECT语句检索的列数</div><div class="line"></div><div class="line">-- 查看结构</div><div class="line">    SHOW CREATE VIEW view_name </div><div class="line"></div><div class="line">-- 删除视图</div><div class="line">    - 删除视图后，数据依然存在。</div><div class="line">    - 可同时删除多个视图。</div><div class="line">    DROP VIEW [IF EXISTS] view_name ...</div><div class="line"></div><div class="line">-- 修改视图结构</div><div class="line">    - 一般不修改视图，因为不是所有的更新视图都会映射到表上。</div><div class="line">    ALTER VIEW view_name [(column_list)] AS select_statement</div><div class="line"></div><div class="line">-- 视图作用</div><div class="line">    1. 简化业务逻辑</div><div class="line">    2. 对客户端隐藏真实的表结构</div><div class="line"></div><div class="line">-- 视图算法(ALGORITHM)</div><div class="line">    MERGE        合并</div><div class="line">        将视图的查询语句，与外部查询需要先合并再执行！</div><div class="line">    TEMPTABLE    临时表</div><div class="line">        将视图执行完毕后，形成临时表，再做外层查询！</div><div class="line">    UNDEFINED    未定义(默认)，指的是MySQL自主去选择相应的算法。</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">/* 事务(transaction) */ ------------------</div><div class="line">事务是指逻辑上的一组操作，组成这组操作的各个单元，要不全成功要不全失败。 </div><div class="line">    - 支持连续SQL的集体成功或集体撤销。</div><div class="line">    - 事务是数据库在数据晚自习方面的一个功能。</div><div class="line">    - 需要利用 InnoDB 或 BDB 存储引擎，对自动提交的特性支持完成。</div><div class="line">    - InnoDB被称为事务安全型引擎。</div><div class="line"></div><div class="line">-- 事务开启</div><div class="line">    START TRANSACTION; 或者 BEGIN;</div><div class="line">    开启事务后，所有被执行的SQL语句均被认作当前事务内的SQL语句。</div><div class="line">-- 事务提交</div><div class="line">    COMMIT;</div><div class="line">-- 事务回滚</div><div class="line">    ROLLBACK;</div><div class="line">    如果部分操作发生问题，映射到事务开启前。</div><div class="line"></div><div class="line">-- 事务的特性</div><div class="line">    1. 原子性（Atomicity）</div><div class="line">        事务是一个不可分割的工作单位，事务中的操作要么都发生，要么都不发生。</div><div class="line">    2. 一致性（Consistency）</div><div class="line">        事务前后数据的完整性必须保持一致。</div><div class="line">        - 事务开始和结束时，外部数据一致</div><div class="line">        - 在整个事务过程中，操作是连续的</div><div class="line">    3. 隔离性（Isolation）</div><div class="line">        多个用户并发访问数据库时，一个用户的事务不能被其它用户的事物所干扰，多个并发事务之间的数据要相互隔离。</div><div class="line">    4. 持久性（Durability）</div><div class="line">        一个事务一旦被提交，它对数据库中的数据改变就是永久性的。</div><div class="line"></div><div class="line">-- 事务的实现</div><div class="line">    1. 要求是事务支持的表类型</div><div class="line">    2. 执行一组相关的操作前开启事务</div><div class="line">    3. 整组操作完成后，都成功，则提交；如果存在失败，选择回滚，则会回到事务开始的备份点。</div><div class="line"></div><div class="line">-- 事务的原理</div><div class="line">    利用InnoDB的自动提交(autocommit)特性完成。</div><div class="line">    普通的MySQL执行语句后，当前的数据提交操作均可被其他客户端可见。</div><div class="line">    而事务是暂时关闭“自动提交”机制，需要commit提交持久化数据操作。</div><div class="line"></div><div class="line">-- 注意</div><div class="line">    1. 数据定义语言（DDL）语句不能被回滚，比如创建或取消数据库的语句，和创建、取消或更改表或存储的子程序的语句。</div><div class="line">    2. 事务不能被嵌套</div><div class="line"></div><div class="line">-- 保存点</div><div class="line">    SAVEPOINT 保存点名称 -- 设置一个事务保存点</div><div class="line">    ROLLBACK TO SAVEPOINT 保存点名称 -- 回滚到保存点</div><div class="line">    RELEASE SAVEPOINT 保存点名称 -- 删除保存点</div><div class="line"></div><div class="line">-- InnoDB自动提交特性设置</div><div class="line">    SET autocommit = 0|1;    0表示关闭自动提交，1表示开启自动提交。</div><div class="line">    - 如果关闭了，那普通操作的结果对其他客户端也不可见，需要commit提交后才能持久化数据操作。</div><div class="line">    - 也可以关闭自动提交来开启事务。但与START TRANSACTION不同的是，</div><div class="line">        SET autocommit是永久改变服务器的设置，直到下次再次修改该设置。(针对当前连接)</div><div class="line">        而START TRANSACTION记录开启前的状态，而一旦事务提交或回滚后就需要再次开启事务。(针对当前事务)</div><div class="line"></div><div class="line"></div><div class="line">/* 锁表 */</div><div class="line">表锁定只用于防止其它客户端进行不正当地读取和写入</div><div class="line">MyISAM 支持表锁，InnoDB 支持行锁</div><div class="line">-- 锁定</div><div class="line">    LOCK TABLES tbl_name [AS <span class="built_in">alias</span>]</div><div class="line">-- 解锁</div><div class="line">    UNLOCK TABLES</div><div class="line"></div><div class="line"></div><div class="line">/* 触发器 */ ------------------</div><div class="line">    触发程序是与表有关的命名数据库对象，当该表出现特定事件时，将激活该对象</div><div class="line">    监听：记录的增加、修改、删除。</div><div class="line"></div><div class="line">-- 创建触发器</div><div class="line">CREATE TRIGGER trigger_name trigger_time trigger_event ON tbl_name FOR EACH ROW trigger_stmt</div><div class="line">    参数：</div><div class="line">    trigger_time是触发程序的动作时间。它可以是 before 或 after，以指明触发程序是在激活它的语句之前或之后触发。</div><div class="line">    trigger_event指明了激活触发程序的语句的类型</div><div class="line">        INSERT：将新行插入表时激活触发程序</div><div class="line">        UPDATE：更改某一行时激活触发程序</div><div class="line">        DELETE：从表中删除某一行时激活触发程序</div><div class="line">    tbl_name：监听的表，必须是永久性的表，不能将触发程序与TEMPORARY表或视图关联起来。</div><div class="line">    trigger_stmt：当触发程序激活时执行的语句。执行多个语句，可使用BEGIN...END复合语句结构</div><div class="line"></div><div class="line">-- 删除</div><div class="line">DROP TRIGGER [schema_name.]trigger_name</div><div class="line"></div><div class="line">可以使用old和new代替旧的和新的数据</div><div class="line">    更新操作，更新前是old，更新后是new.</div><div class="line">    删除操作，只有old.</div><div class="line">    增加操作，只有new.</div><div class="line"></div><div class="line">-- 注意</div><div class="line">    1. 对于具有相同触发程序动作时间和事件的给定表，不能有两个触发程序。</div><div class="line"></div><div class="line"></div><div class="line">-- 字符连接函数</div><div class="line">concat(str1[, str2,...])</div><div class="line"></div><div class="line">-- 分支语句</div><div class="line"><span class="keyword">if</span> 条件 <span class="keyword">then</span></div><div class="line">    执行语句</div><div class="line">elseif 条件 <span class="keyword">then</span></div><div class="line">    执行语句</div><div class="line"><span class="keyword">else</span></div><div class="line">    执行语句</div><div class="line">end <span class="keyword">if</span>;</div><div class="line"></div><div class="line">-- 修改最外层语句结束符</div><div class="line">delimiter 自定义结束符号</div><div class="line">    SQL语句</div><div class="line">自定义结束符号</div><div class="line"></div><div class="line">delimiter ;        -- 修改回原来的分号</div><div class="line"></div><div class="line">-- 语句块包裹</div><div class="line">begin</div><div class="line">    语句块</div><div class="line">end</div><div class="line"></div><div class="line">-- 特殊的执行</div><div class="line">1. 只要添加记录，就会触发程序。</div><div class="line">2. Insert into on duplicate key update 语法会触发：</div><div class="line">    如果没有重复记录，会触发 before insert, after insert;</div><div class="line">    如果有重复记录并更新，会触发 before insert, before update, after update;</div><div class="line">    如果有重复记录但是没有发生更新，则触发 before insert, before update</div><div class="line">3. Replace 语法 如果有记录，则执行 before insert, before delete, after delete, after insert</div><div class="line"></div><div class="line"></div><div class="line">/* SQL编程 */ ------------------</div><div class="line"></div><div class="line">--// 局部变量 ----------</div><div class="line">-- 变量声明</div><div class="line">    <span class="built_in">declare</span> var_name[,...] <span class="built_in">type</span> [default value] </div><div class="line">    这个语句被用来声明局部变量。要给变量提供一个默认值，请包含一个default子句。值可以被指定为一个表达式，不需要为一个常数。如果没有default子句，初始值为null。 </div><div class="line"></div><div class="line">-- 赋值</div><div class="line">    使用 <span class="built_in">set</span> 和 select into 语句为变量赋值。</div><div class="line"></div><div class="line">    - 注意：在函数内是可以使用全局变量（用户自定义的变量）</div><div class="line"></div><div class="line"></div><div class="line">--// 全局变量 ----------</div><div class="line">-- 定义、赋值</div><div class="line"><span class="built_in">set</span> 语句可以定义并为变量赋值。</div><div class="line"><span class="built_in">set</span> @var = value;</div><div class="line">也可以使用select into语句为变量初始化并赋值。这样要求select语句只能返回一行，但是可以是多个字段，就意味着同时为多个变量进行赋值，变量的数量需要与查询的列数一致。</div><div class="line">还可以把赋值语句看作一个表达式，通过select执行完成。此时为了避免=被当作关系运算符看待，使用:=代替。（<span class="built_in">set</span>语句可以使用= 和 :=）。</div><div class="line">select @var:=20;</div><div class="line">select @v1:=id, @v2=name from t1 <span class="built_in">limit</span> 1;</div><div class="line">select * from tbl_name <span class="built_in">where</span> @var:=30;</div><div class="line"></div><div class="line">select into 可以将表中查询获得的数据赋给变量。</div><div class="line">    -| select max(height) into @max_height from tb;</div><div class="line"></div><div class="line">-- 自定义变量名</div><div class="line">为了避免select语句中，用户自定义的变量与系统标识符（通常是字段名）冲突，用户自定义变量在变量名前使用@作为开始符号。</div><div class="line">@var=10;</div><div class="line"></div><div class="line">    - 变量被定义后，在整个会话周期都有效（登录到退出）</div><div class="line"></div><div class="line"></div><div class="line">--// 控制结构 ----------</div><div class="line">-- <span class="keyword">if</span>语句</div><div class="line"><span class="keyword">if</span> search_condition <span class="keyword">then</span> </div><div class="line">    statement_list    </div><div class="line">[elseif search_condition <span class="keyword">then</span></div><div class="line">    statement_list]</div><div class="line">...</div><div class="line">[<span class="keyword">else</span></div><div class="line">    statement_list]</div><div class="line">end <span class="keyword">if</span>;</div><div class="line"></div><div class="line">-- <span class="keyword">case</span>语句</div><div class="line">CASE value WHEN [compare-value] THEN result</div><div class="line">[WHEN [compare-value] THEN result ...]</div><div class="line">[ELSE result]</div><div class="line">END</div><div class="line"></div><div class="line"></div><div class="line">-- <span class="keyword">while</span>循环</div><div class="line">[begin_label:] <span class="keyword">while</span> search_condition <span class="keyword">do</span></div><div class="line">    statement_list</div><div class="line">end <span class="keyword">while</span> [end_label];</div><div class="line"></div><div class="line">- 如果需要在循环内提前终止 <span class="keyword">while</span>循环，则需要使用标签；标签需要成对出现。</div><div class="line"></div><div class="line">    -- 退出循环</div><div class="line">        退出整个循环 leave</div><div class="line">        退出当前循环 iterate</div><div class="line">        通过退出的标签决定退出哪个循环</div><div class="line"></div><div class="line"></div><div class="line">--// 内置函数 ----------</div><div class="line">-- 数值函数</div><div class="line">abs(x)            -- 绝对值 abs(-10.9) = 10</div><div class="line">format(x, d)    -- 格式化千分位数值 format(1234567.456, 2) = 1,234,567.46</div><div class="line">ceil(x)            -- 向上取整 ceil(10.1) = 11</div><div class="line">floor(x)        -- 向下取整 floor (10.1) = 10</div><div class="line">round(x)        -- 四舍五入去整</div><div class="line">mod(m, n)        -- m%n m mod n 求余 10%3=1</div><div class="line">pi()            -- 获得圆周率</div><div class="line">pow(m, n)        -- m^n</div><div class="line">sqrt(x)            -- 算术平方根</div><div class="line">rand()            -- 随机数</div><div class="line">truncate(x, d)    -- 截取d位小数</div><div class="line"></div><div class="line">-- 时间日期函数</div><div class="line">now(), current_timestamp();     -- 当前日期时间</div><div class="line">current_date();                    -- 当前日期</div><div class="line">current_time();                    -- 当前时间</div><div class="line">date(<span class="string">'yyyy-mm-dd hh:ii:ss'</span>);    -- 获取日期部分</div><div class="line">time(<span class="string">'yyyy-mm-dd hh:ii:ss'</span>);    -- 获取时间部分</div><div class="line">date_format(<span class="string">'yyyy-mm-dd hh:ii:ss'</span>, <span class="string">'%d %y %a %d %m %b %j'</span>);    -- 格式化时间</div><div class="line">unix_timestamp();                -- 获得unix时间戳</div><div class="line">from_unixtime();                -- 从时间戳获得时间</div><div class="line"></div><div class="line">-- 字符串函数</div><div class="line">length(string)            -- string长度，字节</div><div class="line">char_length(string)        -- string的字符个数</div><div class="line">substring(str, position [,length])        -- 从str的position开始,取length个字符</div><div class="line">replace(str ,search_str ,replace_str)    -- 在str中用replace_str替换search_str</div><div class="line">instr(string ,substring)    -- 返回substring首次在string中出现的位置</div><div class="line">concat(string [,...])    -- 连接字串</div><div class="line">charset(str)            -- 返回字串字符集</div><div class="line">lcase(string)            -- 转换成小写</div><div class="line">left(string, length)    -- 从string2中的左边起取length个字符</div><div class="line">load_file(file_name)    -- 从文件读取内容</div><div class="line">locate(substring, string [,start_position])    -- 同instr,但可指定开始位置</div><div class="line">lpad(string, length, pad)    -- 重复用pad加在string开头,直到字串长度为length</div><div class="line">ltrim(string)            -- 去除前端空格</div><div class="line">repeat(string, count)    -- 重复count次</div><div class="line">rpad(string, length, pad)    --在str后用pad补充,直到长度为length</div><div class="line">rtrim(string)            -- 去除后端空格</div><div class="line">strcmp(string1 ,string2)    -- 逐字符比较两字串大小</div><div class="line"></div><div class="line">-- 流程函数</div><div class="line"><span class="keyword">case</span> when [condition] <span class="keyword">then</span> result [when [condition] <span class="keyword">then</span> result ...] [<span class="keyword">else</span> result] end   多分支</div><div class="line"><span class="keyword">if</span>(expr1,expr2,expr3)  双分支。</div><div class="line"></div><div class="line">-- 聚合函数</div><div class="line">count()</div><div class="line">sum();</div><div class="line">max();</div><div class="line">min();</div><div class="line">avg();</div><div class="line">group_concat()</div><div class="line"></div><div class="line">-- 其他常用函数</div><div class="line">md5();</div><div class="line">default();</div><div class="line"></div><div class="line"></div><div class="line">--// 存储函数，自定义函数 ----------</div><div class="line">-- 新建</div><div class="line">    CREATE FUNCTION <span class="keyword">function</span>_name (参数列表) RETURNS 返回值类型</div><div class="line">        函数体</div><div class="line"></div><div class="line">    - 函数名，应该合法的标识符，并且不应该与已有的关键字冲突。</div><div class="line">    - 一个函数应该属于某个数据库，可以使用db_name.funciton_name的形式执行当前函数所属数据库，否则为当前数据库。</div><div class="line">    - 参数部分，由<span class="string">"参数名"</span>和<span class="string">"参数类型"</span>组成。多个参数用逗号隔开。</div><div class="line">    - 函数体由多条可用的mysql语句，流程控制，变量声明等语句构成。</div><div class="line">    - 多条语句应该使用 begin...end 语句块包含。</div><div class="line">    - 一定要有 <span class="built_in">return</span> 返回值语句。</div><div class="line"></div><div class="line">-- 删除</div><div class="line">    DROP FUNCTION [IF EXISTS] <span class="keyword">function</span>_name;</div><div class="line"></div><div class="line">-- 查看</div><div class="line">    SHOW FUNCTION STATUS LIKE <span class="string">'partten'</span></div><div class="line">    SHOW CREATE FUNCTION <span class="keyword">function</span>_name;</div><div class="line"></div><div class="line">-- 修改</div><div class="line">    ALTER FUNCTION <span class="keyword">function</span>_name 函数选项</div><div class="line"></div><div class="line"></div><div class="line">--// 存储过程，自定义功能 ----------</div><div class="line">-- 定义</div><div class="line">存储存储过程 是一段代码（过程），存储在数据库中的sql组成。</div><div class="line">一个存储过程通常用于完成一段业务逻辑，例如报名，交班费，订单入库等。</div><div class="line">而一个函数通常专注与某个功能，视为其他程序服务的，需要在其他语句中调用函数才可以，而存储过程不能被其他调用，是自己执行 通过call执行。</div><div class="line"></div><div class="line">-- 创建</div><div class="line">CREATE PROCEDURE sp_name (参数列表)</div><div class="line">    过程体</div><div class="line"></div><div class="line">参数列表：不同于函数的参数列表，需要指明参数类型</div><div class="line">IN，表示输入型</div><div class="line">OUT，表示输出型</div><div class="line">INOUT，表示混合型</div><div class="line"></div><div class="line">注意，没有返回值。</div><div class="line"></div><div class="line"></div><div class="line">/* 存储过程 */ ------------------</div><div class="line">存储过程是一段可执行性代码的集合。相比函数，更偏向于业务逻辑。</div><div class="line">调用：CALL 过程名</div><div class="line">-- 注意</div><div class="line">- 没有返回值。</div><div class="line">- 只能单独调用，不可夹杂在其他语句中</div><div class="line"></div><div class="line">-- 参数</div><div class="line">IN|OUT|INOUT 参数名 数据类型</div><div class="line">IN        输入：在调用过程中，将数据输入到过程体内部的参数</div><div class="line">OUT        输出：在调用过程中，将过程体处理完的结果返回到客户端</div><div class="line">INOUT    输入输出：既可输入，也可输出</div><div class="line"></div><div class="line">-- 语法</div><div class="line">CREATE PROCEDURE 过程名 (参数列表)</div><div class="line">BEGIN</div><div class="line">    过程体</div><div class="line">END</div><div class="line"></div><div class="line"></div><div class="line">/* 用户和权限管理 */ ------------------</div><div class="line">用户信息表：mysql.user</div><div class="line">-- 刷新权限</div><div class="line">FLUSH PRIVILEGES</div><div class="line">-- 增加用户</div><div class="line">CREATE USER 用户名 IDENTIFIED BY [PASSWORD] 密码(字符串)</div><div class="line">    - 必须拥有mysql数据库的全局CREATE USER权限，或拥有INSERT权限。</div><div class="line">    - 只能创建用户，不能赋予权限。</div><div class="line">    - 用户名，注意引号：如 <span class="string">'user_name'</span>@<span class="string">'192.168.1.1'</span></div><div class="line">    - 密码也需引号，纯数字密码也要加引号</div><div class="line">    - 要在纯文本中指定密码，需忽略PASSWORD关键词。要把密码指定为由PASSWORD()函数返回的混编值，需包含关键字PASSWORD</div><div class="line">-- 重命名用户</div><div class="line">RENAME USER old_user TO new_user</div><div class="line">-- 设置密码</div><div class="line">SET PASSWORD = PASSWORD(<span class="string">'密码'</span>)    -- 为当前用户设置密码</div><div class="line">SET PASSWORD FOR 用户名 = PASSWORD(<span class="string">'密码'</span>)    -- 为指定用户设置密码</div><div class="line">-- 删除用户</div><div class="line">DROP USER 用户名</div><div class="line">-- 分配权限/添加用户</div><div class="line">GRANT 权限列表 ON 表名 TO 用户名 [IDENTIFIED BY [PASSWORD] <span class="string">'password'</span>]</div><div class="line">    - all privileges 表示所有权限</div><div class="line">    - *.* 表示所有库的所有表</div><div class="line">    - 库名.表名 表示某库下面的某表</div><div class="line">-- 查看权限</div><div class="line">SHOW GRANTS FOR 用户名</div><div class="line">    -- 查看当前用户权限</div><div class="line">    SHOW GRANTS; 或 SHOW GRANTS FOR CURRENT_USER; 或 SHOW GRANTS FOR CURRENT_USER();</div><div class="line">-- 撤消权限</div><div class="line">REVOKE 权限列表 ON 表名 FROM 用户名</div><div class="line">REVOKE ALL PRIVILEGES, GRANT OPTION FROM 用户名    -- 撤销所有权限</div><div class="line">-- 权限层级</div><div class="line">-- 要使用GRANT或REVOKE，您必须拥有GRANT OPTION权限，并且您必须用于您正在授予或撤销的权限。</div><div class="line">全局层级：全局权限适用于一个给定服务器中的所有数据库，mysql.user</div><div class="line">    GRANT ALL ON *.*和 REVOKE ALL ON *.*只授予和撤销全局权限。</div><div class="line">数据库层级：数据库权限适用于一个给定数据库中的所有目标，mysql.db, mysql.host</div><div class="line">    GRANT ALL ON db_name.*和REVOKE ALL ON db_name.*只授予和撤销数据库权限。</div><div class="line">表层级：表权限适用于一个给定表中的所有列，mysql.talbes_priv</div><div class="line">    GRANT ALL ON db_name.tbl_name和REVOKE ALL ON db_name.tbl_name只授予和撤销表权限。</div><div class="line">列层级：列权限适用于一个给定表中的单一列，mysql.columns_priv</div><div class="line">    当使用REVOKE时，您必须指定与被授权列相同的列。</div><div class="line">-- 权限列表</div><div class="line">ALL [PRIVILEGES]    -- 设置除GRANT OPTION之外的所有简单权限</div><div class="line">ALTER    -- 允许使用ALTER TABLE</div><div class="line">ALTER ROUTINE    -- 更改或取消已存储的子程序</div><div class="line">CREATE    -- 允许使用CREATE TABLE</div><div class="line">CREATE ROUTINE    -- 创建已存储的子程序</div><div class="line">CREATE TEMPORARY TABLES        -- 允许使用CREATE TEMPORARY TABLE</div><div class="line">CREATE USER        -- 允许使用CREATE USER, DROP USER, RENAME USER和REVOKE ALL PRIVILEGES。</div><div class="line">CREATE VIEW        -- 允许使用CREATE VIEW</div><div class="line">DELETE    -- 允许使用DELETE</div><div class="line">DROP    -- 允许使用DROP TABLE</div><div class="line">EXECUTE        -- 允许用户运行已存储的子程序</div><div class="line">FILE    -- 允许使用SELECT...INTO OUTFILE和LOAD DATA INFILE</div><div class="line">INDEX     -- 允许使用CREATE INDEX和DROP INDEX</div><div class="line">INSERT    -- 允许使用INSERT</div><div class="line">LOCK TABLES        -- 允许对您拥有SELECT权限的表使用LOCK TABLES</div><div class="line">PROCESS     -- 允许使用SHOW FULL PROCESSLIST</div><div class="line">REFERENCES    -- 未被实施</div><div class="line">RELOAD    -- 允许使用FLUSH</div><div class="line">REPLICATION CLIENT    -- 允许用户询问从属服务器或主服务器的地址</div><div class="line">REPLICATION SLAVE    -- 用于复制型从属服务器（从主服务器中读取二进制日志事件）</div><div class="line">SELECT    -- 允许使用SELECT</div><div class="line">SHOW DATABASES    -- 显示所有数据库</div><div class="line">SHOW VIEW    -- 允许使用SHOW CREATE VIEW</div><div class="line">SHUTDOWN    -- 允许使用mysqladmin shutdown</div><div class="line">SUPER    -- 允许使用CHANGE MASTER, KILL, PURGE MASTER LOGS和SET GLOBAL语句，mysqladmin debug命令；允许您连接（一次），即使已达到max_connections。</div><div class="line">UPDATE    -- 允许使用UPDATE</div><div class="line">USAGE    -- “无权限”的同义词</div><div class="line">GRANT OPTION    -- 允许授予权限</div><div class="line"></div><div class="line"></div><div class="line">/* 表维护 */</div><div class="line">-- 分析和存储表的关键字分布</div><div class="line">ANALYZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE 表名 ...</div><div class="line">-- 检查一个或多个表是否有错误</div><div class="line">CHECK TABLE tbl_name [, tbl_name] ... [option] ...</div><div class="line">option = &#123;QUICK | FAST | MEDIUM | EXTENDED | CHANGED&#125;</div><div class="line">-- 整理数据文件的碎片</div><div class="line">OPTIMIZE [LOCAL | NO_WRITE_TO_BINLOG] TABLE tbl_name [, tbl_name] ...</div><div class="line"></div><div class="line"></div><div class="line">/* 杂项 */ ------------------</div><div class="line">1. 可用反引号（`）为标识符（库名、表名、字段名、索引、别名）包裹，以避免与关键字重名！中文也可以作为标识符！</div><div class="line">2. 每个库目录存在一个保存当前数据库的选项文件db.opt。</div><div class="line">3. 注释：</div><div class="line">    单行注释 <span class="comment"># 注释内容</span></div><div class="line">    多行注释 /* 注释内容 */</div><div class="line">    单行注释 -- 注释内容        (标准SQL注释风格，要求双破折号后加一空格符（空格、TAB、换行等）)</div><div class="line">4. 模式通配符：</div><div class="line">    _    任意单个字符</div><div class="line">    %    任意多个字符，甚至包括零字符</div><div class="line">    单引号需要进行转义 \<span class="string">'</span></div><div class="line">5. CMD命令行内的语句结束符可以为 ";", "\G", "\g"，仅影响显示结果。其他地方还是用分号结束。delimiter 可修改当前对话的语句结束符。</div><div class="line">6. SQL对大小写不敏感</div><div class="line">7. 清除已有语句：\c</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac下Redis环境搭建</title>
    <link href="http://shadow000902.space/2017/06/18/Mac%E4%B8%8BRedis%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://shadow000902.space/2017/06/18/Mac下Redis环境搭建/</id>
    <published>2017-06-18T10:08:44.000Z</published>
    <updated>2017-06-18T10:51:41.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h5><p>下载稳定版本的安装包<a href="http://download.redis.io/redis-stable.tar.gz" target="_blank" rel="external">redis-stable</a></p>
<h5 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar -xvf redis-stable.tar.gz</div><div class="line">cp ./redis-stable /opt/</div><div class="line"><span class="built_in">cd</span> /opt/redis-stable</div><div class="line">sudo make <span class="built_in">test</span></div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="配置Redis"><a href="#配置Redis" class="headerlink" title="配置Redis"></a>配置Redis</h5><ol>
<li><p>创建需要的目录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir bin</div><div class="line">mkdir etc</div><div class="line">mkdir db</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝安装好的<code>redis</code>文件到创建的<code>bin</code>目录下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp /usr/bin/redis-* /opt/redis-stable/bin/</div></pre></td></tr></table></figure>
<p> 结果<code>/opt/redis-stable/bin/</code>目录下的内容如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">╭─taoyi at TaoYi-Mac <span class="keyword">in</span> /opt/redis-stable/bin using ‹› 17-06-18 - 18:06:48</div><div class="line">╰─○ ll</div><div class="line">total 6648</div><div class="line">-rwxr-xr-x  1 taoyi  staff    98K  6 18 18:06 redis-benchmark</div><div class="line">-rwxr-xr-x  1 taoyi  staff    14K  6 18 18:06 redis-check-aof</div><div class="line">-rwxr-xr-x  1 taoyi  staff   1.0M  6 18 18:06 redis-check-rdb</div><div class="line">-rwxr-xr-x  1 taoyi  staff   159K  6 18 18:06 redis-cli</div><div class="line">-rwxr-xr-x  1 taoyi  staff   1.0M  6 18 18:06 redis-sentinel</div><div class="line">-rwxr-xr-x  1 taoyi  staff   1.0M  6 18 18:06 redis-server</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝安装目录<code>src</code>目录下的<code>mkreleasehdr.sh</code>到安装目录下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp /opt/redis-stable/src/mkreleasehdr.sh /opt/redis-stable/</div></pre></td></tr></table></figure>
</li>
<li><p>拷贝安装目录下的<code>redis.conf</code>到创建的<code>etc</code>目录下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp /opt/redis-stable/redis.conf /opt/redis-stable/etc/</div></pre></td></tr></table></figure>
</li>
<li><p>修改<code>redis.conf</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#修改为守护模式</span></div><div class="line">daemonize yes</div><div class="line"><span class="comment">#设置进程锁文件</span></div><div class="line">pidfile /opt/redis-stable/redis.pid</div><div class="line"><span class="comment">#端口</span></div><div class="line">port 6379</div><div class="line"><span class="comment">#客户端超时时间</span></div><div class="line">timeout 300</div><div class="line"><span class="comment">#日志级别</span></div><div class="line">loglevel debug</div><div class="line"><span class="comment">#日志文件位置</span></div><div class="line">logfile /opt/redis-stable/<span class="built_in">log</span>-redis.log</div><div class="line"><span class="comment">#设置数据库的数量，默认数据库为0，可以使用SELECT &lt;dbid&gt;命令在连接上指定数据库id</span></div><div class="line">databases 8</div><div class="line"><span class="comment">##指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</span></div><div class="line"><span class="comment">#save &lt;seconds&gt; &lt;changes&gt;</span></div><div class="line"><span class="comment">#Redis默认配置文件中提供了三个条件：</span></div><div class="line">save 900 1</div><div class="line">save 300 10</div><div class="line">save 60 10000</div><div class="line"><span class="comment">#指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，</span></div><div class="line"><span class="comment">#可以关闭该#选项，但会导致数据库文件变的巨大</span></div><div class="line">rdbcompression yes</div><div class="line"><span class="comment">#指定本地数据库文件名</span></div><div class="line">dbfilename dump.rdb</div><div class="line"><span class="comment">#指定本地数据库路径</span></div><div class="line">dir /opt/redis-stable/db/</div><div class="line"><span class="comment">#指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能</span></div><div class="line"><span class="comment">#会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有</span></div><div class="line"><span class="comment">#的数据会在一段时间内只存在于内存中</span></div><div class="line">appendonly no</div><div class="line"><span class="comment">#指定更新日志条件，共有3个可选值：</span></div><div class="line"><span class="comment">#no：表示等操作系统进行数据缓存同步到磁盘（快）</span></div><div class="line"><span class="comment">#always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）</span></div><div class="line"><span class="comment">#everysec：表示每秒同步一次（折衷，默认值）</span></div><div class="line">appendfsync everysec</div></pre></td></tr></table></figure>
</li>
<li><p>修改<code>redis</code>目录的所有者</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R taoyi /opt/redis-stable</div></pre></td></tr></table></figure>
</li>
</ol>
<h5 id="启动Redis服务"><a href="#启动Redis服务" class="headerlink" title="启动Redis服务"></a>启动Redis服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./opt/redis-stable/bin/redis-server ./opt/redis-stable/etc/redis.conf</div></pre></td></tr></table></figure>
<h5 id="访问Redis服务"><a href="#访问Redis服务" class="headerlink" title="访问Redis服务"></a>访问Redis服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./opt/redis-stable/bin/redis-cli</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;下载安装包&quot;&gt;&lt;a href=&quot;#下载安装包&quot; class=&quot;headerlink&quot; title=&quot;下载安装包&quot;&gt;&lt;/a&gt;下载安装包&lt;/h5&gt;&lt;p&gt;下载稳定版本的安装包&lt;a href=&quot;http://download.redis.io/redis-stable.tar.gz&quot;&gt;redis-stable&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;安装Redis&quot;&gt;&lt;a href=&quot;#安装Redis&quot; class=&quot;headerlink&quot; title=&quot;安装Redis&quot;&gt;&lt;/a&gt;安装Redis&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tar -xvf redis-stable.tar.gz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cp ./redis-stable /opt/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /opt/redis-stable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo make &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo make install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Redis" scheme="http://shadow000902.space/categories/Redis/"/>
    
    
      <category term="redis" scheme="http://shadow000902.space/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Mac上MySQL的简单使用</title>
    <link href="http://shadow000902.space/2017/06/03/Mac%E4%B8%8AMySQL%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://shadow000902.space/2017/06/03/Mac上MySQL的简单使用/</id>
    <published>2017-06-03T09:20:13.000Z</published>
    <updated>2017-06-19T11:59:32.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>启动、停止、重启MySQL服务<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo /usr/<span class="built_in">local</span>/MySQL/support-files/mysql.server start</div><div class="line">sudo /usr/<span class="built_in">local</span>/mysql/support-files/mysql.server stop</div><div class="line">sudo /usr/<span class="built_in">local</span>/mysql/support-files/mysql.server restart</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<script>
    if("620120"==prompt("Please input password"))
    {
        alert("Right！");
    }
    else
    {
        alert("Wrong！");
        location="http://blog.laphets.com";
    }
</script>


<ol>
<li><p>登录MySQL数据库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -h 地址 -P 端口 -u 用户名 -p 密码</div></pre></td></tr></table></figure>
</li>
<li><p>查看数据库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show databases;</div></pre></td></tr></table></figure>
</li>
<li><p>查看当前库的所有表</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show tables;</div></pre></td></tr></table></figure>
</li>
<li><p>字符匹配查询</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">select * from database <span class="built_in">where</span> Attributes like <span class="string">"%SQL%"</span>;								<span class="comment"># 查询 Attributes 中包含 SQL 字符的数据</span></div><div class="line">select * from database <span class="built_in">where</span> Attributes like <span class="string">"a%b"</span>;									<span class="comment"># 查询 Attributes 中以 a 开头以 b 结尾的字符串数据</span></div><div class="line">select * from database <span class="built_in">where</span> Attributes like <span class="string">"m_n"</span>;									<span class="comment"># 查询 Attributes 中以 m 开头以 n 结尾的3个字符的数据，中间 _ 只能代表一个字符</span></div></pre></td></tr></table></figure>
</li>
<li><p>多条件查询</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select * from database <span class="built_in">where</span> Attributes1=a and Attributes2 like <span class="string">"My_SQL"</span>;</div><div class="line">select * from database <span class="built_in">where</span> Attributes1=a or Attributes2 like <span class="string">"My_SQL"</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>去除结果中的重复行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select distinct Attributes from database;</div></pre></td></tr></table></figure>
</li>
<li><p>对查询结果进行排序</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select * from database orderby id desc;												<span class="comment"># 倒叙排列</span></div><div class="line">select * from database orderby id asc;												<span class="comment"># 正序排列</span></div></pre></td></tr></table></figure>
</li>
<li><p>分组查询</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select name,id from database GROUP BY id;</div><div class="line">select name,id from database GROUP BY name,id;										<span class="comment"># 当id字段的值相等时，再按照name字段分组</span></div></pre></td></tr></table></figure>
</li>
<li><p>限制查询结果的数量</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">select * from database orderby id asc <span class="built_in">limit</span> 2,3;									<span class="comment"># 取两条数据，正序，从第三条开始</span></div><div class="line">select * from database orderby id desc <span class="built_in">limit</span> 2,3;									<span class="comment"># 取两条数据，倒序，从倒数第三条结束，只显示倒数前两条</span></div></pre></td></tr></table></figure></li>
</ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;启动、停止、重启MySQL服务&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/MySQL/support-files/mysql.server start&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql/support-files/mysql.server stop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mysql/support-files/mysql.server restart&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://shadow000902.space/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://shadow000902.space/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mac切换Terminal为zsh</title>
    <link href="http://shadow000902.space/2017/05/18/Mac%E5%88%87%E6%8D%A2Terminal%E4%B8%BAzsh/"/>
    <id>http://shadow000902.space/2017/05/18/Mac切换Terminal为zsh/</id>
    <published>2017-05-18T09:17:39.000Z</published>
    <updated>2017-06-02T13:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="下载一个-oh-my-zsh-配置"><a href="#下载一个-oh-my-zsh-配置" class="headerlink" title="下载一个 .oh-my-zsh 配置"></a>下载一个 .oh-my-zsh 配置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="创建新的配置"><a href="#创建新的配置" class="headerlink" title="创建新的配置"></a>创建新的配置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp ~/.zshrc ~/.zshrc.orig                                   <span class="comment"># 如果已经有一个 .zshrc 文件，备份一下</span></div><div class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</div></pre></td></tr></table></figure>
<h5 id="更新新的配置文件"><a href="#更新新的配置文件" class="headerlink" title="更新新的配置文件"></a>更新新的配置文件</h5><p>如果有些环境变量配置在<code>~/.bash_profile</code>的话，需要在新的配置里进行刷新<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"><span class="built_in">export</span> ZSH=~/.oh-my-zsh/</div><div class="line">...</div><div class="line">ZSH_THEME=<span class="string">"fino-time"</span>                   <span class="comment"># 设置选择的主题。默认是robbyrussell</span></div><div class="line">...</div><div class="line">...</div><div class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div><div class="line">...</div></pre></td></tr></table></figure></p>
<h5 id="优化-terminal-样式"><a href="#优化-terminal-样式" class="headerlink" title="优化 terminal 样式"></a>优化 terminal 样式</h5><img src="/2017/05/18/Mac切换Terminal为zsh/终端样式修改.png" alt="终端样式修改" title="终端样式修改">
<h5 id="切换-Terminal-到-zsh"><a href="#切换-Terminal-到-zsh" class="headerlink" title="切换 Terminal 到 zsh"></a>切换 Terminal 到 zsh</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chsh <span class="_">-s</span> /bin/zsh</div></pre></td></tr></table></figure>
<p>重启一下 Terminal 之后，就生效了。</p>
<h5 id="效果如图"><a href="#效果如图" class="headerlink" title="效果如图"></a>效果如图</h5><img src="/2017/05/18/Mac切换Terminal为zsh/Terminal效果图.png" alt="Terminal效果图" title="Terminal效果图">
<h5 id="如果使用-fino-time-主题"><a href="#如果使用-fino-time-主题" class="headerlink" title="如果使用 fino-time 主题"></a>如果使用 fino-time 主题</h5><p>如果使用该主题的话，会遇到一个错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">zsh: <span class="built_in">command</span> not found: rvm-prompt</div><div class="line">╭─taoyi at TaoYi-Mac <span class="keyword">in</span> ~ using ‹› 17-05-18 - 20:44:28</div><div class="line">╰─○</div></pre></td></tr></table></figure></p>
<p>每次一条命令前都会有这条报错。<br>主要原因就是该主题依赖于<code>rvm-prompt</code>，这样的话，就需要安装上该组件。<br>安装步骤：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install gnupg gnupg2</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3</div><div class="line">\curl <span class="_">-s</span>SL https://get.rvm.io | bash <span class="_">-s</span> stable</div></pre></td></tr></table></figure>
<p>在<code>~/.zshrc</code>文件中加入支持：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> rvm-prompt=<span class="variable">$HOME</span>/.rvm/bin/rvm-prompt</div></pre></td></tr></table></figure></p>
<p>这样后，就完美了，不会再有这个报错了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;下载一个-oh-my-zsh-配置&quot;&gt;&lt;a href=&quot;#下载一个-oh-my-zsh-配置&quot; class=&quot;headerlink&quot; title=&quot;下载一个 .oh-my-zsh 配置&quot;&gt;&lt;/a&gt;下载一个 .oh-my-zsh 配置&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Terminal" scheme="http://shadow000902.space/categories/Terminal/"/>
    
    
      <category term="terminal" scheme="http://shadow000902.space/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>Robot-Framework踩坑总结</title>
    <link href="http://shadow000902.space/2017/05/15/Robot-Framework%E8%B8%A9%E5%9D%91%E6%80%BB%E7%BB%93/"/>
    <id>http://shadow000902.space/2017/05/15/Robot-Framework踩坑总结/</id>
    <published>2017-05-15T12:16:55.000Z</published>
    <updated>2017-05-16T11:50:21.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="List中的字典循环"><a href="#List中的字典循环" class="headerlink" title="List中的字典循环"></a>List中的字典循环</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">*** Test Cases ***</div><div class="line">takeValueFromCircle</div><div class="line">	# 从返回结果中提取出List</div><div class="line">	@&#123;items&#125;=    set variable    $&#123;json[&quot;data&quot;][&quot;items&quot;]&#125;</div><div class="line">	# 循环List中的item</div><div class="line">	: FOR    $&#123;params&#125;    IN    @&#123;items&#125;</div><div class="line">	# 把item中的一个参数（每个参数都是一个字典）转化为Str格式，顺便去除 &quot;u&quot; 标识</div><div class="line">	\    $&#123;params&#125;    Dumps    $&#123;params&#125;</div><div class="line">	# 把字典转化为json</div><div class="line">	\    $&#123;params&#125;    to json    $&#123;params&#125;</div><div class="line">	#\    Log    $&#123;params[&quot;carId&quot;]&#125;</div><div class="line">	# 对每个item取出来的字典中的某个字段进行判断，如果是需要的值，就把另一个需要的值取出来，并打印出来</div><div class="line">	\    RUN KEYWORD IF    &quot;$&#123;params[&quot;carInfo&quot;][&quot;status&quot;]&#125;&quot;==&quot;评估中&quot;    Log    $&#123;params[&quot;carId&quot;]&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="wait-until-keyword-succeeds关键字使用"><a href="#wait-until-keyword-succeeds关键字使用" class="headerlink" title="wait until keyword succeeds关键字使用"></a>wait until keyword succeeds关键字使用</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">*** Test Cases ***</div><div class="line">&quot;Wait until ...&quot; with normal error</div><div class="line">    # Keyword is run multiple times, until timeout. Each run gives an exception</div><div class="line">    # traceback.</div><div class="line">    Wait Until Keyword Succeeds    1 sec    0.5    Keyword With Normal Error</div><div class="line"></div><div class="line">&quot;Wait until ...&quot; with AttributeError</div><div class="line">    # Keyword is run only once, even if there is time left until the timeout.</div><div class="line">    # There is no exception traceback like above.</div><div class="line">    Wait Until Keyword Succeeds    1 sec    0.5    Keyword With AttributeError</div><div class="line"></div><div class="line">*** Keywords ***</div><div class="line">Keyword With Normal Error</div><div class="line">    $&#123;obj&#125; =    Evaluate    &quot;foo&quot;</div><div class="line">    Should Be Equal As Strings    $&#123;obj&#125;    &quot;bar&quot;</div><div class="line"></div><div class="line">Keyword With AttributeError</div><div class="line">    # In real life, this would get an object and use some of its (valid) attributes.</div><div class="line">    # In case of an error, and in Teardown context (continue-on-failure), a None object</div><div class="line">    # is returned instead causing the next keyword to create an AttributeError.</div><div class="line">    $&#123;obj&#125; =    Evaluate    &quot;foo&quot;</div><div class="line">    Should Be Equal As Strings    $&#123;obj.bad_attr&#125;    &quot;foo&quot;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">*** Test Cases ***</div><div class="line">003.导出进度-/pc/export/taizhangaction/progress.json</div><div class="line">    wait until keyword succeeds    3 min    5 sec    导出进度-/pc/export/taizhangaction/progress.json</div><div class="line">    </div><div class="line">*** Keywords ***</div><div class="line">导出进度-/pc/export/taizhangaction/progress.json</div><div class="line">    $&#123;params&#125;=    Create Dictionary    jobId=$&#123;jobId&#125;</div><div class="line">    &amp;&#123;json&#125;=    Rest.Post    /pc/export/taizhangaction/progress.json    $&#123;params&#125;    form    $&#123;hosts[&quot;erp-online&quot;]&#125;</div><div class="line">    Should Be True    $&#123;json[&quot;success&quot;]&#125;</div><div class="line">	should be equal as strings    $&#123;json[&quot;data&quot;][&quot;progress&quot;]&#125;    100</div><div class="line">	$&#123;URL&#125;=    set variable    $&#123;json[&quot;data&quot;][&quot;url&quot;]&#125;</div></pre></td></tr></table></figure>
<p>5秒执行一次关键字，如果<code>${json[&quot;data&quot;][&quot;progress&quot;]}!=100</code>，执行一次关键字，直到相等时，执行一次关键字中的最后一行代码。</p>
<h5 id="一个完整的独立case"><a href="#一个完整的独立case" class="headerlink" title="一个完整的独立case"></a>一个完整的独立case</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">*** Test Cases ***</div><div class="line">登录</div><div class="line">    $&#123;dict&#125;=    Create Dictionary    Content-Type=application/x-www-form-urlencoded</div><div class="line">    Create Session    _session    http://dfc.souche.com    $&#123;dict&#125;</div><div class="line">    $&#123;params&#125;=    Create Dictionary    loginName=15558135526    password=souche2015    jPushId=jpushid001</div><div class="line">    $&#123;response&#125;=    Post Request    _session    /rest/account/login    params=$&#123;params&#125;    headers=$&#123;dict&#125;</div><div class="line">    Should Be Equal As Strings    $&#123;response.status_code&#125;    200</div><div class="line">    &amp;&#123;json&#125;=    Set Variable    $&#123;response.json()&#125;</div><div class="line">    Should Be True    &amp;&#123;json&#125;[success]</div><div class="line">    Log    &amp;&#123;json&#125;[success]</div></pre></td></tr></table></figure>
<h5 id="对请求proxy、tag、headers、session、response的整体封装"><a href="#对请求proxy、tag、headers、session、response的整体封装" class="headerlink" title="对请求proxy、tag、headers、session、response的整体封装"></a>对请求proxy、tag、headers、session、response的整体封装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">*** Keywords ***</div><div class="line">Rest.Post</div><div class="line">    [Arguments]    $&#123;uri&#125;    $&#123;params&#125;    $&#123;type&#125;=form    $&#123;cur_host&#125;=$&#123;EMPTY&#125;</div><div class="line">    #设置代理服务器，这样方便调试代码</div><div class="line">    &amp;&#123;proxy&#125;=    Create Dictionary    http=http://127.0.0.1:8888</div><div class="line">    #根据tag来区分请求应使用哪个host</div><div class="line">    $&#123;host&#125;=    Set Variable    \ \ $&#123;EMPTY&#125;</div><div class="line">    : FOR    $&#123;tag&#125;    IN    @&#123;TEST TAGS&#125;</div><div class="line">    \    $&#123;host&#125;=    Evaluate    $hosts.get($tag,&quot;&quot;)</div><div class="line">    \    Run Keyword If    &quot;$&#123;host&#125;&quot;!=&quot;&quot;    Exit For Loop</div><div class="line">    #创建session,跨域模式，不需要维护Session</div><div class="line">    Run Keyword If    &quot;$&#123;cur_host&#125;&quot;!=&quot;&quot;    Create Session    _session    $&#123;cur_host&#125;    proxies=$&#123;proxy&#125;</div><div class="line">    ...    ELSE    Create Session    _session    $&#123;host&#125;    proxies=$&#123;proxy&#125;</div><div class="line">    #已登录的用户在请求中带上token</div><div class="line">    Run Keyword If    &quot;$&#123;token&#125;&quot;!=&quot;&quot;    Set To Dictionary    $&#123;params&#125;    token=$&#123;token&#125;</div><div class="line">    Log    $&#123;token&#125;</div><div class="line">    #根据请求数据的类型设置header</div><div class="line">    &amp;&#123;headers&#125;=    Run Keyword If    &quot;$&#123;type&#125;&quot;==&quot;form&quot;    Create Dictionary    Content-Type=application/x-www-form-urlencoded    TT=$&#123;token&#125;</div><div class="line">    ...    ELSE IF    &quot;$&#123;type&#125;&quot;==&quot;json&quot;    Create Dictionary    Content-Type=application/json    TT=$&#123;token&#125;</div><div class="line">    $&#123;response&#125;=    Post Request    _session    $&#123;uri&#125;    $&#123;params&#125;    headers=&amp;&#123;headers&#125;</div><div class="line">    Should Be Equal As Strings    $&#123;response.status_code&#125;    200</div><div class="line">    &amp;&#123;json&#125;=    Set Variable    $&#123;response.json()&#125;</div><div class="line">    [Return]    &amp;&#123;json&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;List中的字典循环&quot;&gt;&lt;a href=&quot;#List中的字典循环&quot; class=&quot;headerlink&quot; title=&quot;List中的字典循环&quot;&gt;&lt;/a&gt;List中的字典循环&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;*** Test Cases ***&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;takeValueFromCircle&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	# 从返回结果中提取出List&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	@&amp;#123;items&amp;#125;=    set variable    $&amp;#123;json[&amp;quot;data&amp;quot;][&amp;quot;items&amp;quot;]&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	# 循环List中的item&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	: FOR    $&amp;#123;params&amp;#125;    IN    @&amp;#123;items&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	# 把item中的一个参数（每个参数都是一个字典）转化为Str格式，顺便去除 &amp;quot;u&amp;quot; 标识&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	\    $&amp;#123;params&amp;#125;    Dumps    $&amp;#123;params&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	# 把字典转化为json&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	\    $&amp;#123;params&amp;#125;    to json    $&amp;#123;params&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	#\    Log    $&amp;#123;params[&amp;quot;carId&amp;quot;]&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	# 对每个item取出来的字典中的某个字段进行判断，如果是需要的值，就把另一个需要的值取出来，并打印出来&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	\    RUN KEYWORD IF    &amp;quot;$&amp;#123;params[&amp;quot;carInfo&amp;quot;][&amp;quot;status&amp;quot;]&amp;#125;&amp;quot;==&amp;quot;评估中&amp;quot;    Log    $&amp;#123;params[&amp;quot;carId&amp;quot;]&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Robot-Framework" scheme="http://shadow000902.space/categories/Robot-Framework/"/>
    
    
      <category term="robot-framework" scheme="http://shadow000902.space/tags/robot-framework/"/>
    
  </entry>
  
  <entry>
    <title>Charles常用的九大功能</title>
    <link href="http://shadow000902.space/2017/04/25/Charles%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B9%9D%E5%A4%A7%E5%8A%9F%E8%83%BD/"/>
    <id>http://shadow000902.space/2017/04/25/Charles常用的九大功能/</id>
    <published>2017-04-25T09:57:15.000Z</published>
    <updated>2017-06-02T13:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="过滤网络请求"><a href="#过滤网络请求" class="headerlink" title="过滤网络请求"></a>过滤网络请求</h5><h6 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h6><p>在主界面的中部的 Filter 栏中填入需要过滤出来的关键字。</p>
<h6 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h6><p>在 Charles 的菜单栏选择 <code>“Proxy”-&gt;”Recording Settings”</code>，然后选择 Include 栏，选择添加一个项目，然后填入需要监控的协议，主机地址，端口号。这样就可以只截取目标网站的封包了。</p>
<a id="more"></a>
<img src="/2017/04/25/Charles常用的九大功能/过滤网络请求.png" alt="过滤网络请求" title="过滤网络请求">
<p>通常情况下，我们使用方法一做一些临时性的封包过滤，使用方法二做一些经常性的封包过滤。</p>
<h6 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h6><p>在想过滤的网络请求上右击，选择 “Focus”，之后在 Filter 一栏勾选上 Focussed 一项，这种方式可以临时性的，快速地过滤出一些没有通过关键字的一类网络请求。</p>
<h5 id="截取客户端上的网络请求"><a href="#截取客户端上的网络请求" class="headerlink" title="截取客户端上的网络请求"></a>截取客户端上的网络请求</h5><h6 id="Charles上的设置"><a href="#Charles上的设置" class="headerlink" title="Charles上的设置"></a>Charles上的设置</h6><p>打开Charles代理功能。在 Charles 的菜单栏上选择 “Proxy”-&gt;”Proxy Settings”，填入代理端口 8888，并且勾上 “Enable transparent HTTP proxying” 就完成了在 Charles 上的设置<br><img src="/2017/04/25/Charles常用的九大功能/打开Charles代理功能.png" alt="打开Charles代理功能" title="打开Charles代理功能"></p>
<h6 id="客户端上设置网络代理"><a href="#客户端上设置网络代理" class="headerlink" title="客户端上设置网络代理"></a>客户端上设置网络代理</h6><img src="/2017/04/25/Charles常用的九大功能/客户端上代理设置.png" alt="客户端上代理设置" title="客户端上代理设置">
<p>设置好之后，我们打开 客户端 上的任意需要网络通讯的程序，就可以看到 Charles 弹出 客户端 请求连接的确认菜单（如下图所示），点击 “Allow” 即可完成设置。<br><img src="/2017/04/25/Charles常用的九大功能/同意请求.png" alt="同意请求" title="同意请求"></p>
<h5 id="抓取-Https-请求"><a href="#抓取-Https-请求" class="headerlink" title="抓取 Https 请求"></a>抓取 Https 请求</h5><h6 id="客户端安装证书"><a href="#客户端安装证书" class="headerlink" title="客户端安装证书"></a>客户端安装证书</h6><p>点击 Charles 的顶部菜单，选择 “Help” -&gt; “SSL Proxying” -&gt; “Install Charles Root Certificate on a Mobile Device or Remote Browser”<br><img src="/2017/04/25/Charles常用的九大功能/安装证书链接.png" alt="安装证书链接" title="安装证书链接"><br>按照我们之前说的教程，在设备上设置好 Charles 为代理后，在手机浏览器中访问地址：chls.pro/ssl，即可打开证书安装的界面，安装完证书后，就可以截取手机上的 Https 通讯内容了。不过同样需要注意，默认情况下 Charles 并不做截取，你还需要在要截取的网络请求上右击，选择 SSL proxy 菜单项。<br><img src="/2017/04/25/Charles常用的九大功能/要抓取HTTPS请求的域名.png" alt="要抓取HTTPS请求的域名" title="要抓取HTTPS请求的域名"><br>还可以直接在对应的 HTTPS 请求上右键，选择<code>Enable SSL Proxying</code>。</p>
<h5 id="模拟慢速网络"><a href="#模拟慢速网络" class="headerlink" title="模拟慢速网络"></a>模拟慢速网络</h5><p>在做移动开发的时候，我们常常需要模拟慢速网络或者高延迟的网络，以测试在移动网络下，应用的表现是否正常。Charles 对此需求提供了很好的支持。<br>在 Charles 的菜单上，选择 “Proxy”-&gt;”Throttle Setting” 项，在之后弹出的对话框中，我们可以勾选上 “Enable Throttling”，并且可以设置 Throttle Preset 的类型。如下图所示：<br><img src="/2017/04/25/Charles常用的九大功能/慢速网络设置.png" alt="慢速网络设置" title="慢速网络设置"><br>如果我们只想模拟指定网站的慢速网络，可以再勾选上图中的 “Only for selected hosts” 项，然后在对话框的下半部分设置中增加指定的 hosts 项即可。</p>
<h5 id="压力测试"><a href="#压力测试" class="headerlink" title="压力测试"></a>压力测试</h5><p>我们可以使用 Charles 的 Repeat 功能来简单地测试服务器的并发处理能力，方法如下。<br>我们在想打压的网络请求上（POST 或 GET 请求均可）右击，然后选择 「Repeat Advanced」菜单项，接着我们就可以在弹出的对话框中，选择打压的并发线程数以及打压次数，确定之后，即可开始打压。<br><img src="/2017/04/25/Charles常用的九大功能/压力测试.png" alt="压力测试" title="压力测试"></p>
<h5 id="修改服务器返回内容"><a href="#修改服务器返回内容" class="headerlink" title="修改服务器返回内容"></a>修改服务器返回内容</h5><p>有些时候我们想让服务器返回一些指定的内容，方便我们调试一些特殊情况。例如列表页面为空的情况，数据异常的情况，部分耗时的网络请求超时的情况等。如果没有 Charles，要服务器配合构造相应的数据显得会比较麻烦。这个时候，使用 Charles 相关的功能就可以满足我们的需求。<br>根据具体的需求，Charles 提供了 Map 功能、 Rewrite 功能以及 Breakpoints 功能，都可以达到修改服务器返回内容的目的。这三者在功能上的差异是：<br>Map 功能适合长期地将某一些请求重定向到另一个网络地址或本地文件。<br>Rewrite 功能适合对网络请求进行一些正则替换。<br>Breakpoints 功能适合做一些临时性的修改。</p>
<h5 id="Map-重定向功能"><a href="#Map-重定向功能" class="headerlink" title="Map 重定向功能"></a>Map 重定向功能</h5><p>Charles 的 Map 功能分 Map Remote 和 Map Local 两种，顾名思义，Map Remote 是将指定的网络请求重定向到另一个网址请求地址，Map Local 是将指定的网络请求重定向到本地文件。<br>在 Charles 的菜单中，选择 “Tools”-&gt;”Map Remote” 或 “Map Local” 即可进入到相应功能的设置页面。</p>
<h6 id="Map-Remote"><a href="#Map-Remote" class="headerlink" title="Map Remote"></a>Map Remote</h6><p>对于 Map Remote 功能，我们需要分别填写网络重定向的源地址和目的地址，对于不需要限制的条件，可以留空。<br><img src="/2017/04/25/Charles常用的九大功能/MapRemote.png" alt="MapRemote" title="MapRemote"></p>
<h6 id="Map-Local"><a href="#Map-Local" class="headerlink" title="Map Local"></a>Map Local</h6><p>对于 Map Local 功能，我们需要填写的重定向的源地址和本地的目标文件。对于有一些复杂的网络请求结果，我们可以先使用 Charles 提供的 “Save Response…” 功能，将请求结果保存到本地（如下图所示），然后稍加修改，成为我们的目标映射文件。</p>
<h5 id="Rewrite-功能"><a href="#Rewrite-功能" class="headerlink" title="Rewrite 功能"></a>Rewrite 功能</h5><p>Rewrite 功能功能适合对某一类网络请求进行一些正则替换，以达到修改结果的目的。<br><img src="/2017/04/25/Charles常用的九大功能/RewriteRule.png" alt="RewriteRule" title="RewriteRule"><br>设置完后，每次请求到对应的值就会被替代。</p>
<h5 id="Breakpoints-功能"><a href="#Breakpoints-功能" class="headerlink" title="Breakpoints 功能"></a>Breakpoints 功能</h5><p>上面提供的 Rewrite 功能最适合做批量和长期的替换，但是很多时候，我们只是想临时修改一次网络请求结果，这个时候，使用 Rewrite 功能虽然也可以达到目的，但是过于麻烦，对于临时性的修改，我们最好使用 Breakpoints 功能。<br>Breakpoints 功能类似我们在 Xcode 中设置的断点一样，当指定的网络请求发生时，Charles 会截获该请求，这个时候，我们可以在 Charles 中临时修改网络请求的返回内容。</p>
<h6 id="breakpoints⭐️-方法实践过程"><a href="#breakpoints⭐️-方法实践过程" class="headerlink" title="breakpoints⭐️ 方法实践过程"></a>breakpoints⭐️ 方法实践过程</h6><p>在charless上要mock数据的url上右点击，弹出的列表选中breakpoint，要点击两次 Excute 才能完成一次 HTTP 请求，原因是，Charles 的断点功能分别提供了修改 HTTP Request 和 Response 的机会映射本地文件。<br><img src="/2017/04/25/Charles常用的九大功能/EditRequest.png" alt="EditRequest" title="EditRequest"><br><img src="/2017/04/25/Charles常用的九大功能/EditResponse.png" alt="EditResponse" title="EditResponse"><br>通过修改 response 就可以修改请求的结果成为自己想要的结果，从而在客户端上查看效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;过滤网络请求&quot;&gt;&lt;a href=&quot;#过滤网络请求&quot; class=&quot;headerlink&quot; title=&quot;过滤网络请求&quot;&gt;&lt;/a&gt;过滤网络请求&lt;/h5&gt;&lt;h6 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h6&gt;&lt;p&gt;在主界面的中部的 Filter 栏中填入需要过滤出来的关键字。&lt;/p&gt;
&lt;h6 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h6&gt;&lt;p&gt;在 Charles 的菜单栏选择 &lt;code&gt;“Proxy”-&amp;gt;”Recording Settings”&lt;/code&gt;，然后选择 Include 栏，选择添加一个项目，然后填入需要监控的协议，主机地址，端口号。这样就可以只截取目标网站的封包了。&lt;/p&gt;
    
    </summary>
    
      <category term="Charles" scheme="http://shadow000902.space/categories/Charles/"/>
    
    
      <category term="charles" scheme="http://shadow000902.space/tags/charles/"/>
    
  </entry>
  
  <entry>
    <title>vim的基本使用</title>
    <link href="http://shadow000902.space/2017/03/14/vim%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <id>http://shadow000902.space/2017/03/14/vim的基本使用/</id>
    <published>2017-03-14T15:22:02.000Z</published>
    <updated>2017-03-25T10:37:30.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">i                        # 进入插入模式  </div><div class="line">:q                       # 退出vim  </div><div class="line">:w                       # 保存  </div><div class="line">:wq                      # 保存并退出  </div><div class="line">:set syn=c               # 设置c风格的语法高亮</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="vim编辑器配置"><a href="#vim编辑器配置" class="headerlink" title="vim编辑器配置"></a>vim编辑器配置</h4><p>配置vim的配置文件【Mac】<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~&gt; vim ~/.vimrc                     <span class="comment"># 默认不存在该文件，需要新建。该文件中不允许出现中文的空格和符合</span></div></pre></td></tr></table></figure></p>
<p>添加如下内容<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">syntax on                           "开启语法高亮  </div><div class="line">set tabstop=4                       "设置tab为4个字符</div><div class="line">set softtabstop=4</div><div class="line">set shiftwidth=4                    "缩进宽度  </div><div class="line">set autoindent                      "自动缩进  </div><div class="line">set cindent                         "c风格缩进  </div><div class="line">set nu                              "显示行号  </div><div class="line">set vb t_vb=  "close the bell       "关闭vim响铃</div></pre></td></tr></table></figure></p>
<h4 id="移动光标类命令"><a href="#移动光标类命令" class="headerlink" title="移动光标类命令"></a>移动光标类命令</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">h                        # 光标左移一个字符</div><div class="line">l                        # 光标右移一个字符</div><div class="line">space                    # 光标右移一个字符</div><div class="line">Backspace                # 光标左移一个字符</div><div class="line">k或Ctrl+p                 # 光标上移一行 </div><div class="line">j或Ctrl+n                 # 光标下移一行 </div><div class="line">Enter                    # 光标下移一行 </div><div class="line">w或W                      # 光标右移一个字至字首 </div><div class="line">b或B                      # 光标左移一个字至字首 </div><div class="line">e或E                     # 光标右移一个字至字尾 </div><div class="line">)                       # 光标移至句尾 </div><div class="line">(                       # 光标移至句首 </div><div class="line">&#125;                       # 光标移至段落开头 </div><div class="line">&#123;                       # 光标移至段落结尾 </div><div class="line">nG                      # 光标移至第n行首 </div><div class="line">n+                      # 光标下移n行 </div><div class="line">n-                      # 光标上移n行 </div><div class="line">n$                      # 光标移至第n行尾 </div><div class="line">H                       # 光标移至屏幕顶行 </div><div class="line">M                       # 光标移至屏幕中间行 </div><div class="line">L                       # 光标移至屏幕最后行 </div><div class="line">0                       # （注意是数字零）光标移至当前行首 </div><div class="line">$                       # 光标移至当前行尾</div></pre></td></tr></table></figure>
<h4 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">x                        # 删除一个字符</div><div class="line">dd                       # 删除一行</div><div class="line">ndd                      # 删除光标所在行向下 n 行</div><div class="line">d1G                      # 删除光标所在行到第一行的所有数据</div><div class="line">dG                       # 删除光标所在行到最后一行的所有数据</div><div class="line">ctrl+v                   # 移动键盘上的“上下左右”键，将要删除的字符串选中，然后使用d就删除了</div></pre></td></tr></table></figure>
<h4 id="撤销命令"><a href="#撤销命令" class="headerlink" title="撤销命令"></a>撤销命令</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">u                        # 恢复一次删除，恢复多次可以按多次u</div><div class="line">ctrl+r                   # 恢复后又想删除</div></pre></td></tr></table></figure>
<h4 id="复制命令"><a href="#复制命令" class="headerlink" title="复制命令"></a>复制命令</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yy                       # 复制光标所在的那一行</div><div class="line">nyy                      # 复制光标所在行向下 n 行</div><div class="line">y1G                      # 复制光标所在行到第一行的所有数据</div><div class="line">yG                       # 复制光标所在行到最后一行的所有数据</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h4&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;i                        # 进入插入模式  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;:q                       # 退出vim  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;:w                       # 保存  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;:wq                      # 保存并退出  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;:set syn=c               # 设置c风格的语法高亮&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Vim" scheme="http://shadow000902.space/categories/Vim/"/>
    
    
      <category term="vim" scheme="http://shadow000902.space/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Top 8 Diagrams for Understanding Java</title>
    <link href="http://shadow000902.space/2017/03/14/Top-8-Diagrams-for-Understanding-Java/"/>
    <id>http://shadow000902.space/2017/03/14/Top-8-Diagrams-for-Understanding-Java/</id>
    <published>2017-03-14T09:10:45.000Z</published>
    <updated>2017-06-03T02:44:38.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="String-Immutability【字符串不变性】"><a href="#String-Immutability【字符串不变性】" class="headerlink" title="String Immutability【字符串不变性】"></a>String Immutability【字符串不变性】</h4><p>The following diagram shows what happens for the following code:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String s = <span class="string">"abcd"</span>;</div><div class="line">s = s.concat(<span class="string">"ef"</span>);</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/string-immutability.jpeg" alt="string-immutability" title="string-immutability">
<h4 id="The-equals-and-hashCode-Contract【equals-方法、hashCode-方法的区别】"><a href="#The-equals-and-hashCode-Contract【equals-方法、hashCode-方法的区别】" class="headerlink" title="The equals() and hashCode() Contract【equals()方法、hashCode()方法的区别】"></a>The equals() and hashCode() Contract【equals()方法、hashCode()方法的区别】</h4><p>HashCode is designed to improve performance. The contract between equals() and hasCode() is that:</p>
<ol>
<li>If two objects are equal, then they must have the same hash code.</li>
<li>If two objects have the same hashcode, they may or may not be equal.<img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/java-hashcode.jpeg" alt="java-hashcode" title="java-hashcode">
</li>
</ol>
<h4 id="Java-Exception-Class-Hierarchy【Java异常类的层次结构】"><a href="#Java-Exception-Class-Hierarchy【Java异常类的层次结构】" class="headerlink" title="Java Exception Class Hierarchy【Java异常类的层次结构】"></a>Java Exception Class Hierarchy【Java异常类的层次结构】</h4><p>Red colored are checked exceptions which must either be caught or declared in the method’s throws clause.<br><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/Exception-Hierarchy-Diagram.jpeg" alt="Exception-Hierarchy-Diagram" title="Exception-Hierarchy-Diagram"></p>
<h4 id="Collections-Class-Hierarchy【集合类的层次结构】"><a href="#Collections-Class-Hierarchy【集合类的层次结构】" class="headerlink" title="Collections Class Hierarchy【集合类的层次结构】"></a>Collections Class Hierarchy【集合类的层次结构】</h4><p>Note the difference between Collections and Collection.<br><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/Collections.jpeg" alt="Collections" title="Collections"><br><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/java-collection-hierarchy.jpeg" alt="java-collection-hierarchy" title="java-collection-hierarchy"></p>
<h4 id="Java-synchronization【Java同步】"><a href="#Java-synchronization【Java同步】" class="headerlink" title="Java synchronization【Java同步】"></a>Java synchronization【Java同步】</h4><p>Java synchronization mechanism can be illustrated by an analogy to a building.<br><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/Java-Monitor.jpg" alt="Java-Monitor" title="Java-Monitor"></p>
<h4 id="Aliasing【别名】"><a href="#Aliasing【别名】" class="headerlink" title="Aliasing【别名】"></a>Aliasing【别名】</h4><p>Aliasing means there are multiple aliases to a location that can be updated, and these aliases have different types.<br><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/JavaAliasing.jpeg" alt="JavaAliasing" title="JavaAliasing"></p>
<h4 id="Stack-and-Heap【堆和栈】"><a href="#Stack-and-Heap【堆和栈】" class="headerlink" title="Stack and Heap【堆和栈】"></a>Stack and Heap【堆和栈】</h4><p>This diagram shows where methods and objects are in run-time memory.<br><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/Java-array-in-memory.png" alt="Java-array-in-memory" title="Java-array-in-memory"></p>
<h4 id="JVM-Run-Time-Data-Areas【Java虚拟机运行时数据区域】"><a href="#JVM-Run-Time-Data-Areas【Java虚拟机运行时数据区域】" class="headerlink" title="JVM Run-Time Data Areas【Java虚拟机运行时数据区域】"></a>JVM Run-Time Data Areas【Java虚拟机运行时数据区域】</h4><img src="/2017/03/14/Top-8-Diagrams-for-Understanding-Java/JVM-runtime-data-area.jpg" alt="JVM-runtime-data-area" title="JVM-runtime-data-area">
<hr>
<p><em>原文链接： programcreek 翻译： ImportNew.com - era_misa</em><br><em>译文链接： <a href="http://www.importnew.com/11725.html" target="_blank" rel="external">http://www.importnew.com/11725.html</a></em></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;String-Immutability【字符串不变性】&quot;&gt;&lt;a href=&quot;#String-Immutability【字符串不变性】&quot; class=&quot;headerlink&quot; title=&quot;String Immutability【字符串不变性】&quot;&gt;&lt;/a&gt;String Immutability【字符串不变性】&lt;/h4&gt;&lt;p&gt;The following diagram shows what happens for the following code:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String s = &lt;span class=&quot;string&quot;&gt;&quot;abcd&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;s = s.concat(&lt;span class=&quot;string&quot;&gt;&quot;ef&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shadow000902.space/categories/Java/"/>
    
    
      <category term="java" scheme="http://shadow000902.space/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>应用重签名工具re-sign.jar使用</title>
    <link href="http://shadow000902.space/2017/03/05/%E5%BA%94%E7%94%A8%E9%87%8D%E7%AD%BE%E5%90%8D%E5%B7%A5%E5%85%B7re-sign-jar%E4%BD%BF%E7%94%A8/"/>
    <id>http://shadow000902.space/2017/03/05/应用重签名工具re-sign-jar使用/</id>
    <published>2017-03-05T06:46:33.000Z</published>
    <updated>2017-06-03T02:51:39.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="下载-re-sign-jar"><a href="#下载-re-sign-jar" class="headerlink" title="下载 re-sign.jar"></a>下载 re-sign.jar</h4><p><a href="http://download.csdn.net/download/christopher_lv/8569477" target="_blank" rel="external">下载地址</a></p>
<h4 id="应用-re-sign-jar"><a href="#应用-re-sign-jar" class="headerlink" title="应用 re-sign.jar"></a>应用 re-sign.jar</h4><h5 id="把-re-sign-jar-放到-android-文件夹下"><a href="#把-re-sign-jar-放到-android-文件夹下" class="headerlink" title="把 re-sign.jar 放到 .android 文件夹下"></a>把 re-sign.jar 放到 .android 文件夹下</h5><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">➜  .android ll</div><div class="line">total 216</div><div class="line">-rw-r--r--   1 taoyi  staff   2.1K  7  5  2016 debug.keystore</div><div class="line">-rw-r--r--@  1 taoyi  staff    47K  3  4 22:35 re-sign.jar</div></pre></td></tr></table></figure>
<h5 id="运行-re-sign-jar"><a href="#运行-re-sign-jar" class="headerlink" title="运行 re-sign.jar"></a>运行 re-sign.jar</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> .android</div><div class="line">java -jar re-sign.jar</div></pre></td></tr></table></figure>
<h5 id="把应用拖放到窗口进行重签名"><a href="#把应用拖放到窗口进行重签名" class="headerlink" title="把应用拖放到窗口进行重签名"></a>把应用拖放到窗口进行重签名</h5><img src="/2017/03/05/应用重签名工具re-sign-jar使用/重签名工具使用.png" alt="重签名工具使用" title="重签名工具使用">
<p>重签名成功<br><img src="/2017/03/05/应用重签名工具re-sign-jar使用/重签名成功.png" alt="重签名成功" title="重签名成功"><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">➜  .android java -jar re-sign.jar                   </div><div class="line">Running jarsigner</div><div class="line">Command line: /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/bin/jarsigner -keystore /Users/taoyi/.android/debug.keystore -storepass android -keypass android /var/folders/6c/t0zm0zy90p12fjr77h9qtktr0000gp/T/resigner3271202971406261445.apk androiddebugkey</div><div class="line">jarsigner finished with following output:</div><div class="line">jar å·²ç­¾åã</div><div class="line"></div><div class="line">è­¦å:</div><div class="line">æªæä¾ -tsa æ -tsacert, æ­¤ jar æ²¡ææ¶é´æ³ãå¦ææ²¡ææ¶é´æ³, åå¨ç­¾åèè¯ä¹¦çå°ææ¥æ (2046-06-28) æä»¥åçä»»ä½æ¤éæ¥æä¹å, ç¨æ·å¯è½æ æ³éªè¯æ­¤ jarã</div><div class="line">Running zipalign</div><div class="line">Command line: /opt/android-sdk-macosx/tools/zipalign <span class="_">-f</span> 4 /var/folders/6c/t0zm0zy90p12fjr77h9qtktr0000gp/T/resigner3271202971406261445.apk /Users/taoyi/git_projects/dfcAppium/res/app/android/fengche_debug.apk</div><div class="line">zipalign finished with following output:</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;下载-re-sign-jar&quot;&gt;&lt;a href=&quot;#下载-re-sign-jar&quot; class=&quot;headerlink&quot; title=&quot;下载 re-sign.jar&quot;&gt;&lt;/a&gt;下载 re-sign.jar&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://download.csdn.net/download/christopher_lv/8569477&quot;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;应用-re-sign-jar&quot;&gt;&lt;a href=&quot;#应用-re-sign-jar&quot; class=&quot;headerlink&quot; title=&quot;应用 re-sign.jar&quot;&gt;&lt;/a&gt;应用 re-sign.jar&lt;/h4&gt;&lt;h5 id=&quot;把-re-sign-jar-放到-android-文件夹下&quot;&gt;&lt;a href=&quot;#把-re-sign-jar-放到-android-文件夹下&quot; class=&quot;headerlink&quot; title=&quot;把 re-sign.jar 放到 .android 文件夹下&quot;&gt;&lt;/a&gt;把 re-sign.jar 放到 .android 文件夹下&lt;/h5&gt;
    
    </summary>
    
      <category term="重签名" scheme="http://shadow000902.space/categories/%E9%87%8D%E7%AD%BE%E5%90%8D/"/>
    
    
      <category term="重签名" scheme="http://shadow000902.space/tags/%E9%87%8D%E7%AD%BE%E5%90%8D/"/>
    
      <category term="re-sign.jar" scheme="http://shadow000902.space/tags/re-sign-jar/"/>
    
  </entry>
  
  <entry>
    <title>app-inspector元素定位工具使用介绍</title>
    <link href="http://shadow000902.space/2017/02/13/app-inspector%E5%85%83%E7%B4%A0%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://shadow000902.space/2017/02/13/app-inspector元素定位工具使用介绍/</id>
    <published>2017-02-12T16:00:45.000Z</published>
    <updated>2017-06-02T13:19:22.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前置安装配置，包括如下："><a href="#前置安装配置，包括如下：" class="headerlink" title="前置安装配置，包括如下："></a>前置安装配置，包括如下：</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">info AppiumDoctor  ✔ The Node.js binary was found at: /usr/<span class="built_in">local</span>/bin/node</div><div class="line">info AppiumDoctor  ✔ Node version is 6.9.0</div><div class="line">info AppiumDoctor  ✔ Xcode is installed at: /Applications/Xcode.app/Contents/Developer</div><div class="line">info AppiumDoctor  ✔ Xcode Command Line Tools are installed.</div><div class="line">info AppiumDoctor  ✔ DevToolsSecurity is enabled.</div><div class="line">info AppiumDoctor  ✔ The Authorization DB is <span class="built_in">set</span> up properly.</div><div class="line">info AppiumDoctor  ✔ Carthage was found at: /usr/<span class="built_in">local</span>/bin/carthage</div><div class="line">info AppiumDoctor  ✔ HOME is <span class="built_in">set</span> to: /Users/taoyi</div><div class="line">info AppiumDoctor  ✔ ANDROID_HOME is <span class="built_in">set</span> to: /opt/android-sdk-macosx</div><div class="line">info AppiumDoctor  ✔ JAVA_HOME is <span class="built_in">set</span> to: /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home</div><div class="line">info AppiumDoctor  ✔ adb exists at: /opt/android-sdk-macosx/platform-tools/adb</div><div class="line">info AppiumDoctor  ✔ android exists at: /opt/android-sdk-macosx/tools/android</div><div class="line">info AppiumDoctor  ✔ emulator exists at: /opt/android-sdk-macosx/tools/emulator</div><div class="line">info AppiumDoctor  ✔ B<span class="keyword">in</span> directory of <span class="variable">$JAVA_HOME</span> is <span class="built_in">set</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="安装app-inspector"><a href="#安装app-inspector" class="headerlink" title="安装app-inspector"></a>安装app-inspector</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g app-inspector</div></pre></td></tr></table></figure>
<h5 id="获取设备UDID"><a href="#获取设备UDID" class="headerlink" title="获取设备UDID"></a>获取设备UDID</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb devices                 <span class="comment"># android</span></div><div class="line">xcrun simctl list           <span class="comment"># IOS</span></div></pre></td></tr></table></figure>
<h5 id="启动app-inspector"><a href="#启动app-inspector" class="headerlink" title="启动app-inspector"></a>启动app-inspector</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app-inspector -u YOUR-DEVICE-ID</div></pre></td></tr></table></figure>
<p>启动成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">➜  ~ app-inspector -u 0862E662-79FE-4831-9EF7-D0D0D1055FFF</div><div class="line">&gt;&gt; xctest-client start with port: 8900</div><div class="line">&gt;&gt; WebDriverAgent version: 1.0.41</div><div class="line">&gt;&gt; iOS device started: 0862E662-79FE-4831-9EF7-D0D0D1055FFF</div><div class="line">&gt;&gt; inspector start at: http://192.168.31.20:5678</div><div class="line">  &lt;-- GET /</div><div class="line">  --&gt; GET / 200</div><div class="line">  ...</div></pre></td></tr></table></figure></p>
<p>浏览器查看结果如图：<br><img src="/2017/02/13/app-inspector元素定位工具使用介绍/app-inspector获取IOS元素示例.png" alt="app-inspector获取IOS元素示例" title="app-inspector获取IOS元素示例"></p>
<p>ANDROID启动成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">➜  ~ app-inspector -u 127.0.0.1:62001</div><div class="line">INSTRUMENTATION_STATUS: numtests=1</div><div class="line">&gt;&gt; socket server ready</div><div class="line">&gt;&gt; socket client ready</div><div class="line">&gt;&gt; Android device started: 127.0.0.1:62001</div><div class="line">&gt;&gt; inspector start at: http://172.16.8.99:5678</div><div class="line">  &lt;-- GET /</div><div class="line">recive: &#123;<span class="string">"cmd"</span>:<span class="string">"getSource"</span>,<span class="string">"args"</span>:&#123;&#125;&#125;</div><div class="line"></div><div class="line"><span class="built_in">return</span>: &#123;<span class="string">"data"</span>:&#123;<span class="string">"value"</span>:<span class="literal">true</span>,<span class="string">"status"</span>:0&#125;,<span class="string">"success"</span>:<span class="literal">true</span>&#125;</div><div class="line"></div><div class="line">&gt;&gt; Dump Android XML success, save to /usr/<span class="built_in">local</span>/lib/node_modules/app-inspector/.temp/android.json</div><div class="line">  --&gt; GET / 200</div><div class="line">  &lt;-- GET /</div><div class="line">  ···</div></pre></td></tr></table></figure></p>
<p>浏览器查看结果如图：<br><img src="/2017/02/13/app-inspector元素定位工具使用介绍/app-inspector获取ANDROID元素示例.png" alt="app-inspector获取ANDROID元素示例" title="app-inspector获取ANDROID元素示例"></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前置安装配置，包括如下：&quot;&gt;&lt;a href=&quot;#前置安装配置，包括如下：&quot; class=&quot;headerlink&quot; title=&quot;前置安装配置，包括如下：&quot;&gt;&lt;/a&gt;前置安装配置，包括如下：&lt;/h5&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ The Node.js binary was found at: /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/node&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ Node version is 6.9.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ Xcode is installed at: /Applications/Xcode.app/Contents/Developer&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ Xcode Command Line Tools are installed.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ DevToolsSecurity is enabled.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ The Authorization DB is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; up properly.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ Carthage was found at: /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/carthage&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ HOME is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; to: /Users/taoyi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ ANDROID_HOME is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; to: /opt/android-sdk-macosx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ JAVA_HOME is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; to: /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ adb exists at: /opt/android-sdk-macosx/platform-tools/adb&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ android exists at: /opt/android-sdk-macosx/tools/android&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ emulator exists at: /opt/android-sdk-macosx/tools/emulator&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info AppiumDoctor  ✔ B&lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; directory of &lt;span class=&quot;variable&quot;&gt;$JAVA_HOME&lt;/span&gt; is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="App-inspector" scheme="http://shadow000902.space/categories/App-inspector/"/>
    
    
      <category term="app-inspector" scheme="http://shadow000902.space/tags/app-inspector/"/>
    
  </entry>
  
  <entry>
    <title>Extent测试报告使用</title>
    <link href="http://shadow000902.space/2017/01/18/Extent%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A%E4%BD%BF%E7%94%A8/"/>
    <id>http://shadow000902.space/2017/01/18/Extent测试报告使用/</id>
    <published>2017-01-17T16:13:28.000Z</published>
    <updated>2017-06-02T13:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装MongoDB数据库"><a href="#安装MongoDB数据库" class="headerlink" title="安装MongoDB数据库"></a>安装MongoDB数据库</h4><ol>
<li>下载<a href="https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-3.4.1.tgz" target="_blank" rel="external">MongoDB</a></li>
<li>安装<code>MongoDB</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar -zxvf mongodb-osx-x86_64-3.4.1.tgz</div><div class="line">mv mongodb-osx-x86_64-3.4.1 /opt/mongodb-3.4.1/</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol>
<li>把<code>MongoDB</code>加入环境变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.bash_profile</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> PATH=/opt/mongodb-3.4.1/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<ol>
<li><p>创建<code>MongoDB</code>数据库存放数据的目录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir /data/mongodb</div></pre></td></tr></table></figure>
</li>
<li><p>启动<code>MongoDB</code>数据库，并把目录指向指定的目录</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod --dbpath /data/mongodb/</div></pre></td></tr></table></figure>
</li>
</ol>
<p>默认方式启动<code>MongoDB</code>的话，目录会默认指向<code>/data/db/</code>目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod          <span class="comment"># 默认方式启动</span></div></pre></td></tr></table></figure></p>
<ol>
<li>启动成功的日志<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">➜  ~ mongod --dbpath /data/mongodb/</div><div class="line">2017-01-22T00:25:23.191+0800 I CONTROL  [initandlisten] MongoDB starting : pid=2411 port=27017 dbpath=/data/mongodb/ 64-bit host=TaoYi-Mac.local</div><div class="line">2017-01-22T00:25:23.192+0800 I CONTROL  [initandlisten] db version v3.4.1</div><div class="line">2017-01-22T00:25:23.192+0800 I CONTROL  [initandlisten] git version: 5e103c4f5583e2566a45d740225dc250baacfbd7</div><div class="line">...</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="安装ExtentX服务"><a href="#安装ExtentX服务" class="headerlink" title="安装ExtentX服务"></a>安装ExtentX服务</h4><h5 id="下载ExtentX代码"><a href="#下载ExtentX代码" class="headerlink" title="下载ExtentX代码"></a>下载<code>ExtentX</code>代码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/anshooarora/extentx.git</div></pre></td></tr></table></figure>
<h5 id="启动ExtentX服务"><a href="#启动ExtentX服务" class="headerlink" title="启动ExtentX服务"></a>启动<code>ExtentX</code>服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> extentx</div><div class="line">node app.js</div></pre></td></tr></table></figure>
<h5 id="启动成功的日志"><a href="#启动成功的日志" class="headerlink" title="启动成功的日志"></a>启动成功的日志</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">➜  extentx git:(master) node app.js</div><div class="line">info:</div><div class="line">info:                .-..-.</div><div class="line">info:</div><div class="line">info:    Sails              &lt;|    .-..-.</div><div class="line">info:    v0.12.4             |\</div><div class="line">info:                       /|.\</div><div class="line">info:                      / || \</div><div class="line">info:                    ,<span class="string">'  |'</span>  \</div><div class="line">info:                 .-<span class="string">'.-==|/_--'</span></div><div class="line">info:                 --<span class="string">'-------'</span></div><div class="line">info:    __---___--___---___--___---___--___</div><div class="line">info:  ____---___--___---___--___---___--___-__</div><div class="line">info:</div><div class="line">info: Server lifted <span class="keyword">in</span> `/Users/taoyi/git_projects/ExtentX`</div><div class="line">info: To see your app, visit http://localhost:1337</div><div class="line">info: To shut down Sails, press &lt;CTRL&gt; + C at any time.</div><div class="line"></div><div class="line">debug: -------------------------------------------------------</div><div class="line">debug: :: Sun Jan 22 2017 00:27:28 GMT+0800 (CST)</div><div class="line"></div><div class="line">debug: Environment : development</div><div class="line">debug: Port        : 1337</div><div class="line">debug: -------------------------------------------------------</div></pre></td></tr></table></figure>
<p>启动<code>ExtentX</code>服务时，可能会报一些错，是因为少一些依赖的包，使用<code>npm install 错误提示的包名</code>安装好需要的依赖，之后就可以正常启动了</p>
<h5 id="ExtentX服务默认的用户名和密码"><a href="#ExtentX服务默认的用户名和密码" class="headerlink" title="ExtentX服务默认的用户名和密码"></a><code>ExtentX</code>服务默认的用户名和密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">user:       root</div><div class="line">password:   password</div></pre></td></tr></table></figure>
<h4 id="测试框架集成extent测试报告框架"><a href="#测试框架集成extent测试报告框架" class="headerlink" title="测试框架集成extent测试报告框架"></a>测试框架集成extent测试报告框架</h4><h5 id="pom-xml文件中增加依赖"><a href="#pom-xml文件中增加依赖" class="headerlink" title="pom.xml文件中增加依赖"></a><code>pom.xml</code>文件中增加依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.relevantcodes<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>extentreports<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.41.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="testng-xml文件中修改listeners"><a href="#testng-xml文件中修改listeners" class="headerlink" title="testng.xml文件中修改listeners"></a><code>testng.xml</code>文件中修改<code>listeners</code></h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">listeners</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- extent报告 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.souche.dfcAppium.plugins.extentReporter.ExtentTestNGITestListener"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">listeners</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="加载报告插件"><a href="#加载报告插件" class="headerlink" title="加载报告插件"></a>加载报告插件</h5><img src="/2017/01/18/Extent测试报告使用/报告插件存放位置.png" alt="报告插件存放位置" title="报告插件存放位置">]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;安装MongoDB数据库&quot;&gt;&lt;a href=&quot;#安装MongoDB数据库&quot; class=&quot;headerlink&quot; title=&quot;安装MongoDB数据库&quot;&gt;&lt;/a&gt;安装MongoDB数据库&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;下载&lt;a href=&quot;https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-3.4.1.tgz&quot;&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装&lt;code&gt;MongoDB&lt;/code&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tar -zxvf mongodb-osx-x86_64-3.4.1.tgz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mv mongodb-osx-x86_64-3.4.1 /opt/mongodb-3.4.1/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="测试报告" scheme="http://shadow000902.space/categories/%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="测试报告" scheme="http://shadow000902.space/tags/%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>web.py数据库操作介绍</title>
    <link href="http://shadow000902.space/2017/01/11/web-py%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E4%BB%8B%E7%BB%8D/"/>
    <id>http://shadow000902.space/2017/01/11/web-py数据库操作介绍/</id>
    <published>2017-01-11T12:35:36.000Z</published>
    <updated>2017-06-03T02:44:38.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="安装MySQL数据库"><a href="#安装MySQL数据库" class="headerlink" title="安装MySQL数据库"></a>安装MySQL数据库</h4><h5 id="本地数据库的安装MySQL"><a href="#本地数据库的安装MySQL" class="headerlink" title="本地数据库的安装MySQL"></a>本地数据库的安装<a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">MySQL</a></h5><p>安装完后，会给出一个默认密码：</p>
<a id="more"></a>
<img src="/2017/01/11/web-py数据库操作介绍/初始化密码.png" alt="初始化密码" title="初始化密码">
<h5 id="启动本机上的MySQL"><a href="#启动本机上的MySQL" class="headerlink" title="启动本机上的MySQL"></a>启动本机上的MySQL</h5><img src="/2017/01/11/web-py数据库操作介绍/启动MySQL-1.png" alt="启动MySQL-1" title="启动MySQL-1">
<img src="/2017/01/11/web-py数据库操作介绍/启动MySQL-2.png" alt="启动MySQL-2" title="启动MySQL-2">
<img src="/2017/01/11/web-py数据库操作介绍/启动MySQL-3.png" alt="启动MySQL-3" title="启动MySQL-3">
<h5 id="修改MySQL默认密码"><a href="#修改MySQL默认密码" class="headerlink" title="修改MySQL默认密码"></a>修改MySQL默认密码</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">➜  ~ mysql -u root -p       </div><div class="line">Enter password:         <span class="comment"># 输入刚才安装后生成的密码</span></div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 18</div><div class="line">Server version: 5.7.17 MySQL Community Server (GPL)</div><div class="line"></div><div class="line">Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> help. Type <span class="string">'\c'</span> to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt; SET PASSWORD = PASSWORD(<span class="string">'123456'</span>);           <span class="comment"># 重置密码</span></div></pre></td></tr></table></figure>
<p>这样就把MySQL的登录密码设置成了<code>123456</code></p>
<h4 id="安装Web-py及相关数据库操作模块"><a href="#安装Web-py及相关数据库操作模块" class="headerlink" title="安装Web.py及相关数据库操作模块"></a>安装Web.py及相关数据库操作模块</h4><ol>
<li><p>安装<code>web.py</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">easy_install web.py</div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>MySQLdb</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">easy_install MySQLdb</div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>psycopg2</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">easy_install psycopg2</div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>DBUtils</code>，用于连接池<code>database pool</code>功能</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">easy_install DBUtiles</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="web-py操作数据库"><a href="#web-py操作数据库" class="headerlink" title="web.py操作数据库"></a>web.py操作数据库</h4><h5 id="导入模块，定义数据库连接db"><a href="#导入模块，定义数据库连接db" class="headerlink" title="导入模块，定义数据库连接db"></a>导入模块，定义数据库连接<code>db</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import web</div><div class="line">db = web.database(dbn = <span class="string">'mysql'</span>, db = <span class="string">'mytable'</span>, user = <span class="string">'root'</span>, pw = <span class="string">'123456'</span>)</div><div class="line"><span class="comment"># dbn 用于指定数据库类型</span></div></pre></td></tr></table></figure>
<h5 id="select查询"><a href="#select查询" class="headerlink" title="select查询"></a><code>select</code>查询</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查询表</span></div><div class="line">entries = db.select(<span class="string">'mytable'</span>)</div><div class="line"></div><div class="line"><span class="comment"># where 条件</span></div><div class="line">myvar = dict(name = <span class="string">"Bob"</span>)</div><div class="line">results = db.select(<span class="string">'mytable'</span>, myvar, where = <span class="string">"name = $name"</span>)</div><div class="line">results = db.select(<span class="string">'mytable'</span>, where = <span class="string">"id&gt;100"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 查询具体列</span></div><div class="line">results = db.select(<span class="string">'mytable'</span>, what = <span class="string">"id, name"</span>)</div><div class="line"></div><div class="line"><span class="comment"># order by</span></div><div class="line">results = db.select(<span class="string">'mytable'</span>, order = <span class="string">"post_date DESC"</span>)</div><div class="line"></div><div class="line"><span class="comment"># group</span></div><div class="line">results = db.select(<span class="string">'mytable'</span>, group = <span class="string">"color"</span>)</div><div class="line"></div><div class="line"><span class="comment"># limit</span></div><div class="line">results = db.select(<span class="string">'mytable'</span>, limit = <span class="number">10</span>)</div><div class="line"></div><div class="line"><span class="comment"># offset</span></div><div class="line">results = db.select(<span class="string">'mytable'</span>, offset = <span class="number">10</span>)</div></pre></td></tr></table></figure>
<h5 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">db.insert(<span class="string">'user'</span>, name = <span class="string">'TY'</span>, age = <span class="number">28</span>, passwd = <span class="string">'123456'</span>, email = <span class="string">'526077432@qq.com'</span>)</div><div class="line"><span class="comment"># 插入利用了Python的**kw提供字段值，非常方便</span></div></pre></td></tr></table></figure>
<h5 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">db.update(<span class="string">'mytable'</span>, where = <span class="string">"id = 10"</span>, value1 = <span class="string">"foo"</span>)</div><div class="line">db.update(<span class="string">'user'</span>, where = <span class="string">'id = $id'</span>, vars = &#123;<span class="string">'id'</span> : <span class="number">100</span>&#125;, name = <span class="string">'TY001'</span>, age = <span class="number">29</span>)</div><div class="line"><span class="comment"># update也充分利用了Python的**kw参数，只有传入的**kw才被update，其他字段保持不变。</span></div><div class="line"><span class="comment"># where和vars负责where语句的生成和绑定参数</span></div></pre></td></tr></table></figure>
<h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">db.delete(<span class="string">'mytable'</span>, where = <span class="string">"id = 10"</span>)</div><div class="line">db.delete(<span class="string">'user'</span>, where = <span class="string">'id = $id'</span>, vars = &#123;<span class="string">'id'</span>:<span class="number">100</span>&#125;)</div></pre></td></tr></table></figure>
<h5 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># count</span></div><div class="line">results = db.query(<span class="string">"SELECT COUNT(*) AS total_users FROM users"</span>)</div><div class="line"><span class="keyword">print</span> results[<span class="number">0</span>].total_users</div><div class="line"></div><div class="line"><span class="comment"># join</span></div><div class="line">results = db.query(<span class="string">"SELECT * FROM entries JOIN users WHERE entries.author_id = users.id"</span>)</div><div class="line"></div><div class="line"><span class="comment"># 防止SQL注入</span></div><div class="line">results = db.query(<span class="string">"SELECT * FROM entries WHERE id = $id"</span>, vars = &#123;<span class="string">'id'</span>:<span class="number">10</span>&#125;)</div></pre></td></tr></table></figure>
<h5 id="多数据库操作（web-py大于0-3）"><a href="#多数据库操作（web-py大于0-3）" class="headerlink" title="多数据库操作（web.py大于0.3）"></a>多数据库操作（web.py大于0.3）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">db1 = web.database(dbn = <span class="string">'mysql'</span>, db = <span class="string">'dbname1'</span>, user = <span class="string">'foo'</span>)</div><div class="line">db2 = web.database(dbn = <span class="string">'mysql'</span>, db = <span class="string">'dbname2'</span>, user = <span class="string">'foo'</span>)</div><div class="line"></div><div class="line"><span class="keyword">print</span> db1.select(<span class="string">'foo'</span>, where = <span class="string">'id = 1'</span>)</div><div class="line"><span class="keyword">print</span> db2.select(<span class="string">'bar'</span>, where = <span class="string">'id = 5'</span>)</div></pre></td></tr></table></figure>
<h5 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">t = db.transaction()</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    db.insert(<span class="string">'person'</span>, name = <span class="string">'foo'</span>)</div><div class="line">    db.insert(<span class="string">'person'</span>, name = <span class="string">'bar'</span>)</div><div class="line"><span class="keyword">except</span>:</div><div class="line">    t.rollback()</div><div class="line">    <span class="keyword">raise</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    t.commit()</div><div class="line"></div><div class="line"><span class="comment"># Python 2.5+ 可以用with</span></div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> with_statement</div><div class="line"><span class="keyword">with</span> db.transaction():</div><div class="line">    db.insert(<span class="string">'person'</span>, name = <span class="string">'foo'</span>)</div><div class="line">    db.insert(<span class="string">'person'</span>, name = <span class="string">'bar'</span>)</div></pre></td></tr></table></figure>
<p>和Java比，web.py的db操作非常简单，这主要得益于python的**kw参数和内建的dict支持（对应Java的Map）。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;安装MySQL数据库&quot;&gt;&lt;a href=&quot;#安装MySQL数据库&quot; class=&quot;headerlink&quot; title=&quot;安装MySQL数据库&quot;&gt;&lt;/a&gt;安装MySQL数据库&lt;/h4&gt;&lt;h5 id=&quot;本地数据库的安装MySQL&quot;&gt;&lt;a href=&quot;#本地数据库的安装MySQL&quot; class=&quot;headerlink&quot; title=&quot;本地数据库的安装MySQL&quot;&gt;&lt;/a&gt;本地数据库的安装&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/&quot;&gt;MySQL&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;安装完后，会给出一个默认密码：&lt;/p&gt;
    
    </summary>
    
      <category term="Web.py" scheme="http://shadow000902.space/categories/Web-py/"/>
    
      <category term="数据库" scheme="http://shadow000902.space/categories/Web-py/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="web.py" scheme="http://shadow000902.space/tags/web-py/"/>
    
      <category term="数据库" scheme="http://shadow000902.space/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>八大排序算法的Python实现</title>
    <link href="http://shadow000902.space/2017/01/02/%E5%85%AB%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84Python%E5%AE%9E%E7%8E%B0/"/>
    <id>http://shadow000902.space/2017/01/02/八大排序算法的Python实现/</id>
    <published>2017-01-02T08:00:21.000Z</published>
    <updated>2017-03-25T04:03:20.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><p>它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(lists)</span>:</span></div><div class="line">    <span class="comment"># 冒泡排序</span></div><div class="line">    count = len(lists)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, count):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, count):</div><div class="line">            <span class="keyword">if</span> lists[i] &gt; lists[j]:</div><div class="line">                lists[i], lists[j] = lists[j], lists[i]</div><div class="line">    <span class="keyword">return</span> lists</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><p>通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort</span><span class="params">(lists, left, right)</span>:</span></div><div class="line">    <span class="comment"># 快速排序</span></div><div class="line">    <span class="keyword">if</span> left &gt;= right:</div><div class="line">        <span class="keyword">return</span> lists</div><div class="line">    key = lists[left]</div><div class="line">    low = left</div><div class="line">    high = right</div><div class="line">    <span class="keyword">while</span> left &lt; right:</div><div class="line">        <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> lists[right] &gt;= key:</div><div class="line">            right -= <span class="number">1</span></div><div class="line">        lists[left] = lists[right]</div><div class="line">        <span class="keyword">while</span> left &lt; right <span class="keyword">and</span> lists[left] &lt;= key:</div><div class="line">            left += <span class="number">1</span></div><div class="line">        lists[right] = lists[left]</div><div class="line">    lists[right] = key</div><div class="line">    quick_sort(lists, low, left - <span class="number">1</span>)</div><div class="line">    quick_sort(lists, left + <span class="number">1</span>, high)</div><div class="line">    <span class="keyword">return</span> lists</div></pre></td></tr></table></figure></p>
<h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><p>插入排序的基本操作就是将一个数据插入到已经排好序的有序数据中，从而得到一个新的、个数加一的有序数据，算法适用于少量数据的排序，时间复杂度为O(n^2)。是稳定的排序方法。插入算法把要排序的数组分成两部分：第一部分包含了这个数组的所有元素，但将最后一个元素除外（让数组多一个空间才有插入的位置），而第二部分就只包含这一个元素（即待插入元素）。在第一部分排序完成后，再将这个最后元素插入到已排好序的第一部分中。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span><span class="params">(lists)</span>:</span></div><div class="line">    <span class="comment"># 插入排序</span></div><div class="line">    count = len(lists)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, count):</div><div class="line">        key = lists[i]</div><div class="line">        j = i - <span class="number">1</span></div><div class="line">        <span class="keyword">while</span> j &gt;= <span class="number">0</span>:</div><div class="line">            <span class="keyword">if</span> lists[j] &gt; key:</div><div class="line">                lists[j + <span class="number">1</span>] = lists[j]</div><div class="line">                lists[j] = key</div><div class="line">            j -= <span class="number">1</span></div><div class="line">    <span class="keyword">return</span> lists</div></pre></td></tr></table></figure></p>
<h4 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h4><p>希尔排序(Shell Sort)是插入排序的一种。也称缩小增量排序，是直接插入排序算法的一种更高效的改进版本。希尔排序是非稳定排序算法。该方法因DL．Shell于1959年提出而得名。 希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">shell_sort</span><span class="params">(lists)</span>:</span></div><div class="line">    <span class="comment"># 希尔排序</span></div><div class="line">    count = len(lists)</div><div class="line">    step = <span class="number">2</span></div><div class="line">    group = count / step</div><div class="line">    <span class="keyword">while</span> group &gt; <span class="number">0</span>:</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, group):</div><div class="line">            j = i + group</div><div class="line">            <span class="keyword">while</span> j &lt; count:</div><div class="line">                k = j - group</div><div class="line">                key = lists[j]</div><div class="line">                <span class="keyword">while</span> k &gt;= <span class="number">0</span>:</div><div class="line">                    <span class="keyword">if</span> lists[k] &gt; key:</div><div class="line">                        lists[k + group] = lists[k]</div><div class="line">                        lists[k] = key</div><div class="line">                    k -= group</div><div class="line">                j += group</div><div class="line">        group /= step</div><div class="line">    <span class="keyword">return</span> lists</div></pre></td></tr></table></figure></p>
<h4 id="直接选择排序"><a href="#直接选择排序" class="headerlink" title="直接选择排序"></a>直接选择排序</h4><p>基本思想：第1趟，在待排序记录r1 ~ r[n]中选出最小的记录，将它与r1交换；第2趟，在待排序记录r2 ~ r[n]中选出最小的记录，将它与r2交换；以此类推，第i趟在待排序记录r[i] ~ r[n]中选出最小的记录，将它与r[i]交换，使有序序列不断增长直到全部排序完毕。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_sort</span><span class="params">(lists)</span>:</span></div><div class="line">    <span class="comment"># 选择排序</span></div><div class="line">    count = len(lists)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, count):</div><div class="line">        min = i</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, count):</div><div class="line">            <span class="keyword">if</span> lists[min] &gt; lists[j]:</div><div class="line">                min = j</div><div class="line">        lists[min], lists[i] = lists[i], lists[min]</div><div class="line">    <span class="keyword">return</span> lists</div></pre></td></tr></table></figure></p>
<h4 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h4><p>堆排序(Heapsort)是指利用堆积树（堆）这种数据结构所设计的一种排序算法，它是选择排序的一种。可以利用数组的特点快速定位指定索引的元素。堆分为大根堆和小根堆，是完全二叉树。大根堆的要求是每个节点的值都不大于其父节点的值，即A[PARENT[i]] &gt;= A[i]。在数组的非降序排序中，需要使用的就是大根堆，因为根据大根堆的要求可知，最大的值一定在堆顶。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 调整堆</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">adjust_heap</span><span class="params">(lists, i, size)</span>:</span></div><div class="line">    lchild = <span class="number">2</span> * i + <span class="number">1</span></div><div class="line">    rchild = <span class="number">2</span> * i + <span class="number">2</span></div><div class="line">    max = i</div><div class="line">    <span class="keyword">if</span> i &lt; size / <span class="number">2</span>:</div><div class="line">        <span class="keyword">if</span> lchild &lt; size <span class="keyword">and</span> lists[lchild] &gt; lists[max]:</div><div class="line">            max = lchild</div><div class="line">        <span class="keyword">if</span> rchild &lt; size <span class="keyword">and</span> lists[rchild] &gt; lists[max]:</div><div class="line">            max = rchild</div><div class="line">        <span class="keyword">if</span> max != i:</div><div class="line">            lists[max], lists[i] = lists[i], lists[max]</div><div class="line">            adjust_heap(lists, max, size)</div><div class="line"><span class="comment"># 创建堆</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_heap</span><span class="params">(lists, size)</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, (size/<span class="number">2</span>))[::<span class="number">-1</span>]:</div><div class="line">        adjust_heap(lists, i, size)</div><div class="line"><span class="comment"># 堆排序</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">heap_sort</span><span class="params">(lists)</span>:</span></div><div class="line">    size = len(lists)</div><div class="line">    build_heap(lists, size)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, size)[::<span class="number">-1</span>]:</div><div class="line">        lists[<span class="number">0</span>], lists[i] = lists[i], lists[<span class="number">0</span>]</div><div class="line">        adjust_heap(lists, <span class="number">0</span>, i)</div></pre></td></tr></table></figure></p>
<h4 id="归并排序算法"><a href="#归并排序算法" class="headerlink" title="归并排序算法"></a>归并排序算法</h4><p>描述：归并排序是建立在归并操作上的一种有效的排序算法,该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。<br>归并过程为：比较a[i]和a[j]的大小，若a[i]≤a[j]，则将第一个有序表中的元素a[i]复制到r[k]中，并令i和k分别加上1；否则将第二个有序表中的元素a[j]复制到r[k]中，并令j和k分别加上1，如此循环下去，直到其中一个有序表取完，然后再将另一个有序表中剩余的元素复制到r中从下标k到下标t的单元。归并排序的算法我们通常用递归实现，先把待排序区间[s,t]以中点二分，接着把左边子区间排序，再把右边子区间排序，最后把左区间和右区间用一次归并操作合并成有序的区间[s,t]。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge</span><span class="params">(left, right)</span>:</span></div><div class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></div><div class="line">    result = []</div><div class="line">    <span class="keyword">while</span> i &lt; len(left) <span class="keyword">and</span> j &lt; len(right):</div><div class="line">        <span class="keyword">if</span> left[i] &lt;= right[j]:</div><div class="line">            result.append(left[i])</div><div class="line">            i += <span class="number">1</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            result.append(right[j])</div><div class="line">            j += <span class="number">1</span></div><div class="line">    result += left[i:]</div><div class="line">    result += right[j:]</div><div class="line">    <span class="keyword">return</span> result</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span><span class="params">(lists)</span>:</span></div><div class="line">    <span class="comment"># 归并排序</span></div><div class="line">    <span class="keyword">if</span> len(lists) &lt;= <span class="number">1</span>:</div><div class="line">        <span class="keyword">return</span> lists</div><div class="line">    num = len(lists) / <span class="number">2</span></div><div class="line">    left = merge_sort(lists[:num])</div><div class="line">    right = merge_sort(lists[num:])</div><div class="line">    <span class="keyword">return</span> merge(left, right)</div></pre></td></tr></table></figure></p>
<h4 id="基数排序算法"><a href="#基数排序算法" class="headerlink" title="基数排序算法"></a>基数排序算法</h4><p>基数排序（radix sort）属于“分配式排序”（distribution sort），又称“桶子法”（bucket sort）或bin sort，顾名思义，它是透过键值的部份资讯，将要排序的元素分配至某些“桶”中，藉以达到排序的作用，基数排序法是属于稳定性的排序，其时间复杂度为O (nlog(r)m)，其中r为所采取的基数，而m为堆数，在某些时候，基数排序法的效率高于其它的稳定性排序法。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> math</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">radix_sort</span><span class="params">(lists, radix=<span class="number">10</span>)</span>:</span></div><div class="line">    k = int(math.ceil(math.log(max(lists), radix)))</div><div class="line">    bucket = [[] <span class="keyword">for</span> i <span class="keyword">in</span> range(radix)]</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, k+<span class="number">1</span>):</div><div class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> lists:</div><div class="line">            bucket[j/(radix**(i<span class="number">-1</span>)) % (radix**i)].append(j)</div><div class="line">        <span class="keyword">del</span> lists[:]</div><div class="line">        <span class="keyword">for</span> z <span class="keyword">in</span> bucket:</div><div class="line">            lists += z</div><div class="line">            <span class="keyword">del</span> z[:]</div><div class="line">    <span class="keyword">return</span> lists</div></pre></td></tr></table></figure></p>
<h4 id="各种算法的时间复杂度"><a href="#各种算法的时间复杂度" class="headerlink" title="各种算法的时间复杂度"></a>各种算法的时间复杂度</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h4&gt;&lt;p&gt;它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bubble_sort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(lists)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 冒泡排序&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count = len(lists)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, count):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, count):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; lists[i] &amp;gt; lists[j]:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                lists[i], lists[j] = lists[j], lists[i]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; lists&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://shadow000902.space/categories/Python/"/>
    
      <category term="排序" scheme="http://shadow000902.space/categories/Python/%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="python" scheme="http://shadow000902.space/tags/python/"/>
    
      <category term="排序" scheme="http://shadow000902.space/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>八大排序算法的Java实现</title>
    <link href="http://shadow000902.space/2017/01/02/%E5%85%AB%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84Java%E5%AE%9E%E7%8E%B0/"/>
    <id>http://shadow000902.space/2017/01/02/八大排序算法的Java实现/</id>
    <published>2017-01-02T06:46:07.000Z</published>
    <updated>2017-03-24T17:52:52.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><p>　　冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。<br>　　冒泡排序的<strong>示例</strong>：<br><img src="http://upload-images.jianshu.io/upload_images/196518-49509183dfb68c64.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<p>冒泡排序的<strong>算法实现</strong>如下:【排序后，数组从小到大排列】</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 冒泡排序</div><div class="line"> * 比较相邻的元素。如果第一个比第二个大，就交换他们两个。  </div><div class="line"> * 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。  </div><div class="line"> * 针对所有的元素重复以上的步骤，除了最后一个。</div><div class="line"> * 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</div><div class="line"> * <span class="doctag">@param</span> numbers 需要排序的整型数组</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>[] numbers)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> size = numbers.length;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size-<span class="number">1</span>; i ++)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ;j &lt; size-<span class="number">1</span>-i ; j++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(numbers[j] &gt; numbers[j+<span class="number">1</span>])  <span class="comment">//交换两数位置</span></div><div class="line">        &#123;</div><div class="line">        temp = numbers[j];</div><div class="line">        numbers[j] = numbers[j+<span class="number">1</span>];</div><div class="line">        numbers[j+<span class="number">1</span>] = temp;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>
<h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><p><strong>快速排序的基本思想</strong>：<br>      通过一趟排序将待排序记录分割成独立的两部分，其中一部分记录的关键字均比另一部分关键字小，则分别对这两部分继续进行排序，直到整个序列有序。<br>快速排序的<strong>示例</strong>：<br>（a）一趟排序的过程：<br><img src="http://upload-images.jianshu.io/upload_images/196518-d8f8ad1138df64c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>（b）排序的全过程：<br><img src="http://upload-images.jianshu.io/upload_images/196518-d7667720de515784.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>　　把整个序列看做一个数组，把第零个位置看做中轴，和最后一个比，如果比它小交换，比它大不做任何处理；交换了以后再和小的那端比，比它小不交换，比他大交换。这样循环往复，一趟排序完成，左边就是比中轴小的，右边就是比中轴大的，然后再用分治法，分别对这两个独立的数组进行排序。</p>
<p>代码实现如下：</p>
<h5 id="查找中轴（最低位作为中轴）所在位置："><a href="#查找中轴（最低位作为中轴）所在位置：" class="headerlink" title="查找中轴（最低位作为中轴）所在位置："></a>查找中轴（最低位作为中轴）所在位置：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 查找出中轴（默认是最低位low）的在numbers数组排序后所在位置</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> numbers 带查找数组</div><div class="line"> * <span class="doctag">@param</span> low   开始位置</div><div class="line"> * <span class="doctag">@param</span> high  结束位置</div><div class="line"> * <span class="doctag">@return</span>  中轴所在位置</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMiddle</span><span class="params">(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> temp = numbers[low]; <span class="comment">//数组的第一个作为中轴</span></div><div class="line">    <span class="keyword">while</span>(low &lt; high)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">while</span>(low &lt; high &amp;&amp; numbers[high] &gt; temp)</div><div class="line">    &#123;</div><div class="line">        high--;</div><div class="line">    &#125;</div><div class="line">    numbers[low] = numbers[high];<span class="comment">//比中轴小的记录移到低端</span></div><div class="line">    <span class="keyword">while</span>(low &lt; high &amp;&amp; numbers[low] &lt; temp)</div><div class="line">    &#123;</div><div class="line">        low++;</div><div class="line">    &#125;</div><div class="line">    numbers[high] = numbers[low] ; <span class="comment">//比中轴大的记录移到高端</span></div><div class="line">    &#125;</div><div class="line">    numbers[low] = temp ; <span class="comment">//中轴记录到尾</span></div><div class="line">    <span class="keyword">return</span> low ; <span class="comment">// 返回中轴的位置</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="递归形式的分治排序算法："><a href="#递归形式的分治排序算法：" class="headerlink" title="递归形式的分治排序算法："></a>递归形式的分治排序算法：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> numbers 带排序数组</div><div class="line"> * <span class="doctag">@param</span> low  开始位置</div><div class="line"> * <span class="doctag">@param</span> high 结束位置</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] numbers,<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(low &lt; high)</div><div class="line">    &#123;</div><div class="line">    　　<span class="keyword">int</span> middle = getMiddle(numbers,low,high); <span class="comment">//将numbers数组进行一分为二</span></div><div class="line">    　　quickSort(numbers, low, middle-<span class="number">1</span>);   <span class="comment">//对低字段表进行递归排序</span></div><div class="line">    　　quickSort(numbers, middle+<span class="number">1</span>, high); <span class="comment">//对高字段表进行递归排序</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="快速排序提供方法调用："><a href="#快速排序提供方法调用：" class="headerlink" title="快速排序提供方法调用："></a>快速排序提供方法调用：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 快速排序</div><div class="line"> * <span class="doctag">@param</span> numbers 带排序数组</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quick</span><span class="params">(<span class="keyword">int</span>[] numbers)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(numbers.length &gt; <span class="number">0</span>)   <span class="comment">//查看数组是否为空</span></div><div class="line">    &#123;</div><div class="line">    quickSort(numbers, <span class="number">0</span>, numbers.length-<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>分析：</strong><br>快速排序是通常被认为在同数量级（O(nlog2n)）的排序方法中平均性能最好的。但若初始序列按关键码有序或基本有序时，快排序反而蜕化为冒泡排序。为改进之，通常以“三者取中法”来选取基准记录，即将排序区间的两个端点与中点三个记录关键码居中的调整为支点记录。快速排序是一个不稳定的排序方法。</p>
<h5 id="方法测试"><a href="#方法测试" class="headerlink" title="方法测试"></a>方法测试</h5><p>打印函数：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArr</span><span class="params">(<span class="keyword">int</span>[] numbers)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; numbers.length ; i ++ )</div><div class="line">    &#123;</div><div class="line">    System.out.print(numbers[i] + <span class="string">","</span>);</div><div class="line">    &#125;</div><div class="line">    System.out.println(<span class="string">""</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span>[] numbers = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">1</span>,-<span class="number">5</span>,<span class="number">55</span>&#125;;</div><div class="line">    System.out.print(<span class="string">"排序前："</span>);</div><div class="line">    printArr(numbers);</div><div class="line"></div><div class="line">    bubbleSort(numbers);</div><div class="line">    System.out.print(<span class="string">"冒泡排序后："</span>);</div><div class="line">    printArr(numbers);</div><div class="line"></div><div class="line"></div><div class="line">    quick(numbers);</div><div class="line">    System.out.print(<span class="string">"快速排序后："</span>);</div><div class="line">    printArr(numbers);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果：</p>
<pre><code>排序前：10,20,15,0,6,7,2,1,-5,55,
冒泡排序后：-5,0,1,2,6,7,10,15,20,55,
快速排序后：-5,0,1,2,6,7,10,15,20,55,
</code></pre><h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><p>　　<strong>1、基本思想</strong>：在要排序的一组数中，选出最小的一个数与第一个位置的数交换；然后在剩下的数当中再找最小的与第二个位置的数交换，如此循环到倒数第二个数和最后一个数比较为止。<br>　　<strong>2、实例</strong>：<br><img src="http://upload-images.jianshu.io/upload_images/196518-d78721e606ac9113.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>　　<strong>3、算法实现</strong>：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line"> * 选择排序算法</div><div class="line"> * 在未排序序列中找到最小元素，存放到排序序列的起始位置  </div><div class="line"> * 再从剩余未排序元素中继续寻找最小元素，然后放到排序序列末尾。</div><div class="line"> * 以此类推，直到所有元素均排序完毕。</div><div class="line"> * <span class="doctag">@param</span> numbers</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] numbers)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> size = numbers.length; <span class="comment">//数组长度</span></div><div class="line"><span class="keyword">int</span> temp = <span class="number">0</span> ; <span class="comment">//中间变量</span></div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> k = i;   <span class="comment">//待确定的位置</span></div><div class="line">    <span class="comment">//选择出应该在第i个位置的数</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = size -<span class="number">1</span> ; j &gt; i ; j--)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">if</span>(numbers[j] &lt; numbers[k])</div><div class="line">    &#123;</div><div class="line">        k = j;</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//交换两个数</span></div><div class="line">    temp = numbers[i];</div><div class="line">    numbers[i] = numbers[k];</div><div class="line">    numbers[k] = temp;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h4><p>　　<strong>1、基本思想</strong>：每步将一个待排序的记录，按其顺序码大小插入到前面已经排序的字序列的合适位置（从后向前找到合适位置后），直到全部插入排序完为止。<br>　　<strong>2、实例</strong>：<br><img src="http://upload-images.jianshu.io/upload_images/196518-d3c35e80e0474225.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>　　<strong>3、算法实现</strong>：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**  </span></div><div class="line"> * 插入排序</div><div class="line"> *</div><div class="line"> * 从第一个元素开始，该元素可以认为已经被排序</div><div class="line"> * 取出下一个元素，在已经排序的元素序列中从后向前扫描</div><div class="line"> * 如果该元素（已排序）大于新元素，将该元素移到下一位置  </div><div class="line"> * 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置  </div><div class="line"> * 将新元素插入到该位置中  </div><div class="line"> * 重复步骤2  </div><div class="line"> * <span class="doctag">@param</span> numbers  待排序数组</div><div class="line"> */  </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] numbers)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> size = numbers.length;</div><div class="line"><span class="keyword">int</span> temp = <span class="number">0</span> ;</div><div class="line"><span class="keyword">int</span> j =  <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</div><div class="line">&#123;</div><div class="line">    temp = numbers[i];</div><div class="line">    <span class="comment">//假如temp比前面的值小，则将前面的值后移</span></div><div class="line">    <span class="keyword">for</span>(j = i ; j &gt; <span class="number">0</span> &amp;&amp; temp &lt; numbers[j-<span class="number">1</span>] ; j --)</div><div class="line">    &#123;</div><div class="line">    numbers[j] = numbers[j-<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    numbers[j] = temp;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>　　<strong>4、效率</strong>：<br>时间复杂度：O（n^2）.</p>
<h4 id="希尔算法"><a href="#希尔算法" class="headerlink" title="希尔算法"></a>希尔算法</h4><p><strong>1、基本思想：</strong><br>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，待整个序列中的记录“基本有序”时，再对全体记录进行依次直接插入排序。<br><strong>2、操作方法：</strong></p>
<p>1、选择一个增量序列t1，t2，…，tk，其中ti&gt;tj，tk=1；</p>
<p>2、按增量序列个数k，对序列进行k 趟排序；</p>
<p>3、每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</p>
<p>希尔排序的示例：<br><img src="http://upload-images.jianshu.io/upload_images/196518-9ba273ecfd05bd93.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br> <strong>3、**</strong>算法实现：**<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**希尔排序的原理:根据需求，如果你想要结果从大到小排列，它会首先将数组进行分组，然后将较大值移到前面，较小值</span></div><div class="line"> * 移到后面，最后将整个数组进行插入排序，这样比起一开始就用插入排序减少了数据交换和移动的次数，可以说希尔排序是加强</div><div class="line"> * 版的插入排序</div><div class="line"> * 拿数组5, 2, 8, 9, 1, 3，4来说，数组长度为7，当increment为3时，数组分为两个序列</div><div class="line"> * 5，2，8和9，1，3，4，第一次排序，9和5比较，1和2比较，3和8比较，4和比其下标值小increment的数组值相比较</div><div class="line"> * 此例子是按照从大到小排列，所以大的会排在前面，第一次排序后数组为9, 2, 8, 5, 1, 3，4</div><div class="line"> * 第一次后increment的值变为3/2=1,此时对数组进行插入排序，</div><div class="line"> *实现数组从大到小排</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] data)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</div><div class="line">    <span class="comment">//每次将步长缩短为原来的一半</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> increment = data.length / <span class="number">2</span>; increment &gt; <span class="number">0</span>; increment /= <span class="number">2</span>)</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = increment; i &lt; data.length; i++)</div><div class="line">    &#123;</div><div class="line">        temp = data[i];</div><div class="line">        <span class="keyword">for</span> (j = i; j &gt;= increment; j -= increment)</div><div class="line">        &#123;</div><div class="line">        <span class="keyword">if</span>(temp &gt; data[j - increment])<span class="comment">//如想从小到大排只需修改这里</span></div><div class="line">        &#123;   </div><div class="line">            data[j] = data[j - increment];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        data[j] = temp;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>4、效率</strong>：<br>时间复杂度：O（n^2）.</p>
<h4 id="归并排序算法"><a href="#归并排序算法" class="headerlink" title="归并排序算法"></a>归并排序算法</h4><p><strong>基本思想：</strong><br>　　归并（Merge）排序法是将两个（或两个以上）有序表合并成一个新的有序表，即把待排序序列分为若干个子序列，每个子序列是有序的。然后再把有序子序列合并为整体有序序列。<br>归并排序示例：<br><img src="http://upload-images.jianshu.io/upload_images/196518-4281c79eb1d8bbd2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><strong>合并方法：</strong><br>设r[i…n]由两个有序子表r[i…m]和r[m+1…n]组成，两个子表长度分别为n-i +1、n-m。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">1、j=m+1；k=i；i=i; //置两个子表的起始下标及辅助数组的起始下标</div><div class="line">2、若i&gt;m 或j&gt;n，转⑷ //其中一个子表已合并完，比较选取结束</div><div class="line">3、//选取r[i]和r[j]较小的存入辅助数组rf</div><div class="line">        如果r[i]&lt;r[j]，rf[k]=r[i]； i++； k++； 转⑵</div><div class="line">        否则，rf[k]=r[j]； j++； k++； 转⑵</div><div class="line">4、//将尚未处理完的子表中元素存入rf</div><div class="line">        如果i&lt;=m，将r[i…m]存入rf[k…n] //前一子表非空</div><div class="line">        如果j&lt;=n ,  将r[j…n] 存入rf[k…n] //后一子表非空</div><div class="line">5、合并结束。</div></pre></td></tr></table></figure></p>
<p><strong>算法实现：</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line"> * 归并排序</div><div class="line"> * 简介:将两个（或两个以上）有序表合并成一个新的有序表 即把待排序序列分为若干个子序列，每个子序列是有序的。然后再把有序子序列合并为整体有序序列</div><div class="line"> * 时间复杂度为O(nlogn)</div><div class="line"> * 稳定排序方式</div><div class="line"> * <span class="doctag">@param</span> nums 待排序数组</div><div class="line"> * <span class="doctag">@return</span> 输出有序数组</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sort(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> low, <span class="keyword">int</span> high) &#123;</div><div class="line">    <span class="keyword">int</span> mid = (low + high) / <span class="number">2</span>;</div><div class="line">    <span class="keyword">if</span> (low &lt; high) &#123;</div><div class="line">        <span class="comment">// 左边</span></div><div class="line">        sort(nums, low, mid);</div><div class="line">        <span class="comment">// 右边</span></div><div class="line">        sort(nums, mid + <span class="number">1</span>, high);</div><div class="line">        <span class="comment">// 左右归并</span></div><div class="line">        merge(nums, low, mid, high);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> nums;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 将数组中low到high位置的数进行排序</div><div class="line"> * <span class="doctag">@param</span> nums 待排序数组</div><div class="line"> * <span class="doctag">@param</span> low 待排的开始位置</div><div class="line"> * <span class="doctag">@param</span> mid 待排中间位置</div><div class="line"> * <span class="doctag">@param</span> high 待排结束位置</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> low, <span class="keyword">int</span> mid, <span class="keyword">int</span> high)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[high - low + <span class="number">1</span>];</div><div class="line">    <span class="keyword">int</span> i = low;<span class="comment">// 左指针</span></div><div class="line">    <span class="keyword">int</span> j = mid + <span class="number">1</span>;<span class="comment">// 右指针</span></div><div class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="comment">// 把较小的数先移到新数组中</span></div><div class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= high) &#123;</div><div class="line">        <span class="keyword">if</span> (nums[i] &lt; nums[j]) &#123;</div><div class="line">            temp[k++] = nums[i++];</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            temp[k++] = nums[j++];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 把左边剩余的数移入数组</span></div><div class="line">    <span class="keyword">while</span> (i &lt;= mid) &#123;</div><div class="line">        temp[k++] = nums[i++];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 把右边边剩余的数移入数组</span></div><div class="line">    <span class="keyword">while</span> (j &lt;= high) &#123;</div><div class="line">        temp[k++] = nums[j++];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 把新数组中的数覆盖nums数组</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k2 = <span class="number">0</span>; k2 &lt; temp.length; k2++) &#123;</div><div class="line">        nums[k2 + low] = temp[k2];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="堆排序算法"><a href="#堆排序算法" class="headerlink" title="堆排序算法"></a>堆排序算法</h4><p><strong>1、基本思想：</strong><br>　　堆排序是一种树形选择排序，是对直接选择排序的有效改进。<br>　　堆的定义下：具有n个元素的序列 （h1,h2,…,hn),当且仅当满足（hi&gt;=h2i,hi&gt;=2i+1）或（hi&lt;=h2i,hi&lt;=2i+1） (i=1,2,…,n/2)时称之为堆。在这里只讨论满足前者条件的堆。由堆的定义可以看出，堆顶元素（即第一个元素）必为最大项（大顶堆）。完全二 叉树可以很直观地表示堆的结构。堆顶为根，其它为左子树、右子树。<br>　　思想:初始时把要排序的数的序列看作是一棵顺序存储的二叉树，调整它们的存储序，使之成为一个 堆，这时堆的根节点的数最大。然后将根节点与堆的最后一个节点交换。然后对前面(n-1)个数重新调整使之成为堆。依此类推，直到只有两个节点的堆，并对 它们作交换，最后得到有n个节点的有序序列。从算法描述来看，堆排序需要两个过程，一是建立堆，二是堆顶与堆的最后一个元素交换位置。所以堆排序有两个函数组成。一是建堆的渗透函数，二是反复调用渗透函数实现排序的函数。<br><strong>2、实例：</strong><br>初始序列：46,79,56,38,40,84<br>　　建堆：<br><img src="http://upload-images.jianshu.io/upload_images/196518-65ab0a125c803bd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br> 　　交换，从堆中踢出最大数：<br><img src="http://upload-images.jianshu.io/upload_images/196518-aaffe2862da0c322.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>依次类推：最后堆中剩余的最后两个结点交换，踢出一个，排序完成。<br><strong>3.算法实现：</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeapSort</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span>[] a=&#123;<span class="number">49</span>,<span class="number">38</span>,<span class="number">65</span>,<span class="number">97</span>,<span class="number">76</span>,<span class="number">13</span>,<span class="number">27</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">34</span>,<span class="number">12</span>,<span class="number">64</span>&#125;;</div><div class="line">        <span class="keyword">int</span> arrayLength=a.length;  </div><div class="line">        <span class="comment">//循环建堆  </span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arrayLength-<span class="number">1</span>;i++)&#123;  </div><div class="line">            <span class="comment">//建堆  </span></div><div class="line">            buildMaxHeap(a,arrayLength-<span class="number">1</span>-i);  </div><div class="line">            <span class="comment">//交换堆顶和最后一个元素  </span></div><div class="line">            swap(a,<span class="number">0</span>,arrayLength-<span class="number">1</span>-i);  </div><div class="line">            System.out.println(Arrays.toString(a));  </div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">    <span class="comment">//对data数组从0到lastIndex建大顶堆</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">buildMaxHeap</span><span class="params">(<span class="keyword">int</span>[] data, <span class="keyword">int</span> lastIndex)</span></span>&#123;</div><div class="line">         <span class="comment">//从lastIndex处节点（最后一个节点）的父节点开始</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=(lastIndex-<span class="number">1</span>)/<span class="number">2</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">            <span class="comment">//k保存正在判断的节点</span></div><div class="line">            <span class="keyword">int</span> k=i;</div><div class="line">            <span class="comment">//如果当前k节点的子节点存在  </span></div><div class="line">            <span class="keyword">while</span>(k*<span class="number">2</span>+<span class="number">1</span>&lt;=lastIndex)&#123;</div><div class="line">                <span class="comment">//k节点的左子节点的索引</span></div><div class="line">                <span class="keyword">int</span> biggerIndex=<span class="number">2</span>*k+<span class="number">1</span>;</div><div class="line">                <span class="comment">//如果biggerIndex小于lastIndex，即biggerIndex+1代表的k节点的右子节点存在</span></div><div class="line">                <span class="keyword">if</span>(biggerIndex&lt;lastIndex)&#123;  </div><div class="line">                    <span class="comment">//若果右子节点的值较大  </span></div><div class="line">                    <span class="keyword">if</span>(data[biggerIndex]&lt;data[biggerIndex+<span class="number">1</span>])&#123;  </div><div class="line">                        <span class="comment">//biggerIndex总是记录较大子节点的索引  </span></div><div class="line">                        biggerIndex++;  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">                <span class="comment">//如果k节点的值小于其较大的子节点的值  </span></div><div class="line">                <span class="keyword">if</span>(data[k]&lt;data[biggerIndex])&#123;  </div><div class="line">                    <span class="comment">//交换他们  </span></div><div class="line">                    swap(data,k,biggerIndex);  </div><div class="line">                    <span class="comment">//将biggerIndex赋予k，开始while循环的下一次循环，重新保证k节点的值大于其左右子节点的值  </span></div><div class="line">                    k=biggerIndex;  </div><div class="line">                &#125;<span class="keyword">else</span>&#123;  </div><div class="line">                    <span class="keyword">break</span>;  </div><div class="line">                &#125;  </div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//交换</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] data, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;  </div><div class="line">        <span class="keyword">int</span> tmp=data[i];  </div><div class="line">        data[i]=data[j];  </div><div class="line">        data[j]=tmp;  </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="各种算法的时间复杂度"><a href="#各种算法的时间复杂度" class="headerlink" title="各种算法的时间复杂度"></a>各种算法的时间复杂度</h4><p><img src="http://upload-images.jianshu.io/upload_images/196518-584a80a392639ce7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h4&gt;&lt;p&gt;　　冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。&lt;br&gt;　　冒泡排序的&lt;strong&gt;示例&lt;/strong&gt;：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/196518-49509183dfb68c64.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://shadow000902.space/categories/Java/"/>
    
      <category term="排序" scheme="http://shadow000902.space/categories/Java/%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="java" scheme="http://shadow000902.space/tags/java/"/>
    
      <category term="排序" scheme="http://shadow000902.space/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="http://shadow000902.space/2016/12/08/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://shadow000902.space/2016/12/08/docker学习笔记/</id>
    <published>2016-12-08T02:16:51.000Z</published>
    <updated>2016-12-11T03:33:14.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>无法删除docker镜像时，处理方法<br>有依赖该image的container，先删除container再删除image<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">docker ps -a | grep &quot;Exited&quot; | awk &apos;&#123;print $1 &#125;&apos;|xargs docker stop</div><div class="line">docker ps -a | grep &quot;Exited&quot; | awk &apos;&#123;print $1 &#125;&apos;|xargs docker rm</div><div class="line">docker images|grep none|awk &apos;&#123;print $3 &#125;&apos;|xargs docker rmi</div></pre></td></tr></table></figure>
</li>
</ol>
<p>这样清空掉残余的容器后，再删除images就没有异常的提示了。</p>
<ol>
<li><p>安装<code>docker&amp;boot2docker</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install boot2docker</div></pre></td></tr></table></figure>
</li>
<li><p><code>Docker images</code>存放位置<br><code>Docker for Mac</code>版本，所有的docker images 保存在下面这个文件里：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/Users/&#123;YourUserName&#125;/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/Docker.qcow2</div></pre></td></tr></table></figure>
</li>
</ol>
<p>到目前为止，还是没有办法指定<code>images</code>和<code>Container</code>的保存路径，你只能任由<code>docker</code>吃掉你的主盘。</p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;无法删除docker镜像时，处理方法&lt;br&gt;有依赖该image的container，先删除container再删除image&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;d
    
    </summary>
    
      <category term="Docker" scheme="http://shadow000902.space/categories/Docker/"/>
    
    
      <category term="docker" scheme="http://shadow000902.space/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>MAC系统空间清理</title>
    <link href="http://shadow000902.space/2016/11/29/MAC%E7%B3%BB%E7%BB%9F%E7%A9%BA%E9%97%B4%E6%B8%85%E7%90%86/"/>
    <id>http://shadow000902.space/2016/11/29/MAC系统空间清理/</id>
    <published>2016-11-29T10:03:51.000Z</published>
    <updated>2017-02-05T10:10:37.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>删除Emacs——可以节省出60MB+的硬盘空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo rm -rf /usr/share/emacs/</div></pre></td></tr></table></figure>
</li>
<li><p>移除系统嗓音文件——可以节省出500MB-3GB+硬盘空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /System/Library/Speech/</div><div class="line">sudo rm -rf Voices/*</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>删除所有系统日志——可以节省出100MB-2GB硬盘空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo rm -rf /private/var/log/*</div></pre></td></tr></table></figure>
</li>
<li><p>删除快速查看生成的缓存文件——可以节省出100MB-300MB硬盘空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo rm -rf /private/var/folders/</div></pre></td></tr></table></figure>
</li>
<li><p>禁用SafeSleep休眠模式——能节省出4GB-16GB空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo pmset -a hibernatemode 0                           # 禁用SafeSleep功能</div><div class="line">cd /private/var/vm/</div><div class="line">sudo rm sleepimage</div><div class="line">touch sleepimage                                        # 要防止OS X继续创建该文件，所以我们需要下面的命令生成一个无法被替换的空文件</div><div class="line">chmod 000 /private/var/vm/sleepimage</div><div class="line">sudo pmset -a hibernatemode 3                           # 重新开启SafeSleep功能</div><div class="line">sudo rm /private/var/vm/sleepimage</div></pre></td></tr></table></figure>
</li>
<li><p>清除缓存文件——可以节省1GB-10GB硬盘空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/Library/Caches/</div><div class="line">rm -rf ~/Library/Caches/*</div></pre></td></tr></table></figure>
</li>
<li><p>删除临时文件——可以节省500MB-5GB硬盘空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /private/var/tmp/</div><div class="line">rm -rf TM*</div></pre></td></tr></table></figure>
</li>
</ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;删除Emacs——可以节省出60MB+的硬盘空间&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo rm -rf /usr/share/emacs/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移除系统嗓音文件——可以节省出500MB-3GB+硬盘空间&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd /System/Library/Speech/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo rm -rf Voices/*&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://shadow000902.space/categories/Mac/"/>
    
    
      <category term="mac" scheme="http://shadow000902.space/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>UBUNTU服务器设置局域网远程访问</title>
    <link href="http://shadow000902.space/2016/11/29/UBUNTU%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BE%E7%BD%AE%E5%B1%80%E5%9F%9F%E7%BD%91%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    <id>http://shadow000902.space/2016/11/29/UBUNTU服务器设置局域网远程访问/</id>
    <published>2016-11-29T08:18:35.000Z</published>
    <updated>2017-03-25T10:37:14.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="安装ssh"><a href="#安装ssh" class="headerlink" title="安装ssh"></a>安装<code>ssh</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openssh-server</div></pre></td></tr></table></figure>
<h5 id="查看ssh服务是否启动"><a href="#查看ssh服务是否启动" class="headerlink" title="查看ssh服务是否启动"></a>查看<code>ssh</code>服务是否启动</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -ef | grep ssh</div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="如果ssh服务没有启动，启动ssh服务"><a href="#如果ssh服务没有启动，启动ssh服务" class="headerlink" title="如果ssh服务没有启动，启动ssh服务"></a>如果<code>ssh</code>服务没有启动，启动<code>ssh</code>服务</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service ssh start</div></pre></td></tr></table></figure>
<h5 id="修改ssh配置文件"><a href="#修改ssh配置文件" class="headerlink" title="修改ssh配置文件"></a>修改<code>ssh</code>配置文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/ssh/sshd_config</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Authentication:</div><div class="line">LoginGraceTime 120</div><div class="line">#PermitRootLogin without-password               # 该行首加一个“#”注释掉该行</div><div class="line">PermitRootLogin yes                             # 添加该行，增加一个配置项</div><div class="line">StrictModes yes</div></pre></td></tr></table></figure>
<h5 id="局域网远程访问"><a href="#局域网远程访问" class="headerlink" title="局域网远程访问"></a>局域网远程访问</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssh root@192.168.0.1</div><div class="line"># root 远程服务器访问用户名</div><div class="line"># 192.168.0.1 远程服务器局域网IP</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;安装ssh&quot;&gt;&lt;a href=&quot;#安装ssh&quot; class=&quot;headerlink&quot; title=&quot;安装ssh&quot;&gt;&lt;/a&gt;安装&lt;code&gt;ssh&lt;/code&gt;&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get install openssh-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;查看ssh服务是否启动&quot;&gt;&lt;a href=&quot;#查看ssh服务是否启动&quot; class=&quot;headerlink&quot; title=&quot;查看ssh服务是否启动&quot;&gt;&lt;/a&gt;查看&lt;code&gt;ssh&lt;/code&gt;服务是否启动&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ps -ef | grep ssh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Ubuntu" scheme="http://shadow000902.space/categories/Ubuntu/"/>
    
      <category term="局域网" scheme="http://shadow000902.space/categories/Ubuntu/%E5%B1%80%E5%9F%9F%E7%BD%91/"/>
    
    
      <category term="ubuntu" scheme="http://shadow000902.space/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Appium-WebView测试</title>
    <link href="http://shadow000902.space/2016/11/21/Appium-WebView%E6%B5%8B%E8%AF%95/"/>
    <id>http://shadow000902.space/2016/11/21/Appium-WebView测试/</id>
    <published>2016-11-20T17:07:09.000Z</published>
    <updated>2017-03-25T08:18:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在多数App都是混合型的，有原生的也包含WebView的，appium测试的时候就需要在原生和WebView之间切换才能完成测试。</p>
<h5 id="查看所有context"><a href="#查看所有context" class="headerlink" title="查看所有context"></a>查看所有context</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Set&lt;String&gt; contextNames = driver.getContextHandles();</div><div class="line">System.print(contextNames);</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>结果包含目前所有打开的app<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[NATIVE_APP, WEBVIEW_com.test.android, WEBVIEW_com.estrongs.android.pop, WEBVIEW_com.xxxxx.sjj]</div></pre></td></tr></table></figure></p>
<p>NATIVE_APP就是我的被测应用原生界面<br>WEBVIEW_com.test.android 是我的被测应用打开的WebView<br>另外两个一个是ES， 一个其他的应用（混合型的）</p>
<h5 id="切换到WebView"><a href="#切换到WebView" class="headerlink" title="切换到WebView"></a>切换到WebView</h5><p>我们可以通过context方法切换到指定的应用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;pre name=<span class="string">"code"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"java"</span>&gt;driver.context(<span class="string">"WEBVIEW_com.test.android"</span>);</div><div class="line">driver.findElementByID(<span class="string">"wd"</span>);</div></pre></td></tr></table></figure></p>
<p>切换完成后就可以像测试web应用一样测试了，所有的定位和web相同。</p>
<h5 id="切换到NativeApp"><a href="#切换到NativeApp" class="headerlink" title="切换到NativeApp"></a>切换到NativeApp</h5><p>测试完web应用，需要操作原生应用的时候就需要切换回NATIVE_APP<br>我们可以通过context方法切换到原生应用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;pre name=<span class="string">"code"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"java"</span>&gt;driver.context(<span class="string">"NATIVE_APP"</span>);</div></pre></td></tr></table></figure></p>
<p>这样之后的操作就都是原生应用的操作了</p>
<h5 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">    <span class="comment">/**</span></div><div class="line">     * Switch to NATIVE_APP or WEBVIEW</div><div class="line">     * <span class="doctag">@param</span> sWindow window name</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">switchToWindow</span><span class="params">(String sWindow)</span> </span>&#123;</div><div class="line">        LogManager.getLogger(<span class="keyword">this</span>.getClass()).info(<span class="string">"Swith to window: "</span> + sWindow);</div><div class="line">        Set&lt;String&gt; contextNames = driver.getContextHandles();</div><div class="line">        LogManager.getLogger(<span class="keyword">this</span>.getClass()).info(<span class="string">"Exists windows: "</span> + contextNames.toString());</div><div class="line">        <span class="keyword">for</span> (String contextName : contextNames) &#123;</div><div class="line">            <span class="keyword">if</span> (contextName.contains(sWindow)) &#123;</div><div class="line">                driver.context(contextName);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">switchToWindow(<span class="string">"WEBVIEW_com.test.android"</span>);</div><div class="line">switchToWindow(<span class="string">"NATIVE_APP"</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在多数App都是混合型的，有原生的也包含WebView的，appium测试的时候就需要在原生和WebView之间切换才能完成测试。&lt;/p&gt;
&lt;h5 id=&quot;查看所有context&quot;&gt;&lt;a href=&quot;#查看所有context&quot; class=&quot;headerlink&quot; title=&quot;查看所有context&quot;&gt;&lt;/a&gt;查看所有context&lt;/h5&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Set&amp;lt;String&amp;gt; contextNames = driver.getContextHandles();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;System.print(contextNames);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Appium" scheme="http://shadow000902.space/categories/Appium/"/>
    
    
      <category term="appium" scheme="http://shadow000902.space/tags/appium/"/>
    
      <category term="webview" scheme="http://shadow000902.space/tags/webview/"/>
    
  </entry>
  
  <entry>
    <title>Logcat日志过滤与解析</title>
    <link href="http://shadow000902.space/2016/11/21/Logcat%E6%97%A5%E5%BF%97%E8%BF%87%E6%BB%A4%E4%B8%8E%E8%A7%A3%E6%9E%90/"/>
    <id>http://shadow000902.space/2016/11/21/Logcat日志过滤与解析/</id>
    <published>2016-11-20T16:15:48.000Z</published>
    <updated>2017-03-25T09:25:59.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="logcat指定某APP輸出ERROR以上級別的日誌，显示同一个进程的所有输出"><a href="#logcat指定某APP輸出ERROR以上級別的日誌，显示同一个进程的所有输出" class="headerlink" title="logcat指定某APP輸出ERROR以上級別的日誌，显示同一个进程的所有输出"></a><code>logcat</code>指定<code>某APP</code>輸出<code>ERROR</code>以上級別的日誌，<code>显示同一个进程的所有输出</code></h5><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh  </div><div class="line">echo 本腳本實現顯示指定包名APP的ERROR以上級別的日誌，建議崩潰之後，重新開啓此腳本  </div><div class="line">package_name=$1  </div><div class="line">pid=`adb shell ps | grep $package_name |awk '&#123;print $2&#125;'`  </div><div class="line">adb logcat -v time *:E | grep -E --color=auto $pid</div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="只显示需要的输出，白名单"><a href="#只显示需要的输出，白名单" class="headerlink" title="只显示需要的输出，白名单"></a>只显示需要的输出，白名单</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">adb logcat | grep MyApp</div><div class="line">adb logcat | grep -i myapp <span class="comment">#忽略大小写。</span></div><div class="line">adb logcat | grep --color=auto -i  myapp <span class="comment">#设置匹配字符串颜色。更多设置请查看 grep 帮助。</span></div></pre></td></tr></table></figure>
<p>仅显示 Error 级别 tag 为 MyApp 的输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat | grep &quot;^E.MyApp&quot;</div></pre></td></tr></table></figure></p>
<p>也可以匹配多个，使用 | 分割多个匹配表达式，要加转义符。例如要匹配 tag 为 MyApp 和 MyActivity 的输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb logcat | grep &quot;^..MyApp\|^..MyActivity&quot;</div><div class="line">adb logcat | grep -E &quot;^..MyApp|^..MyActivity&quot;  #使用 egrep 无须转义符</div></pre></td></tr></table></figure></p>
<h5 id="过滤不需要的输出，黑名单"><a href="#过滤不需要的输出，黑名单" class="headerlink" title="过滤不需要的输出，黑名单"></a>过滤不需要的输出，黑名单</h5><p>还是使用 grep，用法也跟上面的一样，加一个 -v 即可。例如要过滤 tag 为 MyApp 和 MyActivity 的输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb logcat | grep -v &quot;^..MyApp\|^..MyActivity&quot;</div><div class="line">adb logcat | grep -vE &quot;^..MyApp|^..MyActivity&quot;  #使用 egrep 无须转义符</div></pre></td></tr></table></figure></p>
<h5 id="从当前开始显示"><a href="#从当前开始显示" class="headerlink" title="从当前开始显示"></a>从当前开始显示</h5><p>logcat 有缓存，如果仅需要查看当前开始的 log，需要清空之前的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat -c &amp;&amp; adb logcat</div></pre></td></tr></table></figure></p>
<h5 id="过滤log文件"><a href="#过滤log文件" class="headerlink" title="过滤log文件"></a>过滤<code>log</code>文件</h5><p>有时需要分析 log 文件，过滤 log 文件还是使用 grep。例如 log 文件为 myapp.log，要匹配 tag 为 MyApp 和 MyActivity 的输出，然后输出到 newmyapp.log：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat myapp.log | grep &quot;^..MyApp\|^..MyActivity&quot; &gt; newmyapp.log</div></pre></td></tr></table></figure></p>
<h5 id="logcat-详细用法"><a href="#logcat-详细用法" class="headerlink" title="logcat 详细用法"></a>logcat 详细用法</h5><h6 id="日志输出优先级"><a href="#日志输出优先级" class="headerlink" title="日志输出优先级"></a>日志输出优先级</h6><p>优先级有下列集中，是按照从低到高顺利排列的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">V — Verbose (lowest priority)</div><div class="line">D — Debug</div><div class="line">I — Info</div><div class="line">W — Warning</div><div class="line">E — Error</div><div class="line">F — Fatal</div><div class="line">S — Silent (highest priority, on which nothing is ever printed)</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">adb logcat ActivityManager:I MyApp:D *:S</div><div class="line">adb logcat *:W                                                                  # 输出日志等级高于``Warning``的日志</div></pre></td></tr></table></figure>
<h6 id="日志输出的格式"><a href="#日志输出的格式" class="headerlink" title="日志输出的格式"></a>日志输出的格式</h6><p>日志信息包括了许多元数据域包括标签和优先级。可以修改日志的输出格式，所以可以显示出特 定的元数据域。可以通过 -v 选项得到格式化输出日志的相关信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">brief — Display priority/tag and PID of originating process (the default format).</div><div class="line">process — Display PID only.</div><div class="line">tag — Display the priority/tag only.</div><div class="line">thread — Display process:thread and priority/tag only.</div><div class="line">raw — Display the raw log message, with no other metadata fields.</div><div class="line">time — Display the date, invocation time, priority/tag, and PID of the originating process.</div><div class="line">long — Display all metadata fields and separate messages with a blank lines.</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat -v thread</div></pre></td></tr></table></figure>
<p>只能通过 <code>-v</code>选项来规定输出格式 <code>option</code></p>
<h6 id="查看可用日志的缓冲区"><a href="#查看可用日志的缓冲区" class="headerlink" title="查看可用日志的缓冲区"></a>查看可用日志的缓冲区</h6><p>Android日志系统有循环缓冲区，并不是所有的日志系统都有默认循环缓冲区。为了得到 日志信息，你需要通过-b 选项来启动logcat 。如果要使用循环缓冲区，你需要查看剩余的 循环缓冲期:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">radio — 查看缓冲区的相关的信息.</div><div class="line">events — 查看和事件相关的的缓冲区.</div><div class="line">main — 查看主要的日志缓冲区</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb logcat -b radio</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;logcat指定某APP輸出ERROR以上級別的日誌，显示同一个进程的所有输出&quot;&gt;&lt;a href=&quot;#logcat指定某APP輸出ERROR以上級別的日誌，显示同一个进程的所有输出&quot; class=&quot;headerlink&quot; title=&quot;logcat指定某APP輸出ERROR以上級別的日誌，显示同一个进程的所有输出&quot;&gt;&lt;/a&gt;&lt;code&gt;logcat&lt;/code&gt;指定&lt;code&gt;某APP&lt;/code&gt;輸出&lt;code&gt;ERROR&lt;/code&gt;以上級別的日誌，&lt;code&gt;显示同一个进程的所有输出&lt;/code&gt;&lt;/h5&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#!/bin/sh  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;echo 本腳本實現顯示指定包名APP的ERROR以上級別的日誌，建議崩潰之後，重新開啓此腳本  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;package_name=$1  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pid=`adb shell ps | grep $package_name |awk &#39;&amp;#123;print $2&amp;#125;&#39;`  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;adb logcat -v time *:E | grep -E --color=auto $pid&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Logcat" scheme="http://shadow000902.space/categories/Logcat/"/>
    
    
      <category term="adb" scheme="http://shadow000902.space/tags/adb/"/>
    
      <category term="logcat" scheme="http://shadow000902.space/tags/logcat/"/>
    
  </entry>
  
  <entry>
    <title>Mac 下Django 环境搭建</title>
    <link href="http://shadow000902.space/2016/11/03/Mac-%E4%B8%8BDjango-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://shadow000902.space/2016/11/03/Mac-下Django-环境搭建/</id>
    <published>2016-11-03T09:02:10.000Z</published>
    <updated>2017-02-10T11:56:25.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>安装<code>Homebrew</code></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>PostgreSQL</code></p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install postgresql -v</div></pre></td></tr></table></figure>
</li>
</ol>
<a id="more"></a>
<p>2.1 初始化数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">initdb /usr/local/var/postgres -E utf8</div></pre></td></tr></table></figure></p>
<p>2.2 设成开机启动<code>PostgreSQL</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln -sfv /usr/<span class="built_in">local</span>/opt/postgresql/*.plist ~/Library/LaunchAgents</div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist</div></pre></td></tr></table></figure></p>
<p>2.3 启动<code>PostgreSQL</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pg_ctl -D /usr/<span class="built_in">local</span>/var/postgres <span class="_">-l</span> /usr/<span class="built_in">local</span>/var/postgres/server.log start</div></pre></td></tr></table></figure></p>
<p>2.4 关闭<code>PostgreSQL</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pg_ctl -D /usr/<span class="built_in">local</span>/var/postgres stop <span class="_">-s</span> -m fast</div></pre></td></tr></table></figure></p>
<p>2.5 创建一个<code>PostgreSQL</code>用户<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">createuser username -P</div><div class="line"><span class="comment">#Enter password for new role:</span></div><div class="line"><span class="comment">#Enter it again:</span></div></pre></td></tr></table></figure></p>
<p>2.6 创建数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">createdb dbname -O username -E UTF8 -e</div></pre></td></tr></table></figure></p>
<p>2.7 连接数据库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">psql -U username <span class="_">-d</span> dbname -h 127.0.0.1</div></pre></td></tr></table></figure></p>
<p>2.8 <code>PostgreSQL</code>数据库操作</p>
<p>显示已创建的数据库：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\l</div></pre></td></tr></table></figure></p>
<p>在不连接进 PostgreSQL 数据库的情况下，也可以在终端上查看显示已创建的列表：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">psql -l</div></pre></td></tr></table></figure></p>
<p>连接数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\c dbname</div></pre></td></tr></table></figure></p>
<p>显示数据库表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">\d</div></pre></td></tr></table></figure></p>
<p>创建一个名为 test 的表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">test</span>(<span class="keyword">id</span> <span class="built_in">int</span>, <span class="built_in">text</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>));</div></pre></td></tr></table></figure></p>
<p>插入一条记录<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">test</span>(<span class="keyword">id</span>, <span class="built_in">text</span>) <span class="keyword">VALUES</span>(<span class="number">1</span>, <span class="string">'sdfsfsfsdfsdfdf'</span>);</div></pre></td></tr></table></figure></p>
<p>查询记录<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</div></pre></td></tr></table></figure></p>
<p>更新记录<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">UPDATE</span> <span class="keyword">test</span> <span class="keyword">SET</span> <span class="built_in">text</span> = <span class="string">'aaaaaaaaaaaaa'</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</div></pre></td></tr></table></figure></p>
<p>删除指定的记录<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="keyword">test</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</div></pre></td></tr></table></figure></p>
<p>删除表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">test</span>;</div></pre></td></tr></table></figure></p>
<p>删除数据库<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> dbname;</div></pre></td></tr></table></figure></p>
<p>或者利用 dropdb 指令，在终端上删除数据库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dropdb -U user dbname</div></pre></td></tr></table></figure></p>
<ol>
<li><p>安装<code>virtualenv</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div><div class="line">virtualenv myenv</div><div class="line"><span class="built_in">cd</span> myenv</div><div class="line">. bin/activate</div></pre></td></tr></table></figure>
</li>
<li><p>安装<code>Django</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">pip install django</div><div class="line"><span class="built_in">export</span> CFLAGS=-Qunused-arguments</div><div class="line"><span class="built_in">export</span> CPPFLAGS=-Qunused-arguments</div><div class="line">sudo pip install psycopg2                   <span class="comment"># 安装 psycopg2 前需要执行上面两条 export 命令</span></div><div class="line">pip install djangorestframework</div></pre></td></tr></table></figure>
</li>
<li><p>启动服务</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> AndroidTools</div><div class="line">python ./manage.py runserver 0.0.0.0:9999</div></pre></td></tr></table></figure>
</li>
</ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Homebrew&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/ruby -e &lt;span class=&quot;string&quot;&gt;&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;PostgreSQL&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install postgresql -v&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Django" scheme="http://shadow000902.space/categories/Django/"/>
    
    
      <category term="python" scheme="http://shadow000902.space/tags/python/"/>
    
      <category term="django" scheme="http://shadow000902.space/tags/django/"/>
    
      <category term="postgresql" scheme="http://shadow000902.space/tags/postgresql/"/>
    
  </entry>
  
</feed>
