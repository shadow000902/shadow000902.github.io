<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shadow&#39;S Site</title>
  <icon>https://www.gravatar.com/avatar/7b03ab113f2f8c26715b5f45cee6f38f</icon>
  <subtitle>心之所愿，无所不至！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shadow000902.space/"/>
  <updated>2023-04-20T08:48:51.502Z</updated>
  <id>http://shadow000902.space/</id>
  
  <author>
    <name>shadow</name>
    <email>shadow000902@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spock 测试实践</title>
    <link href="http://shadow000902.space/2021/10/31/2021-10-31-Spock-Test/"/>
    <id>http://shadow000902.space/2021/10/31/2021-10-31-Spock-Test/</id>
    <published>2021-10-31T11:27:13.000Z</published>
    <updated>2023-04-20T08:48:51.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="异常测试"><a href="#异常测试" class="headerlink" title="异常测试"></a>异常测试</h3><h4 id="被测对象"><a href="#被测对象" class="headerlink" title="被测对象"></a>被测对象</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验请求参数user是否合法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> APIException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> validateUser(UserVO user) <span class="keyword">throws</span> APIException &#123;</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10001"</span>, <span class="string">"user is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == user.getName() || <span class="string">""</span>.equals(user.getName())) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10002"</span>, <span class="string">"user name is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (user.getAge() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10003"</span>, <span class="string">"user age is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == user.getTelephone() || <span class="string">""</span>.equals(user.getTelephone())) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10004"</span>, <span class="string">"user telephone is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == user.getSex() || <span class="string">""</span>.equals(user.getSex())) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10005"</span>, <span class="string">"user sex is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> == user.getUserOrders() || user.getUserOrders().size() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10006"</span>, <span class="string">"user order is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (OrderVO <span class="string">order :</span> user.getUserOrders()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == order.getOrderNum() || <span class="string">""</span>.equals(order.getOrderNum())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10007"</span>, <span class="string">"order number is null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == order.getAmount()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> APIException(<span class="string">"10008"</span>, <span class="string">"order amount is null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><script>"spockTest"===prompt("请输入文档密码")?alert("密码正确"):(alert("密码错误返回主页"),location="/")</script><h4 id="Spock测试类"><a href="#Spock测试类" class="headerlink" title="Spock测试类"></a>Spock测试类</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验用户请求参数的测试类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 公众号:Java老K</span></span><br><span class="line"><span class="comment"> * 个人博客:www.javakk.com</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserControllerTest</span> <span class="keyword">extends</span> <span class="title">Specification</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> userController = <span class="keyword">new</span> UserController()</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Unroll</span></span><br><span class="line">    <span class="keyword">def</span> <span class="string">"验证用户信息的合法性: #expectedMessage"</span>() &#123;</span><br><span class="line"><span class="symbol">        when:</span> <span class="string">"调用校验用户方法"</span></span><br><span class="line">        userController.validateUser(user)</span><br><span class="line"></span><br><span class="line"><span class="symbol">        then:</span> <span class="string">"捕获异常并设置需要验证的异常值"</span></span><br><span class="line">        <span class="keyword">def</span> exception = thrown(expectedException)</span><br><span class="line">        exception.errorCode == expectedErrCode</span><br><span class="line">        exception.errorMessage == expectedMessage</span><br><span class="line"></span><br><span class="line"><span class="symbol">        where:</span> <span class="string">"表格方式验证用户信息的合法性"</span></span><br><span class="line">        user           || expectedException | expectedErrCode | expectedMessage</span><br><span class="line">        getUser(<span class="number">10001</span>) || APIException      | <span class="string">"10001"</span>         | <span class="string">"user is null"</span></span><br><span class="line">        getUser(<span class="number">10002</span>) || APIException      | <span class="string">"10002"</span>         | <span class="string">"user name is null"</span></span><br><span class="line">        getUser(<span class="number">10003</span>) || APIException      | <span class="string">"10003"</span>         | <span class="string">"user age is null"</span></span><br><span class="line">        getUser(<span class="number">10004</span>) || APIException      | <span class="string">"10004"</span>         | <span class="string">"user telephone is null"</span></span><br><span class="line">        getUser(<span class="number">10005</span>) || APIException      | <span class="string">"10005"</span>         | <span class="string">"user sex is null"</span></span><br><span class="line">        getUser(<span class="number">10006</span>) || APIException      | <span class="string">"10006"</span>         | <span class="string">"user order is null"</span></span><br><span class="line">        getUser(<span class="number">10007</span>) || APIException      | <span class="string">"10007"</span>         | <span class="string">"order number is null"</span></span><br><span class="line">        getUser(<span class="number">10008</span>) || APIException      | <span class="string">"10008"</span>         | <span class="string">"order amount is null"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> getUser(errCode) &#123;</span><br><span class="line">        <span class="keyword">def</span> user = <span class="keyword">new</span> UserVO()</span><br><span class="line">        <span class="keyword">def</span> condition1 = &#123;</span><br><span class="line">            user.name = <span class="string">"杜兰特"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">def</span> condition2 = &#123;</span><br><span class="line">            user.age = <span class="number">20</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">def</span> condition3 = &#123;</span><br><span class="line">            user.telephone = <span class="string">"15801833812"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">def</span> condition4 = &#123;</span><br><span class="line">            user.sex = <span class="string">"男"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">def</span> condition5 = &#123;</span><br><span class="line">            user.userOrders = [<span class="keyword">new</span> OrderVO()]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">def</span> condition6 = &#123;</span><br><span class="line">            user.userOrders = [<span class="keyword">new</span> OrderVO(<span class="string">orderNum:</span> <span class="string">"123456"</span>)]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (errCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10001</span>:</span><br><span class="line">                user = <span class="literal">null</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10002</span>:</span><br><span class="line">                user = <span class="keyword">new</span> UserVO()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10003</span>:</span><br><span class="line">                condition1()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10004</span>:</span><br><span class="line">                condition1()</span><br><span class="line">                condition2()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10005</span>:</span><br><span class="line">                condition1()</span><br><span class="line">                condition2()</span><br><span class="line">                condition3()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10006</span>:</span><br><span class="line">                condition1()</span><br><span class="line">                condition2()</span><br><span class="line">                condition3()</span><br><span class="line">                condition4()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10007</span>:</span><br><span class="line">                condition1()</span><br><span class="line">                condition2()</span><br><span class="line">                condition3()</span><br><span class="line">                condition4()</span><br><span class="line">                condition5()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">10008</span>:</span><br><span class="line">                condition1()</span><br><span class="line">                condition2()</span><br><span class="line">                condition3()</span><br><span class="line">                condition4()</span><br><span class="line">                condition5()</span><br><span class="line">                condition6()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="合并参数正常和异常用例，合并多个调用异常的用例"><a href="#合并参数正常和异常用例，合并多个调用异常的用例" class="headerlink" title="合并参数正常和异常用例，合并多个调用异常的用例"></a>合并参数正常和异常用例，合并多个调用异常的用例</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shadow.search.biz.impl</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.shadow.platform.bootstrap.exception.BusinessException</span><br><span class="line"><span class="keyword">import</span> com.shadow.api.search.search.request.CustomerOperationInfoSyncRequest</span><br><span class="line"><span class="keyword">import</span> com.shadow.search.common.entity.SyncTemplate</span><br><span class="line"><span class="keyword">import</span> com.shadow.search.dal.async.CustomerOperationInfoAsyncActuator</span><br><span class="line"><span class="keyword">import</span> com.shadow.search.domain.search.repository.CustomerOperationRepository</span><br><span class="line"><span class="keyword">import</span> spock.lang.Specification</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomerOperationInfoSyncBizServiceImplSpec</span> <span class="keyword">extends</span> <span class="title">Specification</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> customerOperationInfoSyncBizServiceImpl = <span class="keyword">new</span> CustomerOperationInfoSyncBizServiceImpl()</span><br><span class="line">    <span class="keyword">def</span> customerOperationRepository = Mock(CustomerOperationRepository)</span><br><span class="line">    <span class="keyword">def</span> customerOperationInfoAsyncActuator = Mock(CustomerOperationInfoAsyncActuator)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> setup() &#123;</span><br><span class="line">        customerOperationInfoSyncBizServiceImpl.customerOperationRepository = customerOperationRepository</span><br><span class="line">        customerOperationInfoSyncBizServiceImpl.customerOperationInfoAsyncActuator = customerOperationInfoAsyncActuator</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="string">"客户运营数据同步_batchSync_参数测试"</span>(Long userId, Long kdtId, Long ts) &#123;</span><br><span class="line"><span class="symbol">        setup:</span> <span class="string">"数据准备"</span></span><br><span class="line">        <span class="keyword">def</span> customerOperationInfo1 = [</span><br><span class="line">                <span class="string">userId          :</span> userId,</span><br><span class="line">                <span class="string">kdtId           :</span> kdtId,</span><br><span class="line"><span class="comment">//                wcKdtId         : 789,</span></span><br><span class="line">                <span class="string">wecomStaffIds   :</span> [<span class="number">12</span>, <span class="number">23</span>, <span class="number">34</span>],</span><br><span class="line">                <span class="string">wechatGroupIds  :</span> [<span class="string">"123"</span>, <span class="string">"234"</span>, <span class="string">"345"</span>],</span><br><span class="line"><span class="comment">//                salesmanStaffId : 123456,</span></span><br><span class="line">                <span class="string">isWecomSalesman :</span> <span class="number">1</span>,</span><br><span class="line">                <span class="string">hasAddStaff     :</span> <span class="number">1</span>,</span><br><span class="line"><span class="symbol">                lastAddStaffTime:</span> <span class="number">123</span>,</span><br><span class="line">                <span class="string">ts              :</span> ts</span><br><span class="line">        ] <span class="keyword">as</span> CustomerOperationInfoSyncRequest</span><br><span class="line">        <span class="keyword">def</span> customerOperationInfo2 = [</span><br><span class="line">                <span class="string">userId          :</span> userId,</span><br><span class="line">                <span class="string">kdtId           :</span> kdtId,</span><br><span class="line">                <span class="string">wcKdtId         :</span> <span class="number">789</span>,</span><br><span class="line">                <span class="string">wecomStaffIds   :</span> [<span class="number">12</span>, <span class="number">23</span>, <span class="number">34</span>],</span><br><span class="line">                <span class="string">wechatGroupIds  :</span> [<span class="string">"123"</span>, <span class="string">"234"</span>, <span class="string">"345"</span>],</span><br><span class="line">                <span class="string">salesmanStaffId :</span> <span class="number">123456</span>,</span><br><span class="line"><span class="comment">//                isWecomSalesman : 1,</span></span><br><span class="line"><span class="comment">//                hasAddStaff     : 1,</span></span><br><span class="line"><span class="symbol">                lastAddStaffTime:</span> <span class="number">123</span>,</span><br><span class="line">                <span class="string">ts              :</span> ts</span><br><span class="line">        ] <span class="keyword">as</span> CustomerOperationInfoSyncRequest</span><br><span class="line">        <span class="keyword">def</span> customerOperationEntityList = [</span><br><span class="line">                customerOperationInfo1,</span><br><span class="line">                customerOperationInfo2</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"><span class="symbol">        and:</span> <span class="string">"Mock方法调用数据返回"</span></span><br><span class="line">        batchPutCount * customerOperationRepository.batchPut(_) &gt;&gt; batchPutResp</span><br><span class="line">        sendSyncDataMsgCount * customerOperationInfoAsyncActuator.sendSyncDataMsg(kdtId, userId, SyncTemplate.UPDATE) &gt;&gt; sendSyncDataMsgResp</span><br><span class="line"></span><br><span class="line"><span class="symbol">        when:</span> <span class="string">"执行需要测试的方法"</span></span><br><span class="line">        <span class="keyword">def</span> resp = customerOperationInfoSyncBizServiceImpl.batchSync(customerOperationEntityList)</span><br><span class="line">        println resp</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="number">000000000</span>, <span class="string">"success"</span>)</span><br><span class="line"></span><br><span class="line"><span class="symbol">        then:</span> <span class="string">"结果校验"</span></span><br><span class="line">        <span class="keyword">def</span> exception = thrown(expectedException)</span><br><span class="line">        exception.code == expectedCode</span><br><span class="line">        exception.message == expectedMessage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">        where:</span> <span class="string">"数据驱动"</span></span><br><span class="line">        testName          | userId | kdtId    | ts                         | batchPutCount | batchPutResp | sendSyncDataMsgCount | sendSyncDataMsgResp || expectedException | expectedCode | expectedMessage</span><br><span class="line">        <span class="string">"normal test 1"</span>   | <span class="number">123</span>    | <span class="number">59941009</span> | <span class="number">123456</span>                     | <span class="number">1</span>             | <span class="literal">true</span>         | <span class="number">2</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">000000000</span>    | <span class="string">"success"</span></span><br><span class="line">        <span class="string">"normal test 2"</span>   | <span class="number">456</span>    | <span class="number">59941009</span> | <span class="number">123456</span>                     | <span class="number">1</span>             | <span class="literal">true</span>         | <span class="number">2</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">000000000</span>    | <span class="string">"success"</span></span><br><span class="line">        <span class="string">"normal test 3"</span>   | <span class="number">789</span>    | <span class="number">59941009</span> | System.currentTimeMillis() | <span class="number">1</span>             | <span class="literal">true</span>         | <span class="number">2</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">000000000</span>    | <span class="string">"success"</span></span><br><span class="line">        <span class="string">"userId is null"</span>  | <span class="literal">null</span>   | <span class="number">59941009</span> | System.currentTimeMillis() | <span class="number">0</span>             | <span class="literal">false</span>        | <span class="number">0</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"userId is minus"</span> | <span class="number">-1</span>     | <span class="number">59941009</span> | System.currentTimeMillis() | <span class="number">0</span>             | <span class="literal">false</span>        | <span class="number">0</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"kdtId is null"</span>   | <span class="number">123456</span> | <span class="literal">null</span>     | System.currentTimeMillis() | <span class="number">0</span>             | <span class="literal">false</span>        | <span class="number">0</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"kdtId is minus"</span>  | <span class="number">123456</span> | <span class="number">-1</span>       | System.currentTimeMillis() | <span class="number">0</span>             | <span class="literal">false</span>        | <span class="number">0</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"ts is null"</span>      | <span class="number">789</span>    | <span class="number">59941009</span> | <span class="literal">null</span>                       | <span class="number">0</span>             | <span class="literal">false</span>        | <span class="number">0</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"ts is minus"</span>     | <span class="number">789</span>    | <span class="number">59941009</span> | <span class="number">-1</span>                         | <span class="number">0</span>             | <span class="literal">false</span>        | <span class="number">0</span>                    | <span class="literal">null</span>                || BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line"><span class="comment">//        "batchPut exception"        | 123    | 59941009 | 1234567                    | 1             | &#123; throw new IOException() &#125; | 2                    | null                        || BusinessException | 145400006    | "Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line"><span class="comment">//        "sendSyncDataMsg exception" | 123    | 59941009 | 1234567                    | 1             | true                        | 2                    | &#123; throw new IOException() &#125; || BusinessException | 145400006    | "Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="string">"客户运营数据同步_batchSync_调用异常测试"</span>() &#123;</span><br><span class="line"><span class="symbol">        setup:</span> <span class="string">"数据准备"</span></span><br><span class="line">        <span class="keyword">def</span> customerOperationInfoSyncRequest = [</span><br><span class="line">                <span class="string">userId          :</span> <span class="number">123456</span>,</span><br><span class="line">                <span class="string">kdtId           :</span> <span class="number">59941009</span>,</span><br><span class="line">                <span class="string">wcKdtId         :</span> <span class="number">789</span>,</span><br><span class="line">                <span class="string">wecomStaffIds   :</span> [<span class="number">12</span>, <span class="number">23</span>, <span class="number">34</span>],</span><br><span class="line">                <span class="string">wechatGroupIds  :</span> [<span class="string">"123"</span>, <span class="string">"234"</span>, <span class="string">"345"</span>],</span><br><span class="line">                <span class="string">salesmanStaffId :</span> <span class="number">123456</span>,</span><br><span class="line">                <span class="string">isWecomSalesman :</span> <span class="number">1</span>,</span><br><span class="line">                <span class="string">hasAddStaff     :</span> <span class="number">1</span>,</span><br><span class="line"><span class="symbol">                lastAddStaffTime:</span> <span class="number">123</span>,</span><br><span class="line">                <span class="string">ts              :</span> System.currentTimeMillis()</span><br><span class="line">        ] <span class="keyword">as</span> CustomerOperationInfoSyncRequest</span><br><span class="line"></span><br><span class="line"><span class="symbol">        when:</span> <span class="string">"执行需要测试的方法"</span></span><br><span class="line">        customerOperationInfoSyncBizServiceImpl.batchSync([customerOperationInfoSyncRequest])</span><br><span class="line"></span><br><span class="line"><span class="symbol">        then:</span> <span class="string">"结果校验"</span></span><br><span class="line">        <span class="comment">// TODO 异常mock有问题</span></span><br><span class="line">        batchPutCount * customerOperationRepository.batchPut(_) &gt;&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (testName.contains(<span class="string">"normal batchPut"</span>)) &#123;</span><br><span class="line">                <span class="literal">true</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IOException()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sendSyncDataMsgCount * customerOperationInfoAsyncActuator.sendSyncDataMsg(<span class="number">59941009</span>, <span class="number">123456</span>, SyncTemplate.UPDATE) &gt;&gt; &#123; <span class="keyword">throw</span> sendSyncDataMsgResp &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> exception = thrown(expectedException)</span><br><span class="line">        exception.code == expectedCode</span><br><span class="line">        exception.message == expectedMessage</span><br><span class="line"></span><br><span class="line"><span class="symbol">        where:</span> <span class="string">"数据驱动"</span></span><br><span class="line">        testName                                            | batchPutCount | sendSyncDataMsgCount | sendSyncDataMsgResp    || expectedException | expectedCode | expectedMessage</span><br><span class="line">        <span class="string">"batchPut exception"</span>                                | <span class="number">1</span>             | <span class="number">0</span>                    | <span class="literal">null</span>                   || BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">        <span class="string">"normal batchPut, sendSyncDataMsg IOException"</span>      | <span class="number">1</span>             | <span class="number">1</span>                    | <span class="keyword">new</span> IOException()      || BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">        <span class="string">"normal batchPut, sendSyncDataMsg RuntimeException"</span> | <span class="number">1</span>             | <span class="number">1</span>                    | <span class="keyword">new</span> RuntimeException() || BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="string">"客户运营数据同步_delete_参数测试"</span>(Long userId, Long kdtId) &#123;</span><br><span class="line"><span class="symbol">        setup:</span> <span class="string">"数据准备"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">        and:</span> <span class="string">"Mock方法调用数据返回"</span></span><br><span class="line">        deleteCount * customerOperationRepository.delete(kdtId, userId) &gt;&gt; deleteResp</span><br><span class="line">        sendSyncDataMsgCount * customerOperationInfoAsyncActuator.sendSyncDataMsg(kdtId, userId, SyncTemplate.UPDATE) &gt;&gt; sendSyncDataMsgResp</span><br><span class="line"></span><br><span class="line"><span class="symbol">        when:</span> <span class="string">"执行需要测试的方法"</span></span><br><span class="line">        <span class="keyword">def</span> resp = customerOperationInfoSyncBizServiceImpl.delete(kdtId, userId)</span><br><span class="line">        println resp</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BusinessException(<span class="number">000000000</span>, <span class="string">"success"</span>)</span><br><span class="line"></span><br><span class="line"><span class="symbol">        then:</span> <span class="string">"结果校验"</span></span><br><span class="line">        <span class="keyword">def</span> exception = thrown(expectedException)</span><br><span class="line">        exception.code == expectedCode</span><br><span class="line">        exception.message == expectedMessage</span><br><span class="line"></span><br><span class="line"><span class="symbol">        where:</span> <span class="string">"数据驱动"</span></span><br><span class="line">        testName                    | userId | kdtId    | deleteCount | deleteResp | sendSyncDataMsgCount | sendSyncDataMsgResp | expectedException | expectedCode | expectedMessage</span><br><span class="line">        <span class="string">"normal Test"</span>               | <span class="number">123456</span> | <span class="number">59941009</span> | <span class="number">1</span>           | <span class="literal">true</span>       | <span class="number">1</span>                    | <span class="literal">null</span>                | BusinessException | <span class="number">000000000</span>    | <span class="string">"success"</span></span><br><span class="line">        <span class="string">"userId and kdtId all zero"</span> | <span class="number">0</span>      | <span class="number">0</span>        | <span class="number">0</span>           | <span class="literal">null</span>       | <span class="number">0</span>                    | <span class="literal">null</span>                | BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"userId is minus"</span>           | <span class="number">-1</span>     | <span class="number">59941009</span> | <span class="number">0</span>           | <span class="literal">null</span>       | <span class="number">0</span>                    | <span class="literal">null</span>                | BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"kdtId is minus"</span>            | <span class="number">123456</span> | <span class="number">-1</span>       | <span class="number">0</span>           | <span class="literal">null</span>       | <span class="number">0</span>                    | <span class="literal">null</span>                | BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"kdtId is null"</span>             | <span class="number">123456</span> | <span class="literal">null</span>     | <span class="number">0</span>           | <span class="literal">null</span>       | <span class="number">0</span>                    | <span class="literal">null</span>                | BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">        <span class="string">"userId is null"</span>            | <span class="literal">null</span>   | <span class="number">59941009</span> | <span class="number">0</span>           | <span class="literal">null</span>       | <span class="number">0</span>                    | <span class="literal">null</span>                | BusinessException | <span class="number">145400001</span>    | <span class="string">"参数错误"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="string">"客户运营数据同步_delete_调用异常测试"</span>() &#123;</span><br><span class="line"><span class="symbol">        setup:</span> <span class="string">"数据准备"</span></span><br><span class="line">        <span class="keyword">def</span> userId = <span class="number">123456</span>L</span><br><span class="line">        <span class="keyword">def</span> kdtId = <span class="number">59941009</span>L</span><br><span class="line"></span><br><span class="line"><span class="symbol">        and:</span> <span class="string">"Mock方法调用数据返回"</span></span><br><span class="line">        deleteCount * customerOperationRepository.delete(kdtId, userId) &gt;&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (testName.contains(<span class="string">"normal delete"</span>)) &#123;</span><br><span class="line">                <span class="literal">true</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> deleteResp</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sendSyncDataMsgCount * customerOperationInfoAsyncActuator.sendSyncDataMsg(kdtId, userId, SyncTemplate.UPDATE) &gt;&gt; &#123;<span class="keyword">throw</span> sendSyncDataMsgResp&#125;</span><br><span class="line"></span><br><span class="line"><span class="symbol">        when:</span> <span class="string">"执行需要测试的方法"</span></span><br><span class="line">        customerOperationInfoSyncBizServiceImpl.delete(kdtId, userId)</span><br><span class="line"></span><br><span class="line"><span class="symbol">        then:</span> <span class="string">"结果校验"</span></span><br><span class="line">        <span class="keyword">def</span> exception = thrown(expectedException)</span><br><span class="line">        exception.code == expectedCode</span><br><span class="line">        exception.message == expectedMessage</span><br><span class="line"></span><br><span class="line"><span class="symbol">        where:</span> <span class="string">"数据驱动"</span></span><br><span class="line">        testName                                                | deleteCount | deleteResp             | sendSyncDataMsgCount | sendSyncDataMsgResp    | expectedException | expectedCode | expectedMessage</span><br><span class="line">        <span class="string">"delete throw IOException"</span>                              | <span class="number">1</span>           | <span class="keyword">new</span> IOException()      | <span class="number">0</span>                    | <span class="literal">null</span>                   | BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">        <span class="string">"delete throw RuntimeException"</span>                         | <span class="number">1</span>           | <span class="keyword">new</span> RuntimeException() | <span class="number">0</span>                    | <span class="literal">null</span>                   | BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">        <span class="string">"normal delete, sendSyncDataMsg throw IOException"</span>      | <span class="number">1</span>           | <span class="literal">null</span>                   | <span class="number">1</span>                    | <span class="keyword">new</span> IOException()      | BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">        <span class="string">"normal delete, sendSyncDataMsg throw RuntimeException"</span> | <span class="number">1</span>           | <span class="literal">null</span>                   | <span class="number">1</span>                    | <span class="keyword">new</span> RuntimeException() | BusinessException | <span class="number">145400006</span>    | <span class="string">"Hbase内部异常，内部将进行重试，保证最终一致性，外部无须重试"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spock-抛-MissingPropertyException-问题解决"><a href="#Spock-抛-MissingPropertyException-问题解决" class="headerlink" title="Spock 抛 MissingPropertyException 问题解决"></a>Spock 抛 MissingPropertyException 问题解决</h3><p>有问题的测试代码：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> foo.bar.test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> foo.bah.HttpRequestPropertyLoader</span><br><span class="line"><span class="keyword">import</span> spock.lang.Unroll</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest</span><br><span class="line"><span class="keyword">import</span> spock.lang.Specification</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HttpRequestPropertyLoaderTest</span> <span class="keyword">extends</span> <span class="title">Specification</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    HttpRequestPropertyLoader subjectUnderTest</span><br><span class="line">    <span class="keyword">def</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> setup() &#123;</span><br><span class="line">        subjectUnderTest = <span class="keyword">new</span> HttpRequestPropertyLoader()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Unroll</span>(<span class="string">"When my http request is #nullOrNot then when I get parameter from it the response=#response"</span> )</span><br><span class="line">    <span class="keyword">def</span> <span class="string">"Test load data from request"</span>() &#123;</span><br><span class="line"><span class="symbol">        given:</span></span><br><span class="line">        HttpServletRequest mockHttpRequest = Mock()</span><br><span class="line">        mockHttpRequest.getAttribute(<span class="string">"foo"</span>) &gt;&gt; <span class="string">"bar"</span></span><br><span class="line"><span class="symbol">        when:</span></span><br><span class="line">        result = subjectUnderTest.loadStringFromHttpRequest(httpRequest, <span class="string">"foo"</span>)</span><br><span class="line"><span class="symbol">        then:</span></span><br><span class="line">        result == response</span><br><span class="line"><span class="symbol">        where:</span></span><br><span class="line">        httpRequest     | response | nullOrNot</span><br><span class="line">        <span class="literal">null</span>            |  <span class="string">""</span>      | <span class="string">"null"</span></span><br><span class="line">        mockHttpRequest | <span class="string">"bar"</span>    | <span class="string">"not null"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题原因：<code>where块</code>在<code>given</code>之前运行块</p><p>解决问题后的代码：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> foo.bar.test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> foo.bah.HttpRequestPropertyLoader</span><br><span class="line"><span class="keyword">import</span> spock.lang.Unroll</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest</span><br><span class="line"><span class="keyword">import</span> spock.lang.Specification</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HttpRequestPropertyLoaderTest</span> <span class="keyword">extends</span> <span class="title">Specification</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    HttpRequestPropertyLoader subjectUnderTest</span><br><span class="line">    <span class="keyword">def</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> setup() &#123;</span><br><span class="line">        subjectUnderTest = <span class="keyword">new</span> HttpRequestPropertyLoader()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Unroll</span>(<span class="string">"When my http request is #nullOrNot then when I get parameter from it the response=#response"</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="string">"Test load data from request"</span>() &#123;</span><br><span class="line"><span class="symbol">        when:</span></span><br><span class="line">        result = subjectUnderTest.loadStringFromHttpRequest(httpRequest, <span class="string">"foo"</span>)</span><br><span class="line"><span class="symbol">        then:</span></span><br><span class="line">        result == response</span><br><span class="line"><span class="symbol">        where:</span></span><br><span class="line">        httpRequest &lt;&lt; &#123;</span><br><span class="line">            HttpServletRequest mockHttpRequest = Mock()</span><br><span class="line">            mockHttpRequest.getAttribute(<span class="string">"foo"</span>) &gt;&gt; <span class="string">"bar"</span></span><br><span class="line">            [<span class="literal">null</span>, mockHttpRequest]</span><br><span class="line">        &#125;()</span><br><span class="line">        response &lt;&lt; [<span class="string">""</span>, <span class="string">"bar"</span>]</span><br><span class="line">        nullOrNot &lt;&lt; [<span class="string">"null"</span>, <span class="string">"not null"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="被测对象有调用父类时的测试方法"><a href="#被测对象有调用父类时的测试方法" class="headerlink" title="被测对象有调用父类时的测试方法"></a>被测对象有调用父类时的测试方法</h3><h4 id="被测对象-1"><a href="#被测对象-1" class="headerlink" title="被测对象"></a>被测对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.shadow.api.rpc.annotation.ExtensionService;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.api.enums.GenderEnum;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.api.model.User;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.api.model.UserRecord;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.common.cloud.UserAPI;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.ExtensionBase;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.api.DennisCrmClient;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.bean.QueryMemberInfoCrmRequest;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.bean.QueryMemberInfoCrmResponse;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.quartz.JobConstant;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.quartz.JobEntity;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.quartz.MemberCreateJob;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.quartz.SchedulerConfig;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.utils.OutParamUtil;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.dal.mapper.UserRecordMapper;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.extension.api.scrm.GetCustomerExtPoint;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.extension.param.scrm.*;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.metadata.common.OutParam;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.open.sdk.gen.v3_0_1.model.ShadowUserBasicGetResult;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@ExtensionService</span>(<span class="string">"getCustomerExtPoint"</span>)</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetCustomerEx</span> <span class="keyword">extends</span> <span class="title">ExtensionBase</span> <span class="keyword">implements</span> <span class="title">GetCustomerExtPoint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DennisCrmClient dennisCrmClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRecordMapper userRecordMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserAPI userAPI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OutParam&lt;CustomerProfileDTO&gt; <span class="title">execute</span><span class="params">(CustomerIdentifyDTO customerIdentifyDTO)</span> </span>&#123;</span><br><span class="line">        CustomerProfileDTO customerProfileDTO = <span class="keyword">new</span> CustomerProfileDTO();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String yzOpenId = customerIdentifyDTO.getYzOpenId();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!isBinding(yzOpenId)) &#123;<span class="comment">//没绑定的情况重试</span></span><br><span class="line">                log.info(<span class="string">"客户会员信息查询扩展点，查询长益crm会员信息失败,不存在会员绑定关系，扩展点请求参数 ： &#123;&#125;"</span>, JSON.toJSONString(customerIdentifyDTO));</span><br><span class="line">                CreateCustomerRequestDTO createCustomerRequestDTO = <span class="keyword">new</span> CreateCustomerRequestDTO();</span><br><span class="line">                createCustomerRequestDTO.setCustomerIdentifyDTO(customerIdentifyDTO);</span><br><span class="line">                CustomerProfileCreateDTO customerProfileCreateDTO = <span class="keyword">new</span> CustomerProfileCreateDTO();</span><br><span class="line">                <span class="comment">//查询手机号</span></span><br><span class="line">                ShadowUserBasicGetResult shadowUserBasicInfoByOpenId = userAPI.getShadowUserBasicInfoByOpenId(customerIdentifyDTO.getKdtId().toString(), customerIdentifyDTO.getYzOpenId());</span><br><span class="line">                <span class="keyword">if</span> (shadowUserBasicInfoByOpenId.getSuccess() &amp;&amp; shadowUserBasicInfoByOpenId.getData() != <span class="keyword">null</span> &amp;&amp; shadowUserBasicInfoByOpenId.getData().getMobile() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    customerProfileCreateDTO.setRegisterMobile(shadowUserBasicInfoByOpenId.getData().getMobile());</span><br><span class="line">                    createCustomerRequestDTO.setCustomerProfileCreateDTO(customerProfileCreateDTO);</span><br><span class="line">                    insertUserRecord(createCustomerRequestDTO);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    log.info(<span class="string">"客户会员信息查询扩展点，请求有赞Api返回参数 ： &#123;&#125;"</span>, JSON.toJSONString(shadowUserBasicInfoByOpenId));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> OutParamUtil.failResult(<span class="string">"查询失败"</span>, customerProfileDTO);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            QueryMemberInfoCrmResponse queryMemberInfoCrmResponse = <span class="keyword">this</span>.queryMemberInfoCrm(yzOpenId);</span><br><span class="line">            log.info(<span class="string">"客户会员信息查询扩展点, 查询三方会员信息，三方响应参数 ：  &#123;&#125; "</span>, JSON.toJSONString(queryMemberInfoCrmResponse));</span><br><span class="line">            <span class="keyword">if</span> (queryMemberInfoCrmResponse != <span class="keyword">null</span> &amp;&amp; queryMemberInfoCrmResponse.isSuccess()) &#123;</span><br><span class="line">                customerProfileDTO.setName(queryMemberInfoCrmResponse.getMemberName());</span><br><span class="line">                String memberSex = queryMemberInfoCrmResponse.getMemberSex();</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isNotBlank(memberSex)) &#123;</span><br><span class="line">                    customerProfileDTO.setGender(GenderEnum.getEnum(memberSex).shortValue());</span><br><span class="line">                &#125;</span><br><span class="line">                customerProfileDTO.setBirthday(queryMemberInfoCrmResponse.getMemberBirthday());</span><br><span class="line">                <span class="comment">//是否会员</span></span><br><span class="line">                customerProfileDTO.setIsMember(<span class="keyword">false</span>);</span><br><span class="line">                ContactAddressDTO contactAddressDTO = <span class="keyword">new</span> ContactAddressDTO();</span><br><span class="line">                <span class="comment">//地域编码</span></span><br><span class="line">                contactAddressDTO.setAreaCode(queryMemberInfoCrmResponse.getMemberAddress());</span><br><span class="line">                contactAddressDTO.setAddress(queryMemberInfoCrmResponse.getMemberAddress());</span><br><span class="line">                customerProfileDTO.setContactAddressDTO(contactAddressDTO);</span><br><span class="line">                customerProfileDTO.setEmail(queryMemberInfoCrmResponse.getMemberEmail());</span><br><span class="line">                <span class="keyword">return</span> OutParamUtil.successResult(customerProfileDTO);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//查询失败</span></span><br><span class="line">                log.error(<span class="string">"客户会员信息查询扩展点, 查询三方会员信息失败，三方响应参数 : &#123;&#125; "</span>, JSONObject.toJSONString(queryMemberInfoCrmResponse));</span><br><span class="line">                <span class="keyword">return</span> OutParamUtil.failResult(<span class="string">"查询失败"</span>, customerProfileDTO);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"长益crm查询会员信息失败！"</span>, e);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> OutParamUtil.failResult(<span class="string">"查询失败"</span>, customerProfileDTO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QueryMemberInfoCrmResponse <span class="title">queryMemberInfoCrm</span><span class="params">(String yzOpenId)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            QueryMemberInfoCrmResponse memberInfoCrmFromRedis = getMemberInfoCrmFromRedis(yzOpenId);</span><br><span class="line">            <span class="keyword">if</span> (memberInfoCrmFromRedis != <span class="keyword">null</span>) &#123;</span><br><span class="line">                memberInfoCrmFromRedis.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">return</span> memberInfoCrmFromRedis;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                User user = getUser(yzOpenId);</span><br><span class="line">                <span class="comment">//查询会员信息</span></span><br><span class="line">                QueryMemberInfoCrmRequest queryMemberInfoCrmRequest = <span class="keyword">new</span> QueryMemberInfoCrmRequest();</span><br><span class="line">                queryMemberInfoCrmRequest.setCondType(<span class="string">"3"</span>);</span><br><span class="line">                queryMemberInfoCrmRequest.setCondValue(user.getMobile());</span><br><span class="line">                QueryMemberInfoCrmResponse queryMemberInfoCrmResponse = dennisCrmClient.post(queryMemberInfoCrmRequest);</span><br><span class="line">                <span class="keyword">if</span> (queryMemberInfoCrmResponse.isSuccess()) &#123;</span><br><span class="line">                    setMemberInfoCrmToRedis(queryMemberInfoCrmResponse, user);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> queryMemberInfoCrmResponse;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">"查询会员信息失败==="</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加重试记录</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> createCustomerRequestDTO</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertUserRecord</span><span class="params">(CreateCustomerRequestDTO createCustomerRequestDTO)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//用户在crm中存在，只用建立关系</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            UserRecord bind = <span class="keyword">new</span> UserRecord();</span><br><span class="line">            bind.setMsgId(createCustomerRequestDTO.getCustomerIdentifyDTO().getYzOpenId());</span><br><span class="line">            bind.setKdtId(createCustomerRequestDTO.getCustomerIdentifyDTO().getKdtId());</span><br><span class="line">            bind.setMsgInfo(JSON.toJSONString(createCustomerRequestDTO));</span><br><span class="line">            bind.setStatus(<span class="number">0</span>);</span><br><span class="line">            bind.setTimes(<span class="number">0</span>);</span><br><span class="line">            bind.setType(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> count = userRecordMapper.insertSelective(bind);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                userRecordMapper.updateByMsgIdToTime(createCustomerRequestDTO.getCustomerIdentifyDTO().getYzOpenId());</span><br><span class="line">            &#125;</span><br><span class="line">            SchedulerConfig.addJob(<span class="keyword">new</span> JobEntity(JobConstant.MENBER_CREATE_GROUP + createCustomerRequestDTO.getCustomerIdentifyDTO().getYzOpenId(), JobConstant.MENBER_CREATE_GROUP, MemberCreateJob<span class="class">.<span class="keyword">class</span>.<span class="title">getName</span>(), <span class="title">createCustomerRequestDTO</span>.<span class="title">getCustomerIdentifyDTO</span>().<span class="title">getYzOpenId</span>(), 1))</span>;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"客户会员信息查询扩展点中添加重试记录出错"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="被测对象父类"><a href="#被测对象父类" class="headerlink" title="被测对象父类"></a>被测对象父类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shadow.cloud.dennis.chain.biz.extension;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.api.exception.NoSuchRedisKeyException;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.api.model.User;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.common.rest.ezrpro.RestTemplateEzrpro;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.bean.QueryMemberInfoCrmResponse;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.service.UserService;</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.utils.RedisUtil;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExtensionBase</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> UserService userService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">protected</span> RestTemplateEzrpro baseRestTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 用户账号绑定数据，通过yzOpenId取值</span></span><br><span class="line"><span class="comment">     ****/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserFromRedis</span><span class="params">(String yzOpenId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            User user =  RedisUtil.get(<span class="string">"yz_open_id:"</span> + yzOpenId, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchRedisKeyException e)&#123;</span><br><span class="line">            log.error(<span class="string">"获取redis用户数据失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 用户详细信息，通过yzOpenId取值</span></span><br><span class="line"><span class="comment">     ****/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> QueryMemberInfoCrmResponse <span class="title">getMemberInfoCrmFromRedis</span><span class="params">(String yzOpenId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            QueryMemberInfoCrmResponse queryMemberInfoCrmResponse =  RedisUtil.get(<span class="string">"yz_open_id:MemberInfoCrm"</span>+yzOpenId, QueryMemberInfoCrmResponse<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">return</span> queryMemberInfoCrmResponse;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchRedisKeyException e)&#123;</span><br><span class="line">            log.error(<span class="string">"获取redis用户数据失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 用户账号绑定数据，通过accountId取值</span></span><br><span class="line"><span class="comment">     ****/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserFromRedis</span><span class="params">(Long accountId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            User user =  RedisUtil.get(<span class="string">"account_id:"</span> + accountId, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchRedisKeyException e)&#123;</span><br><span class="line">            log.error(<span class="string">"获取redis用户数据失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有的扩展点只有yz_open_id，有的扩展点只有account_id，因此：</span></span><br><span class="line"><span class="comment">     * redis两个都保存了</span></span><br><span class="line"><span class="comment">     * ***/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserToRedis</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(user.getYzOpenId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                RedisUtil.set(<span class="string">"yz_open_id:"</span> + user.getYzOpenId(), user,<span class="number">120L</span>,TimeUnit.MINUTES);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(user.getAccountId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                RedisUtil.set(<span class="string">"account_id:"</span> + user.getAccountId(), user,<span class="number">120L</span>,TimeUnit.MINUTES);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">"设置redis用户数据失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有的扩展点只有yz_open_id，有的扩展点只有account_id，因此：</span></span><br><span class="line"><span class="comment">     * redis两个都保存了</span></span><br><span class="line"><span class="comment">     * ***/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMemberInfoCrmToRedis</span><span class="params">(QueryMemberInfoCrmResponse queryMemberInfoCrmResponse,User user)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(user.getYzOpenId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                RedisUtil.set(<span class="string">"yz_open_id:MemberInfoCrm"</span> + user.getYzOpenId(), queryMemberInfoCrmResponse,<span class="number">30L</span>, TimeUnit.MINUTES);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(user.getAccountId() != <span class="keyword">null</span>) &#123;</span><br><span class="line">                RedisUtil.set(<span class="string">"account_id:MemberInfoCrm"</span> + user.getAccountId(), queryMemberInfoCrmResponse,<span class="number">30L</span>, TimeUnit.MINUTES);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">"设置redis用户数据失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 通过yz_open_id</span></span><br><span class="line"><span class="comment">     * 获取三方--有赞用户关联表中的纪录</span></span><br><span class="line"><span class="comment">     * ***/</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> User <span class="title">getUser</span><span class="params">(String yzOpenId)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        User tmpUser = userService.getUserByYzOpenId(yzOpenId);</span><br><span class="line">        <span class="keyword">return</span> tmpUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 通过accountId</span></span><br><span class="line"><span class="comment">     * 获取三方--有赞用户关联表中的纪录</span></span><br><span class="line"><span class="comment">     * ***/</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> User <span class="title">getUser</span><span class="params">(Long accountId)</span> </span>&#123;</span><br><span class="line">        User tmpUser = userService.getUserByAccountId(String.valueOf(accountId));</span><br><span class="line">        <span class="keyword">return</span> tmpUser;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 通过yz_open_id</span></span><br><span class="line"><span class="comment">     * 是否绑定过会员</span></span><br><span class="line"><span class="comment">     * ***/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBinding</span><span class="params">(String yzOpenId)</span></span>&#123;</span><br><span class="line">        User user = <span class="keyword">this</span>.getUser(yzOpenId);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == user || user.getMemberId().isEmpty()) &#123;<span class="comment">//没绑定</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 通过accountId</span></span><br><span class="line"><span class="comment">     * 是否绑定过会员</span></span><br><span class="line"><span class="comment">     * ***/</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isBinding</span><span class="params">(Long accountId)</span></span>&#123;</span><br><span class="line">        User user = <span class="keyword">this</span>.getUser(accountId);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> == user || user.getMemberId().isEmpty()) &#123;<span class="comment">//没绑定</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Spock测试类-1"><a href="#Spock测试类-1" class="headerlink" title="Spock测试类"></a>Spock测试类</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shadow.cloud.dennis.chain.test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.common.cloud.UserAPI</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.GetCustomerEx</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.api.DennisCrmClient</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.extension.member.changyi.bean.QueryMemberInfoCrmResponse</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.biz.service.UserService</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.extension.param.scrm.CustomerIdentifyDTO</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.dennis.chain.api.model.User</span><br><span class="line"><span class="keyword">import</span> com.shadow.cloud.open.sdk.gen.v3_0_1.model.ShadowUserBasicGetResult;</span><br><span class="line"><span class="keyword">import</span> spock.lang.Specification</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GetCustomerExTest</span> <span class="keyword">extends</span> <span class="title">Specification</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> getCustomerExtPoint = Spy(GetCustomerEx<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">DennisCrmClient</span> <span class="title">dennisCrmClient</span> = <span class="title">Mock</span>()</span></span><br><span class="line"><span class="class">    <span class="title">UserService</span> <span class="title">userService</span> = <span class="title">Mock</span>()</span></span><br><span class="line"><span class="class">    <span class="title">UserAPI</span> <span class="title">userAPI</span> = <span class="title">Mock</span>()</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">//    <span class="title">void</span> <span class="title">setup</span>() &#123;</span></span><br><span class="line"><span class="comment">//        getCustomerExtPoint.dennisCrmClient = dennisCrmClient</span></span><br><span class="line"><span class="comment">//        getCustomerExtPoint.userService = userService</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="string">"Execute"</span>(Long accountId, String accountType, Long kdtId, String mobile, Integer nodeKdtId, String yzOpenId) &#123;</span><br><span class="line"><span class="symbol">        setup:</span> <span class="string">"验证扩展点"</span></span><br><span class="line">        GetCustomerEx.metaClass.setProperty(getCustomerExtPoint, <span class="string">"userService"</span>, userService)</span><br><span class="line">        GetCustomerEx.metaClass.setProperty(getCustomerExtPoint, <span class="string">"dennisCrmClient"</span>, dennisCrmClient)</span><br><span class="line">        GetCustomerEx.metaClass.setProperty(getCustomerExtPoint, <span class="string">"userAPI"</span>, userAPI)</span><br><span class="line">        <span class="keyword">def</span> customerIdentifyDTO = <span class="keyword">new</span> CustomerIdentifyDTO(</span><br><span class="line"><span class="symbol">                accountId:</span> accountId,</span><br><span class="line"><span class="symbol">                accountType:</span> accountType,</span><br><span class="line"><span class="symbol">                kdtId:</span> kdtId,</span><br><span class="line"><span class="symbol">                mobile:</span> mobile,</span><br><span class="line"><span class="symbol">                nodeKdtId:</span> nodeKdtId,</span><br><span class="line"><span class="symbol">                yzOpenId:</span> yzOpenId)</span><br><span class="line">        <span class="keyword">def</span> queryMemberInfoCrmResponse = [</span><br><span class="line"><span class="symbol">                isSuccess:</span> <span class="literal">true</span></span><br><span class="line">        ] <span class="keyword">as</span> QueryMemberInfoCrmResponse</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> user = [</span><br><span class="line"><span class="symbol">                accountId:</span> accountId,</span><br><span class="line">                <span class="string">memberId :</span> <span class="string">"123456"</span>,</span><br><span class="line">                <span class="string">kdtId    :</span> kdtId,</span><br><span class="line">                <span class="string">mobile   :</span> mobile,</span><br><span class="line">                <span class="string">yzOpenId :</span> yzOpenId,</span><br><span class="line">        ] <span class="keyword">as</span> User</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> shadowUserBasicGetResultData = [</span><br><span class="line">                <span class="string">mobile      :</span> mobile,</span><br><span class="line">                <span class="string">avatar      :</span> <span class="literal">null</span>,</span><br><span class="line">                <span class="string">nick_name   :</span> <span class="literal">null</span>,</span><br><span class="line">                <span class="string">yz_open_id  :</span> yzOpenId,</span><br><span class="line"><span class="symbol">                country_code:</span> <span class="literal">null</span></span><br><span class="line">        ] <span class="keyword">as</span> ShadowUserBasicGetResult.ShadowUserBasicGetResultData</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> shadowUserBasicGetResult = [</span><br><span class="line">                <span class="string">code    :</span> <span class="number">200</span>,</span><br><span class="line">                <span class="string">data    :</span> shadowUserBasicGetResultData,</span><br><span class="line">                <span class="string">success :</span> <span class="literal">true</span>,</span><br><span class="line">                <span class="string">message :</span> <span class="literal">null</span>,</span><br><span class="line"><span class="symbol">                trace_id:</span> <span class="literal">null</span></span><br><span class="line">        ] <span class="keyword">as</span> ShadowUserBasicGetResult</span><br><span class="line"></span><br><span class="line"><span class="symbol">        and:</span> <span class="string">"Mock方法调用"</span></span><br><span class="line">        <span class="number">0</span> * dennisCrmClient.post(_) &gt;&gt; queryMemberInfoCrmResponse</span><br><span class="line">        <span class="number">1</span> * getCustomerExtPoint.getUser(yzOpenId) &gt;&gt; user &gt;&gt; user</span><br><span class="line">        <span class="number">0</span> * userAPI.getShadowUserBasicInfoByOpenId(kdtId.toString(), yzOpenId) &gt;&gt; shadowUserBasicGetResult</span><br><span class="line">        <span class="number">1</span> * getCustomerExtPoint.getMemberInfoCrmFromRedis(yzOpenId) &gt;&gt; queryMemberInfoCrmResponse</span><br><span class="line">        <span class="number">0</span> * getCustomerExtPoint.setMemberInfoCrmToRedis(queryMemberInfoCrmResponse, user) &gt;&gt; <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">        when:</span> <span class="string">"预期结果"</span></span><br><span class="line">        <span class="keyword">def</span> resp = <span class="keyword">this</span>.getCustomerExtPoint.execute(customerIdentifyDTO)</span><br><span class="line"></span><br><span class="line"><span class="symbol">        then:</span> <span class="string">"验证结果"</span></span><br><span class="line">        <span class="keyword">assert</span> resp.code == result</span><br><span class="line"><span class="symbol">        where:</span> <span class="string">"数据准备"</span></span><br><span class="line">        accountId     | accountType     | kdtId    | mobile        | nodeKdtId  | yzOpenId                     || result</span><br><span class="line">        <span class="string">"16285515049"</span> | <span class="string">"ShaDowAccount"</span> | <span class="number">91020932</span> | <span class="string">"15512341234"</span> | <span class="string">"91020932"</span> | <span class="string">"DhYBgpIs910549797344243712"</span> || <span class="string">"200"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spock依赖整理"><a href="#Spock依赖整理" class="headerlink" title="Spock依赖整理"></a>Spock依赖整理</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shadow-sd<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.shadow.sd<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shadow-sd-spock<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">groovy.version</span>&gt;</span>3.0.9<span class="tag">&lt;/<span class="name">groovy.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spock.version</span>&gt;</span>2.0-groovy-3.0<span class="tag">&lt;/<span class="name">spock.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junitplatform.version</span>&gt;</span>1.8.2<span class="tag">&lt;/<span class="name">junitplatform.version</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--被测对象 dependency--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.shadow.sd<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shadow-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25-RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        ......</span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--groovy dependency--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-templates<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-sql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;groovy.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-test-junit5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>groovy-testng<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.groovy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--spock dependency--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.spockframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spock-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spock.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.athaydes<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spock-reports<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spock.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--junitplatform dependency--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-launcher<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junitplatform.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junitplatform.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junitplatform.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--other dependency--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol><li><a href="https://www.coder.work/article/6733126" target="_blank" rel="noopener">https://www.coder.work/article/6733126</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;异常测试&quot;&gt;&lt;a href=&quot;#异常测试&quot; class=&quot;headerlink&quot; title=&quot;异常测试&quot;&gt;&lt;/a&gt;异常测试&lt;/h3&gt;&lt;h4 id=&quot;被测对象&quot;&gt;&lt;a href=&quot;#被测对象&quot; class=&quot;headerlink&quot; title=&quot;被测对象&quot;&gt;&lt;/a&gt;被测对象&lt;/h4&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * 校验请求参数user是否合法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; APIException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; validateUser(UserVO user) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; APIException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (user == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10001&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == user.getName() || &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(user.getName())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10002&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user name is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (user.getAge() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10003&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user age is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == user.getTelephone() || &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(user.getTelephone())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10004&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user telephone is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == user.getSex() || &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(user.getSex())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10005&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user sex is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == user.getUserOrders() || user.getUserOrders().size() &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10006&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;user order is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (OrderVO &lt;span class=&quot;string&quot;&gt;order :&lt;/span&gt; user.getUserOrders()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == order.getOrderNum() || &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;.equals(order.getOrderNum())) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10007&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;order number is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; == order.getAmount()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIException(&lt;span class=&quot;string&quot;&gt;&quot;10008&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;order amount is null&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Spock" scheme="http://shadow000902.space/categories/Spock/"/>
    
    
      <category term="spock" scheme="http://shadow000902.space/tags/spock/"/>
    
  </entry>
  
  <entry>
    <title>软件测试度量</title>
    <link href="http://shadow000902.space/2021/03/11/2021-03-11-Software-Test-Metrics/"/>
    <id>http://shadow000902.space/2021/03/11/2021-03-11-Software-Test-Metrics/</id>
    <published>2021-03-11T10:23:10.000Z</published>
    <updated>2023-04-20T08:48:51.494Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件测试度量的目的"><a href="#软件测试度量的目的" class="headerlink" title="软件测试度量的目的"></a>软件测试度量的目的</h2><p>通过过程监控、结果度量（包括用例维度、缺陷维度、需求维度、接口自动化维度等）等度量数据的获取，通过对于这些度量数据的分析，获取其中的异常数据，从而促进产研流程改进。<br><a href="https://www.icloud.com/iclouddrive/0LOs-7Z7lePvixFZN6pPUnr6A" target="_blank" rel="noopener">Xmind原始文件地址</a></p><a id="more"></a> <img src="/2021/03/11/2021-03-11-Software-Test-Metrics/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%BA%A6%E9%87%8F.png" title="软件测试度量">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件测试度量的目的&quot;&gt;&lt;a href=&quot;#软件测试度量的目的&quot; class=&quot;headerlink&quot; title=&quot;软件测试度量的目的&quot;&gt;&lt;/a&gt;软件测试度量的目的&lt;/h2&gt;&lt;p&gt;通过过程监控、结果度量（包括用例维度、缺陷维度、需求维度、接口自动化维度等）等度量数据的获取，通过对于这些度量数据的分析，获取其中的异常数据，从而促进产研流程改进。&lt;br&gt;&lt;a href=&quot;https://www.icloud.com/iclouddrive/0LOs-7Z7lePvixFZN6pPUnr6A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Xmind原始文件地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测试管理" scheme="http://shadow000902.space/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="度量" scheme="http://shadow000902.space/tags/%E5%BA%A6%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>测试用例设计方法总结</title>
    <link href="http://shadow000902.space/2021/03/02/2021-02-26-Test-Case-Design-Method/"/>
    <id>http://shadow000902.space/2021/03/02/2021-02-26-Test-Case-Design-Method/</id>
    <published>2021-03-02T10:25:29.000Z</published>
    <updated>2021-08-20T08:04:08.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="测试用例设计方法"><a href="#测试用例设计方法" class="headerlink" title="测试用例设计方法"></a>测试用例设计方法</h2><pre><code>1. 等价类划分法2. 边界值法3. 错误推测法4. 因果图法5. 场景法/流程分析法6. 判定表法7. 正交试验法8. 功能图法</code></pre><p><a href="https://www.icloud.com/iclouddrive/0LOs-7Z7lePvixFZN6pPUnr6A" target="_blank" rel="noopener">Xmind原始文件地址</a></p><a id="more"></a> <img src="/2021/03/02/2021-02-26-Test-Case-Design-Method/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.png" title="测试用例设计方法">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;测试用例设计方法&quot;&gt;&lt;a href=&quot;#测试用例设计方法&quot; class=&quot;headerlink&quot; title=&quot;测试用例设计方法&quot;&gt;&lt;/a&gt;测试用例设计方法&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 等价类划分法
2. 边界值法
3. 错误推测法
4. 因果图法
5. 场景法/流程分析法
6. 判定表法
7. 正交试验法
8. 功能图法&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://www.icloud.com/iclouddrive/0LOs-7Z7lePvixFZN6pPUnr6A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Xmind原始文件地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测试管理" scheme="http://shadow000902.space/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="测试用例" scheme="http://shadow000902.space/tags/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>测试计划</title>
    <link href="http://shadow000902.space/2021/02/26/2021-02-26-Test-Plan/"/>
    <id>http://shadow000902.space/2021/02/26/2021-02-26-Test-Plan/</id>
    <published>2021-02-26T03:01:24.000Z</published>
    <updated>2021-08-20T08:04:08.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="测试计划的作用"><a href="#测试计划的作用" class="headerlink" title="测试计划的作用"></a>测试计划的作用</h2><pre><code>1. 管理者能够根据测试计划做宏观调控，进行相应资源配置等2. 测试负责人可以根据测试计划跟踪测试进度3. 测试人员能够了解整个项目测试情况，以及项目测试不同阶段所要进行的工作4. 便于其他人员了解测试人员的工作内容，进行有关的配合工作</code></pre><p><a href="https://www.icloud.com/iclouddrive/0LOs-7Z7lePvixFZN6pPUnr6A" target="_blank" rel="noopener">Xmind原始文件地址</a></p><a id="more"></a> <img src="/2021/02/26/2021-02-26-Test-Plan/%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92.png" title="测试计划">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;测试计划的作用&quot;&gt;&lt;a href=&quot;#测试计划的作用&quot; class=&quot;headerlink&quot; title=&quot;测试计划的作用&quot;&gt;&lt;/a&gt;测试计划的作用&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 管理者能够根据测试计划做宏观调控，进行相应资源配置等
2. 测试负责人可以根据测试计划跟踪测试进度
3. 测试人员能够了解整个项目测试情况，以及项目测试不同阶段所要进行的工作
4. 便于其他人员了解测试人员的工作内容，进行有关的配合工作&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&quot;https://www.icloud.com/iclouddrive/0LOs-7Z7lePvixFZN6pPUnr6A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Xmind原始文件地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测试管理" scheme="http://shadow000902.space/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="测试计划" scheme="http://shadow000902.space/tags/%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>测试需求分析</title>
    <link href="http://shadow000902.space/2021/02/24/2021-02-24-Test-Requirement-Analysis/"/>
    <id>http://shadow000902.space/2021/02/24/2021-02-24-Test-Requirement-Analysis/</id>
    <published>2021-02-24T10:37:11.000Z</published>
    <updated>2023-04-20T08:48:51.489Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件需求"><a href="#软件需求" class="headerlink" title="软件需求"></a>软件需求</h2><p>软件需求是测试需求的基础。软件需求分为<strong>业务需求</strong>、<strong>用户需求</strong>、<strong>功能需求</strong>3个层次。<br>需求包括<strong>功能需求</strong>和<strong>非功能需求</strong>两个方面。</p><a id="more"></a><p><img src="https://res.weread.qq.com/wrepub/epub_24981835_18" alt="软件测试的3个层次"></p><h2 id="测试需求"><a href="#测试需求" class="headerlink" title="测试需求"></a>测试需求</h2><p>测试需求是解决“测什么”的问题，是整个测试项目的基础，是制订测试计划、开发测试用例的依据。清晰完整的测试需求有助于保证测试的质量与进度，有助于确保测试的覆盖率。如果没有明确的测试需求就开展测试工作，那么经常会出现需求遗漏、产品质量关注不全面等问题。<br>测试需求分析的目标是<strong>明确测试范围和功能处理过程</strong>。</p><h3 id="测试分类"><a href="#测试分类" class="headerlink" title="测试分类"></a>测试分类</h3><ol><li>根据测试阶段<ul><li>单元测试</li><li>模块测试</li><li>集成测试</li><li>系统测试</li><li>验收测试</li><li>Alpha测试</li><li>Beta测试</li></ul></li><li>根据是否执行被测软件<ul><li>静态测试：不运行被测软件，比如需求文档评审、设计文档评审、代码走查等</li><li>动态测试</li></ul></li><li>根据是否使用工具<ul><li>手工测试</li><li>自动化测试</li></ul></li><li>根据测试技术<ul><li>白盒测试：通过对程序内部结构的分析、检测来寻找问题</li><li>黑盒测试：通过软件的外部表现来发现其缺陷和错误</li><li>灰盒测试：介于白盒测试和黑盒测试之间的测试，灰盒测试不仅关注输出、输入的正确性，同时也关注程序内部的情况；通过一些表征性的现象、事件、标志来判断内部的运行状态</li></ul></li><li>根据测试类型<ul><li>功能测试</li><li>兼容性测试</li><li>性能测试</li><li>用户界面测试</li><li>安装卸载测试</li><li>接口测试</li><li>…</li></ul></li></ol><table><caption>常见的测试类型及其测试内容说明</caption><tr><th width="150px">测试类型</th><th>测试内容描述</th></tr><tr><td>功能测试</td><td>是对产品的各功能进行验证，根据功能需求逐项测试，检查产品是否达到用户要求的功能</td></tr><tr><td>兼容性测试</td><td>测试软件在特定的硬件平台上、不同的应用软件之间、不同的操作系统平台上、不同的网络等环境中是否能够正常运行</td></tr><tr><td>安全性测试</td><td>针对的是未授权的访问、拒绝访问攻击等，一般包括程序、网络、数据库的安全性测试</td></tr><tr><td>接口测试</td><td>是对测试系统组件间接口的一种测试。接口测试主要用于检测外部系统与系统之间以及内部各个子系统之间的交互点。测试的重点是检查数据的交换、传递和控制管理过程，以及系统间的相互逻辑依赖关系等</td></tr><tr><td>数据库完整性测试</td><td>该项测试内容主要以数据库表为单位，检查数据库表及表中各字段命名是否符合命名规范，表中字段是否完整，数据库表中的字段描述是否正确地包括字段的类型、长度，是否为空，数据库表中的关系、索引、主键、约束是否正确</td></tr><tr><td>用户界面测试</td><td>即UI测试，测试用户界面功能模块的布局是否合理，整体风格是否一致，各个控件的放置位置是否符合客户使用习惯，操作是否便捷，导航是否简单易懂，界面文字是否正确，命名是否统一，页面是否美观，文字、图片组合是否合适等。除此之外，还要确保 UI功能内部的对象符合预期要求，并遵循公司或行业的标准</td></tr><tr><td>负载测试</td><td>负载测试通过改变系统负载方式增加负载等来发现系统中所存在的性能问题。负载测试更多的是一种测试方法，而不是测试类型，可以为性能测试、压力测试所采用。负载测试的加载方式也有很多种，可以根据测试需要来选择</td></tr><tr><td>性能测试</td><td>性能测试是为获取或验证系统性能指标而进行的测试。多数情况下，性能测试会在不同的负载情况下进行。性能指标主要有系统吞吐量、响应速度、CPU占用率、内存占用率等</td></tr><tr><td>压力测试</td><td>压力测试通常在高负载的情况下来对系统的稳定性进行测试，能更有效地发现系统稳定性的隐患及系统在负载峰值下的功能隐患等</td></tr><tr><td>疲劳强度测试</td><td>通过长时间运行系统，测试系统的性能，发现性能问题。测试系统的日常业务(正常情况)和高峰业务(最大业务量)长时间运行的结果</td></tr><tr><td>恢复性测试</td><td>测试一个系统从灾难或出错中能否很好地恢复，如系统崩溃、硬件损坏或其他灾难性出错。恢复性测试一般通过人为的各种强制性手段让软件或硬件出现故障，然后检测系统是否能正确恢复(自动恢复和人工恢复)</td></tr><tr><td>配置测试</td><td>一般是针对硬件配置的测试，测试软件在最低配置和推荐配置情况下是否能够正常运行</td></tr><tr><td>安装卸载测试</td><td>确保软件在正常情况和异常情况下都能正确地完成安装和卸载。例如，进行首次安装、升级，或进行完整的或自定义的安装</td></tr><tr><td>用户文档测试</td><td>软件文档是软件的一部分，要确保文档能够给用户提供正确的说明或指引，重点关注文档的正确性、完备性及可理解性。交给用户的文档主要有系统帮助、用户使用手册、用户安装手册、示例及模板、图像和声音帮助、用户许可协议等</td></tr><tr><td>可用性（易用性）测试</td><td>让一群具有代表性的用户对产品进行典型操作，同时观察员和开发人员在一旁观察，聆听，做记录。可用性有5 个指标，分别是易学性、易记性、容错性、交互效率和用户满意度</td></tr><tr><td>稳定性（可靠性）测试</td><td>稳定性测试通过给系统加载一定的业务压力，让系统持续运行一段时间(一般为7x24h)，检测系统是否能够稳定运行</td></tr><tr><td>内存泄漏测试</td><td>内存泄漏是指用动态存储分配函数动态开辟的空间，在使用完毕后未释放，导致一直占据该内存单元，直到程序结束。内存泄漏测试就是测试有没有内存空间使用完毕之后未回收的情况，一般使用专门的检测工具</td></tr><tr><td>本地化测试</td><td>也称为国际化测试,有些产品为了满足特定区域用户的需要，有多个语言版本，比如简体中文、繁体中文、英文、日文等。本地化测试针对特定目标区域性或区域设置的产品进行测试，在本地化的软硬件环境下测试界面、安装、卸载等内容，也要关注产品目标地区的文化、 宗教、喜好等适用性测试</td></tr></table><h3 id="软件测试类型分析"><a href="#软件测试类型分析" class="headerlink" title="软件测试类型分析"></a>软件测试类型分析</h3><ol><li>不同的测试类型分析产品的角度不同</li><li>不同的测试阶段重点采用的测试类型也不同</li><li>不同的测试类型会发现不同类型的缺陷</li><li>不同的测试类型有不同的测试方法</li><li>不同的产品对应的测试类型的集合可能有很大的不同</li></ol><table><caption>移动APP软件的主要测试类型</caption><tr><th width="150px">移动APP软件测试类型</th><th>测试涉及的内容简介</th></tr><tr><td>安全测试</td><td>软件授权注册<br>软件获取系统的权限,比如访问联系人信息等</td></tr><tr><td>用户界面测试</td><td>测试用户界面,包括导航、布局、文字、图片、配色等</td></tr><tr><td>功能测试</td><td>对需求文档中的功能进行测试</td></tr><tr><td>性能测试-响应速度测试</td><td>正常环境下，APP中的关键操作响应时间能否满足用户要求，比如安装、升级、卸载响应时间，APP启动时间，其他关键操作响应时间(搜索、上传、下载等)</td></tr><tr><td>性能测试-极限测试</td><td>在极限条件下APP的响应速度测试，比如电量低、存储空间紧张、网速慢等运行环境比较差的情况</td></tr><tr><td>性能测试-资源占用率测试</td><td>典型场景下系统资源(CPU、内存)的使用情况，如 APP启动后，APP加载数据后(打开一个文件或显示了一些数据), APP长时间反复操作后</td></tr><tr><td>兼容性测试</td><td>不同操作系统的兼容性<br>不同手机分辨率的兼容性<br>不同手机品牌的兼容性</td></tr><tr><td>交叉事件测试</td><td>APP在运行过程中，另外一个事件或操作发生时的测试，比如有来电、收发邮件等</td></tr><tr><td>安装卸载测试</td><td>在主流的系统和不同手机品牌上开展测试，包括 APP 安装、升级更新、卸载</td></tr></table><h3 id="建立软件的测试类型列表"><a href="#建立软件的测试类型列表" class="headerlink" title="建立软件的测试类型列表"></a>建立软件的测试类型列表</h3><ol><li>参考以往的项目经验</li><li>对照软件特性寻找对应的测试类型</li></ol><table><caption>软件质量特性分类与软件测试类型之间的部分对应关系</caption><tr><th width="150px">质量特性</th><th width="300px">质量特性说明</th><th width="150px">子特性</th><th>对应的测试类型</th></tr><tr><td rowspan="5">功能性</td><td rowspan="5">与一组功能及其指定的性质有关的一组属性。这里的工鞥指满足明确或隐含需求的功能</td><td>适合性</td><td>功能测试</td></tr><tr><td>准确性</td><td>功能测试、负载测试、压力测试、疲劳强度测试</td></tr><tr><td>互操作性</td><td>接口测试</td></tr><tr><td>保密安全性</td><td>安全性测试</td></tr><tr><td>功能型依从性</td><td>功能测试</td></tr><tr><td rowspan="4">可靠性</td><td rowspan="4">在规定的一段时间和条件下，与软件维持其性能水平的能力有关的一组属性</td><td>成熟性</td><td>功能测试、疲劳强度测试、稳定性测试</td></tr><tr><td>容错性</td><td>安全性测试、接口测试、完整性测试、疲劳强度测试</td></tr><tr><td>易恢复性</td><td>恢复性测试</td></tr><tr><td>可靠性依从性</td><td></td></tr><tr><td rowspan="5">易用性</td><td rowspan="5">与一组规定或潜在的用户为使用软件所需做的努力和对这样的使用所做的评价有关的一组属性</td><td>易理解性</td><td>用户界面测试</td></tr><tr><td>易学习性</td><td>用户界面测试、用户文档测试</td></tr><tr><td>易操作性</td><td>用户界面测试</td></tr><tr><td>吸引性</td><td>用户界面测试</td></tr><tr><td>易用性依从性</td><td></td></tr><tr><td rowspan="3">效率</td><td rowspan="3">与在规定条件下软件的性能水平和所用资源量之间的关系有关的一组属性</td><td>时间特性</td><td>负载测试、压力测试、性能测试</td></tr><tr><td>资源利用特性</td><td>负载测试、压力测试、性能测试、内存泄漏测试</td></tr><tr><td>效率依从性</td><td></td></tr><tr><td rowspan="5">可维护性</td><td rowspan="5">与进行指定的修改所需的努力有关的一组属性</td><td>易分析性</td><td></td></tr><tr><td>易改变性</td><td></td></tr><tr><td>稳定性</td><td></td></tr><tr><td>易测试性</td><td>功能测试</td></tr><tr><td>维护性依从性</td><td></td></tr><tr><td rowspan="5">移植性</td><td rowspan="5">与软件可以从某一环境转移到另一环境的能力有关的一组属性</td><td>适应性</td><td>配置测试</td></tr><tr><td>易安裝性</td><td>安装测试</td></tr><tr><td>共存性</td><td>兼容性测试</td></tr><tr><td>易替换性</td><td>兼容性测试</td></tr><tr><td>可移植性的依从性</td><td></td></tr></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件需求&quot;&gt;&lt;a href=&quot;#软件需求&quot; class=&quot;headerlink&quot; title=&quot;软件需求&quot;&gt;&lt;/a&gt;软件需求&lt;/h2&gt;&lt;p&gt;软件需求是测试需求的基础。软件需求分为&lt;strong&gt;业务需求&lt;/strong&gt;、&lt;strong&gt;用户需求&lt;/strong&gt;、&lt;strong&gt;功能需求&lt;/strong&gt;3个层次。&lt;br&gt;需求包括&lt;strong&gt;功能需求&lt;/strong&gt;和&lt;strong&gt;非功能需求&lt;/strong&gt;两个方面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测试管理" scheme="http://shadow000902.space/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="测试需求分析" scheme="http://shadow000902.space/tags/%E6%B5%8B%E8%AF%95%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>软件测试流程管理</title>
    <link href="http://shadow000902.space/2021/02/23/2021-02-23-Software-Testing-Process-Management/"/>
    <id>http://shadow000902.space/2021/02/23/2021-02-23-Software-Testing-Process-Management/</id>
    <published>2021-02-23T10:45:40.000Z</published>
    <updated>2023-04-20T08:48:51.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件研发中的测试"><a href="#软件研发中的测试" class="headerlink" title="软件研发中的测试"></a>软件研发中的测试</h2><ol><li><p>软件需求完成后，需要进行需求的评审，此时测试人员可以<strong>参与需求的评审</strong>。当需求确定后，测试人员可以开始进行<strong>系统测试方案及计划的制订</strong>。</p></li><li><p>软件项目总体设计方案完成后，测试人员可以开始进行<strong>集成测试方案及计划的制订</strong>。</p></li><li><p>详细设计完成后，测试方可以开始进行<strong>模块测试方案及计划的制订</strong>。</p></li><li><p>单元测试和编码一般是同步的，由开发人员自己完成。</p></li><li><p>整个模块开发完成后，测试人员开始进行<strong>模块测试</strong>。当然在这之前，<strong>所有的模块测试用例已经准备完毕</strong>。</p></li><li><p>模块测试后是<strong>集成测试和系统测试</strong>。</p></li><li><p>软件运行维护期间则要对运行期间发现的问题进行<strong>回归测试</strong>。</p><a id="more"></a></li></ol><p><img src="https://res.weread.qq.com/wrepub/epub_24981835_8" alt="软件研发中的测试环节及测试活动"></p><h2 id="软件测试模型"><a href="#软件测试模型" class="headerlink" title="软件测试模型"></a>软件测试模型</h2><h3 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h3><p><img src="https://res.weread.qq.com/wrepub/epub_24981835_9" alt="V模型"><br>项目研发中的开发活动是从需求分析到概要设计，之后到详细设计，再到编码，然后是测试活动。在这个模型中，把测试作为编码之后的最后一个活动，需求分析等前期产生的错误直到后期的验收测试才能发现。测试活动在编码之后，并且只对代码测试，未能体现尽早测试的原则。虽然该模型有局限性，但是该模型仍然是指导测试开展的一个重要模型。<br>测试活动对应开发的4个阶段，分别是<strong>单元测试</strong>、<strong>集成测试</strong>、<strong>系统测试</strong>和<strong>验收测试</strong>。</p><ol><li><strong>单元测试</strong>：对软件中的最小可测试单元进行检查和验证，是指在编码完成后，对所实现的方法/函数的内部逻辑进行的测试。<ul><li>单元测试的依据是方法/函数的功能与功能实现流程；</li><li>单元测试的主要对象是方法/函数的功能在实现过程中的错误或不完善的地方；</li><li>单元测试所采用的测试方法是白盒测试，即针对方法/函数的内部实现逻辑，并结合方法/函数的输入及输出的可能取值范围，进行程序的针对性测试。</li></ul></li><li><strong>集成测试</strong>：也叫组装测试或联合测试，将所有模块按照设计要求（如软件架构图）组装成为子系统或系统，进行集成测试。之所以进行集成测试，是因为一些模块虽然能够单独地工作，但并不能保证连接起来也能正常工作。一些局部反映不出来的问题，在全局上很可能暴露出来。在实际项目实践中，集成测试之前还会安排模块测试。模块测试是指针对产品设计所识别出的各个模块在本产品版本所承载的功能实现，测试模块级功能的实现，模块间的接口、交互，以及依赖关系的正确与否。</li><li><strong>系统测试</strong>：将经过集成测试的软件，作为计算机系统的一个部分，与系统中的其他部分结合起来，在实际运行环境下对计算机系统进行的一系列严格有效的测试，以发现软件潜在的问题，保证系统的正常运行。系统测试是针对产品版本系统进行的整体测试，主要采用的测试方法是黑盒测试，系统测试除了关注功能测试外，还需要关注软件产品的非功能需求，包括但不限于容量测试、性能测试、压力测试、负载测试、兼容性测试、稳定性测试、可靠性测试、可用性测试和用户文档测试。</li><li><strong>验收测试</strong>：也称为交付测试，目的是确保软件准备就绪，向未来的用户表明系统能够像预定的要求那样工作，即软件的功能和性能如同用户所合理期待的那样。<ul><li>验收测试阶段，相关的用户和独立测试人员根据测试计划及结果对系统进行测试和接收。</li><li>它让系统用户决定是否接收系统。</li><li>它是一项确定产品是否能够满足合同或用户所规定的需求的测试。</li><li><strong>非正式验收测试（Alpha测试）</strong>：是由用户在开发环境下进行的测试，也可以是公司内部的用户（比如技术支持人员、销售人员、代理商等）在模拟实际操作环境下进行的受控测试。Alpha测试不能由程序员或测试员完成。</li><li><strong>正式验收测试（Beta测试）</strong>：是软件的用户在实际使用环境下进行的测试，开发者通常不在测试现场。Beta测试不能由程序员或测试员完成。比如，游戏的公开测试就属于Beta测试。一般Beta测试通过后就可以正式发布产品了。</li></ul></li></ol><h3 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h3><p><img src="https://res.weread.qq.com/wrepub/epub_24981835_10" alt="W模型"></p><ol><li>从V模型演化而来，在这个模型中增加了与软件各开发阶段同步的测试活动。</li><li>测试伴随着整个软件开发的周期。</li><li>用户不仅需要对程序进行测试，还需要对需求和设计进行测试。</li><li>测试和开发是同步的，有利于尽早地发现问题。</li><li>但是W模型存在一个和V模型相同的问题，它们把软件研发的过程视为一系列串行的活动，没有融入迭代及变更的元素。</li></ol><h3 id="H模型"><a href="#H模型" class="headerlink" title="H模型"></a>H模型</h3><p><img src="https://res.weread.qq.com/wrepub/epub_24981835_11" alt="H模型"></p><ol><li>强调测试活动是独立的，贯穿于整个产品的周期，和研发流程是并发的。</li><li>只要测试就绪点达到了，就可以开始进行测试。</li><li>可以满足测试尽早开始这样一原则。</li><li>模型本身并没有太多的执行指导，可以把它理解为一种理念，测试就绪点满足了就可以测试了。</li></ol><h2 id="软件测试流程"><a href="#软件测试流程" class="headerlink" title="软件测试流程"></a>软件测试流程</h2><p><img src="https://res.weread.qq.com/wrepub/epub_24981835_12" alt="软件测试的一般性过程"><br><img src="https://res.weread.qq.com/wrepub/epub_24981835_13" alt="复杂大型项目的测试过程"></p><ol><li>测试需求分析</li><li>测试计划及监控</li><li>测试设计与开发</li><li>测试执行及报告</li><li>软件评估报告及批准</li><li>测试总结及资产归档<br><img src="https://res.weread.qq.com/wrepub/epub_24981835_15" alt="某企业软件测试跨职能流程图"></li></ol><h2 id="软件测试过程资产"><a href="#软件测试过程资产" class="headerlink" title="软件测试过程资产"></a>软件测试过程资产</h2><ol><li>测试方案文档（测试计划文档）。</li><li>测试用例列表。</li><li>测试缺陷列表。</li><li>测试总结报告。</li><li>其他。<ul><li>新开发或引入的测试工具。</li><li>测试工作会议记录。</li><li>测试计划（测试方案）、测试用例的评审报告。</li><li>测试总结。</li><li>测试原始数据及度量数据。</li><li>测试日志：每天测试日程记录。</li><li>周期性测试报告。</li><li>任务报告：任务完成情况报告。</li></ul></li></ol><table><thead><tr><th>文档名</th><th>作用</th><th>主要内容</th></tr></thead><tbody><tr><td>测试计划（测试方案）</td><td>描述为完成软件特性的测试而采用的测试方法的细节<br>描述测试活动的安排和管理</td><td>- 测试范围和策略:包括被测对象、应测试的特性不被测试的特性、测试模型、测试需求、测试设计<br>- 测试环境和工具<br>- 测试出入口准则及暂停标准<br>- 测试人员要求<br>- 测试管理约定<br>- 任务安排和进度计划<br>- 风险和应急</td></tr><tr><td>测试用例</td><td>描述测试用例的具体细节</td><td>- 测试项目<br>- 用例编号<br>- 用例级别：测试用例的重要程度<br>- 用例可用性<br>- 输入值<br>- 预期输出<br>- 实测结果<br>- 特殊环境需求（可选）<br>- 特殊测试步骤（可选）</td></tr><tr><td>测试缺陷</td><td>描述测试缺陷</td><td>- 缺陷简述<br>- 缺陷描述<br>- 缺陷级别<br>- 缺陷状态</td></tr><tr><td>测试报告</td><td>描述测试结果</td><td>- 测试时间、地点、人员<br>- 测试环境<br>- 测试结果统计分析<br>- 测试评估<br>- 测试总计和改进<br>- 遗留缺陷列表</td></tr></tbody></table><h2 id="软件测试流程中的度量分析"><a href="#软件测试流程中的度量分析" class="headerlink" title="软件测试流程中的度量分析"></a>软件测试流程中的度量分析</h2><ol><li>测试度量作用：积累数据，评价工作，改进过程，预测趋势。</li><li>缺陷遗漏统计：<ul><li>用例未覆盖</li><li>用例覆盖未执行</li><li>测试通过线上复发</li></ul></li><li>缺陷分布统计：<ul><li>严重程度</li><li>阶段</li><li>模块</li><li>开发人员</li></ul></li><li>用例统计：<ul><li>用例执行率</li><li>用例通过率</li><li>用例需求覆盖率</li><li>用例缺陷发现率</li><li>用例执行工作量</li><li>回归用例执行工作量</li></ul></li><li>缺陷分布统计：缺陷模块分布、缺陷开发人员分布、缺陷严重程度分布</li><li>缺陷修复统计：缺陷每日修复率、缺陷阶段修复率</li><li>缺陷收敛统计：缺陷收敛速率</li><li>工作量统计：发现缺陷数量、测试用例执行数量</li></ol><h3 id="度量的意义"><a href="#度量的意义" class="headerlink" title="度量的意义"></a>度量的意义</h3><table><thead><tr><th>度量项</th><th>含义</th><th>目标和意义</th></tr></thead><tbody><tr><td>测试生产率</td><td>单位时间所测试的代码量/单位时间执行测试用例的数量</td><td>一个团队的测试能力</td></tr><tr><td>工作量变化率</td><td>实际花费工作量相对于估计工作量的偏差百分比</td><td>提高估计能力、避免过载分配任务</td></tr><tr><td>测试进度变化率</td><td>项目实际测试进度相对于计划进度的偏差百分比</td><td>监控项目以便适时采取纠偏措施</td></tr><tr><td>工作量</td><td>测试所做的工作小时数</td><td>测试为整个项目贡献的工作量</td></tr><tr><td>缺陷密度</td><td>千行代码发现的缺陷数/千条用例发现的缺陷数</td><td>用于度量被测试系统的可靠性</td></tr><tr><td>测试问题的严重性</td><td>测试发现问题的严重性分布</td><td>用于确定目前被测试系统的可靠性</td></tr><tr><td>测试用例的问题发现效率</td><td>测试用例发现问题的数量</td><td>用于度量测试用例的有效性</td></tr><tr><td>测试用例覆盖率</td><td>需求覆盖率、功能点覆盖率、代码覆盖率等</td><td>度量测试的充分性</td></tr><tr><td>问题遗漏率</td><td>发布后反馈问题数/产品问题总数量</td><td>衡量内部测试质量</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件研发中的测试&quot;&gt;&lt;a href=&quot;#软件研发中的测试&quot; class=&quot;headerlink&quot; title=&quot;软件研发中的测试&quot;&gt;&lt;/a&gt;软件研发中的测试&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;软件需求完成后，需要进行需求的评审，此时测试人员可以&lt;strong&gt;参与需求的评审&lt;/strong&gt;。当需求确定后，测试人员可以开始进行&lt;strong&gt;系统测试方案及计划的制订&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;软件项目总体设计方案完成后，测试人员可以开始进行&lt;strong&gt;集成测试方案及计划的制订&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;详细设计完成后，测试方可以开始进行&lt;strong&gt;模块测试方案及计划的制订&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;单元测试和编码一般是同步的，由开发人员自己完成。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;整个模块开发完成后，测试人员开始进行&lt;strong&gt;模块测试&lt;/strong&gt;。当然在这之前，&lt;strong&gt;所有的模块测试用例已经准备完毕&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;模块测试后是&lt;strong&gt;集成测试和系统测试&lt;/strong&gt;。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;软件运行维护期间则要对运行期间发现的问题进行&lt;strong&gt;回归测试&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测试管理" scheme="http://shadow000902.space/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="软件测试流程管理" scheme="http://shadow000902.space/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Mac电脑使用总结</title>
    <link href="http://shadow000902.space/2021/01/05/2021-01-05-Mac-Useing-Tips/"/>
    <id>http://shadow000902.space/2021/01/05/2021-01-05-Mac-Useing-Tips/</id>
    <published>2021-01-05T03:38:33.000Z</published>
    <updated>2023-04-20T08:48:51.481Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浏览器使用总结"><a href="#浏览器使用总结" class="headerlink" title="浏览器使用总结"></a>浏览器使用总结</h2><h3 id="emsp-标签页快捷键"><a href="#emsp-标签页快捷键" class="headerlink" title="&emsp;标签页快捷键"></a>&emsp;标签页快捷键</h3><ol><li><p>Chrome浏览器，超链接点击后，在新的标签页打开，且切换到新的标签页<br><strong>快捷键</strong>：<code>COMMAND + SHIFT + 鼠标左键点击超链接</code><br><strong>适用场景</strong>：不想页面跳转，又想立马看到超链接页面的内容</p><a id="more"></a></li><li><p>Chrome浏览器，超链接点击后，在新的窗口打开，且切换到新的窗口<br><strong>快捷键</strong>：<code>SHIFT + 鼠标左键点击超链接</code><br><strong>适用场景</strong>：已经打开多个标签了，再在同一窗口打开标签会造成切换标签不便时</p></li><li><p>Chrome浏览器，超链接点击后，在新的标签页打开，且停留在当前标签页<br><strong>快捷键</strong>：<code>COMMAND + 鼠标左键点击超链接</code><br><strong>适用场景</strong>：需要快速查看单页面内的多个内部跳转的页面，又不想要每次查看再返回</p></li></ol><h3 id="emsp-好用的浏览器插件"><a href="#emsp-好用的浏览器插件" class="headerlink" title="&emsp;好用的浏览器插件"></a>&emsp;好用的浏览器插件</h3><ol><li><p>请求头管理插件<code>ModHeader</code><br>插件下载地址：<a href="https://bewisse.com/modheader/" target="_blank" rel="noopener">https://bewisse.com/modheader/</a></p></li><li><p>浏览器代理切换工具<code>SwitchyOmega</code><br>插件下载地址：<a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="noopener">https://github.com/FelisCatus/SwitchyOmega/releases</a></p></li><li><p>Web开发者助手<code>FeHelper</code><br>插件下载地址：<a href="https://www.baidufe.com/fehelper/index/index.html" target="_blank" rel="noopener">https://www.baidufe.com/fehelper/index/index.html</a><br>插件常用功能列表：</p><ul><li>JSON美化工具</li><li>时间(戳)转换</li><li>随机密码生成</li><li>颜色转换工具</li><li>二维码/解码</li><li>JSON对比工具</li><li>等等</li></ul></li><li><p>浏览器黑暗模式<code>DACK READER</code><br>插件下载地址：<a href="https://darkreader.org/" target="_blank" rel="noopener">https://darkreader.org/</a></p></li><li><p>网页翻译工具<code>彩云小译</code><br>插件下载地址：<a href="https://fanyi.caiyunapp.com/#/web" target="_blank" rel="noopener">https://fanyi.caiyunapp.com/#/web</a><br><strong>整篇文章，根据段落进行翻译，中文在英文下展示，即直观有方便</strong></p></li><li><p>网页json格式化工具<code>JSON Formatter</code><br>插件下载地址：<a href="https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa</a><br>浏览器请求返回的JSON结果，会自动格式化后进行可视化展示</p></li></ol><h2 id="Mac系统使用总结"><a href="#Mac系统使用总结" class="headerlink" title="Mac系统使用总结"></a>Mac系统使用总结</h2><h3 id="emsp-升级系统后，截图软件无法使用"><a href="#emsp-升级系统后，截图软件无法使用" class="headerlink" title="&emsp;升级系统后，截图软件无法使用"></a>&emsp;升级系统后，截图软件无法使用</h3><p>问题可能原因：因为系统升级原因，<code>/Library/Application\ Support/com.apple.TCC</code>目录中的文件，损坏或权限异常<br>导致在<code>系统偏好设置-安全性与隐私-隐私-屏幕录制</code>中，无法添加软件，从而无法进行截图和录屏。<br>解决方案：删除<code>/Library/Application\ Support/com.apple.TCC</code>目录中的<code>TCC.db</code>文件，然后重启系统<br>然后重新在<code>系统偏好设置-安全性与隐私-隐私-屏幕录制</code>中添加软件，就可以看到对应软件被添加到了列表中</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;浏览器使用总结&quot;&gt;&lt;a href=&quot;#浏览器使用总结&quot; class=&quot;headerlink&quot; title=&quot;浏览器使用总结&quot;&gt;&lt;/a&gt;浏览器使用总结&lt;/h2&gt;&lt;h3 id=&quot;emsp-标签页快捷键&quot;&gt;&lt;a href=&quot;#emsp-标签页快捷键&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;标签页快捷键&quot;&gt;&lt;/a&gt;&amp;emsp;标签页快捷键&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Chrome浏览器，超链接点击后，在新的标签页打开，且切换到新的标签页&lt;br&gt;&lt;strong&gt;快捷键&lt;/strong&gt;：&lt;code&gt;COMMAND + SHIFT + 鼠标左键点击超链接&lt;/code&gt;&lt;br&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：不想页面跳转，又想立马看到超链接页面的内容&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://shadow000902.space/categories/Tips/"/>
    
    
      <category term="mac" scheme="http://shadow000902.space/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>JIRA常用的API使用介绍</title>
    <link href="http://shadow000902.space/2020/12/03/2020-12-03-Jira-Api-Useing/"/>
    <id>http://shadow000902.space/2020/12/03/2020-12-03-Jira-Api-Useing/</id>
    <published>2020-12-03T11:24:12.000Z</published>
    <updated>2023-04-20T08:48:51.475Z</updated>
    
    <content type="html"><![CDATA[<h3 id="获取Issue详情"><a href="#获取Issue详情" class="headerlink" title="获取Issue详情"></a>获取Issue详情</h3><p>接口名：<code>https://jira.shadow.com/rest/api/2/issue/{issueIdOrKey}</code></p><a id="more"></a><h4 id="接口介绍"><a href="#接口介绍" class="headerlink" title="接口介绍"></a>接口介绍</h4><p>Returns a full representation of the issue for the given issue key.<br>An issue JSON consists of the issue key, a collection of fields, a link to the workflow transition sub-resource, and (optionally) the HTML rendered values of any fields that support it (e.g. if wiki syntax is enabled for the description or comments).</p><p>The fields param (which can be specified multiple times) gives a comma-separated list of fields to include in the response. This can be used to retrieve a subset of fields. A particular field can be excluded by prefixing it with a minus.</p><p>By default, all (<em>all) fields are returned in this get-issue resource. Note: the default is different when doing a jql search – the default there is just navigable fields (</em>navigable).</p><ul><li>*all - include all fields</li><li>*navigable - include just navigable fields</li><li>summary,comment - include just the summary and comments</li><li>-comment - include everything except comments (the default is *all for get-issue)</li><li>*all,-comment - include everything except comments</li></ul><p>The {@code properties} param is similar to {@code fields} and specifies a comma-separated list of issue properties to include. Unlike {@code fields}, properties are not included by default. To include them all send {@code ?properties=*all}. You can also include only specified properties or exclude some properties with a minus (-) sign.</p><ul><li>{@code *all} - include all properties</li><li>{@code *all, -prop1} - include all properties except {@code prop1}</li><li>{@code prop1, prop1} - include {@code prop1} and {@code prop2} properties</li></ul><p>JIRA will attempt to identify the issue by the issueIdOrKey path parameter. This can be an issue id, or an issue key. If the issue cannot be found via an exact match, JIRA will also look for the issue in a case-insensitive way, or by looking to see if the issue was moved. In either of these cases, the request will proceed as normal (a 302 or other redirect will not be returned). The issue key contained in the response will indicate the current value of issue’s key.</p><p>The expand param is used to include, hidden by default, parts of response. This can be used to include:</p><ul><li>renderedFields - field values in HTML format</li><li>names - display name of each field</li><li>schema - schema for each field which describes a type of the field</li><li>transitions - all possible transitions for the given issue</li><li>operations - all possibles operations which may be applied on issue</li><li>editmeta - information about how each field may be edited. It contains field’s schema as well.</li><li>changelog - history of all changes of the given issue</li><li>versionedRepresentations - REST representations of all fields. Some field may contain more recent versions. RESET representations are numbered. The greatest number always represents the most recent version. It is recommended that the most recent version is used. version for these fields which provide a more recent REST representation. After including versionedRepresentations “fields” field become hidden.</li></ul><h4 id="Request-Options"><a href="#Request-Options" class="headerlink" title="Request Options"></a>Request Options</h4><table><thead><tr><th>Parameter</th><th>Value</th><th>Type</th><th>Style</th><th>Description</th></tr></thead><tbody><tr><td>issueIdOrKey*</td><td></td><td>string</td><td>template</td><td>the issue id or key to update (i.e. JRA-1330)</td></tr><tr><td>fields</td><td></td><td>string</td><td>query</td><td>the list of fields to return for the issue. By default, all fields are returned.</td></tr><tr><td>expand</td><td></td><td>string</td><td>query</td><td></td></tr><tr><td>properties</td><td></td><td>string</td><td>query</td><td>the list of properties to return for the issue. By default no properties are returned.</td></tr><tr><td>updateHistory</td><td></td><td>boolean</td><td>query</td><td></td></tr></tbody></table><h4 id="常用参数说明"><a href="#常用参数说明" class="headerlink" title="常用参数说明"></a>常用参数说明</h4><p>主要说明<code>expand</code>字段</p><ul><li>changelog - 填写参数为<code>changelog</code>时，对应这个接口获取到的数据为<code>JIRA</code>的<code>Issue详情页</code>的<code>活动日志-改动记录</code></li></ul><h4 id="返回结果示例"><a href="#返回结果示例" class="headerlink" title="返回结果示例"></a>返回结果示例</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"expand"</span>: <span class="string">"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations"</span>,</span><br><span class="line">  <span class="attr">"id"</span>: <span class="string">"236714"</span>,</span><br><span class="line">  <span class="attr">"self"</span>: <span class="string">"https://jira.shadow.com/rest/api/2/issue/236714"</span>,</span><br><span class="line">  <span class="attr">"key"</span>: <span class="string">"SHADOW-123123"</span>,</span><br><span class="line">  <span class="attr">"fields"</span>: &#123;</span><br><span class="line">    <span class="attr">"summary"</span>: <span class="string">"测试JIRA单子状态活动日志-改动记录"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"changelog"</span>: &#123;</span><br><span class="line">    <span class="attr">"startAt"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"maxResults"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">"histories"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1126652"</span>,</span><br><span class="line">        <span class="attr">"author"</span>: &#123;</span><br><span class="line">          <span class="attr">"self"</span>: <span class="string">"https://jira.shadow.com/rest/api/2/user?username=shadow"</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"key"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"emailAddress"</span>: <span class="string">"shadow@shadow.com"</span>,</span><br><span class="line">          <span class="attr">"avatarUrls"</span>: &#123;</span><br><span class="line">            <span class="attr">"48x48"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"24x24"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=small&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"16x16"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=xsmall&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"32x32"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=medium&amp;ownerId=shadow&amp;avatarId=11436"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"displayName"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"active"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"timeZone"</span>: <span class="string">"Asia/Shanghai"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"created"</span>: <span class="string">"2020-04-01T17:01:33.000+0800"</span>,</span><br><span class="line">        <span class="attr">"items"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"status"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"jira"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="string">"待受理"</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="string">"10207"</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="string">"待办事项"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1126653"</span>,</span><br><span class="line">        <span class="attr">"author"</span>: &#123;</span><br><span class="line">          <span class="attr">"self"</span>: <span class="string">"https://jira.shadow.com/rest/api/2/user?username=shadow"</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"key"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"emailAddress"</span>: <span class="string">"shadow@shadow.com"</span>,</span><br><span class="line">          <span class="attr">"avatarUrls"</span>: &#123;</span><br><span class="line">            <span class="attr">"48x48"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"24x24"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=small&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"16x16"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=xsmall&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"32x32"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=medium&amp;ownerId=shadow&amp;avatarId=11436"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"displayName"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"active"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"timeZone"</span>: <span class="string">"Asia/Shanghai"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"created"</span>: <span class="string">"2020-04-01T17:01:36.000+0800"</span>,</span><br><span class="line">        <span class="attr">"items"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"status"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"jira"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="string">"10207"</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="string">"待办事项"</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="string">"11404"</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="string">"开发开始"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1126661"</span>,</span><br><span class="line">        <span class="attr">"author"</span>: &#123;</span><br><span class="line">          <span class="attr">"self"</span>: <span class="string">"https://jira.shadow.com/rest/api/2/user?username=shadow"</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"key"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"emailAddress"</span>: <span class="string">"shadow@shadow.com"</span>,</span><br><span class="line">          <span class="attr">"avatarUrls"</span>: &#123;</span><br><span class="line">            <span class="attr">"48x48"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"24x24"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=small&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"16x16"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=xsmall&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"32x32"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=medium&amp;ownerId=shadow&amp;avatarId=11436"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"displayName"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"active"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"timeZone"</span>: <span class="string">"Asia/Shanghai"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"created"</span>: <span class="string">"2020-04-01T17:02:18.000+0800"</span>,</span><br><span class="line">        <span class="attr">"items"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"status"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"jira"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="string">"11404"</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="string">"开发开始"</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="string">"11201"</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="string">"开发结束"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"完工方案"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"custom"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="string">"判断，如果客户没有收整车款，也可以继续开票"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"id"</span>: <span class="string">"1126662"</span>,</span><br><span class="line">        <span class="attr">"author"</span>: &#123;</span><br><span class="line">          <span class="attr">"self"</span>: <span class="string">"https://jira.shadow.com/rest/api/2/user?username=shadow"</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"key"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"emailAddress"</span>: <span class="string">"shadow@shadow.com"</span>,</span><br><span class="line">          <span class="attr">"avatarUrls"</span>: &#123;</span><br><span class="line">            <span class="attr">"48x48"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"24x24"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=small&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"16x16"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=xsmall&amp;ownerId=shadow&amp;avatarId=11436"</span>,</span><br><span class="line">            <span class="attr">"32x32"</span>: <span class="string">"https://jira.shadow.com/secure/useravatar?size=medium&amp;ownerId=shadow&amp;avatarId=11436"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">"displayName"</span>: <span class="string">"shadow"</span>,</span><br><span class="line">          <span class="attr">"active"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="attr">"timeZone"</span>: <span class="string">"Asia/Shanghai"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"created"</span>: <span class="string">"2020-04-01T17:02:25.000+0800"</span>,</span><br><span class="line">        <span class="attr">"items"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"WorklogId"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"jira"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="string">"30777"</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="string">"30777"</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="literal">null</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"timeestimate"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"jira"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="string">"0"</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="string">"0"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"timespent"</span>,</span><br><span class="line">            <span class="attr">"fieldtype"</span>: <span class="string">"jira"</span>,</span><br><span class="line">            <span class="attr">"from"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"fromString"</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">"to"</span>: <span class="string">"7200"</span>,</span><br><span class="line">            <span class="attr">"toString"</span>: <span class="string">"7200"</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用JQL时间段精确搜索"><a href="#使用JQL时间段精确搜索" class="headerlink" title="使用JQL时间段精确搜索"></a>使用JQL时间段精确搜索</h3><p>示例：<code>project = CARSERVICE AND issuetype = 缺陷 AND priority in (P0, P1) AND createdDate &gt;= &quot;2020-11-20 01:00&quot; AND createdDate &lt;= &quot;2020-11-20 11:08&quot; ORDER BY created DESC</code><br>用于时间段精确搜索的字段<code>key</code>叫<code>createDate</code>（创建时间精确搜索），用于更新时间精确搜索的字段<code>key</code>叫<code>updatedDate</code>。<br>其中<code>createDate</code>或者<code>updatedDate</code>，正确的日期格式是：<code>yyyy/MM/dd HH:mm</code>，<code>yyyy-MM-dd HH:mm</code>，<code>yyyy/MM/dd</code>，<code>yyyy-MM-dd</code>，或者是一个时间段<code>-5d</code>，<code>4w 2d</code>。</p><h3 id="获取Issue的备注详情列表"><a href="#获取Issue的备注详情列表" class="headerlink" title="获取Issue的备注详情列表"></a>获取Issue的备注详情列表</h3><p>接口名：<code>https://jira.shadow.com/rest/api/2/issue/{issueIdOrKey}/comment</code></p><h4 id="接口介绍-1"><a href="#接口介绍-1" class="headerlink" title="接口介绍"></a>接口介绍</h4><p>Returns all comments for an issue.<br>Results can be ordered by the “created” field which means the date a comment was added.</p><h4 id="Request-Options-1"><a href="#Request-Options-1" class="headerlink" title="Request Options"></a>Request Options</h4><table><thead><tr><th>Parameter</th><th>Value</th><th>Type</th><th>Style</th><th>Description</th></tr></thead><tbody><tr><td>issueIdOrKey*</td><td></td><td>string</td><td>template</td><td>to get comments for</td></tr><tr><td>startAt</td><td></td><td>long</td><td>query</td><td>the page offset, if not specified then defaults to 0</td></tr><tr><td>maxResults</td><td></td><td>int</td><td>query</td><td>how many results on the page should be included. Defaults to 50.</td></tr><tr><td>orderBy</td><td></td><td>string</td><td>query</td><td>ordering of the results.</td></tr><tr><td>expand</td><td></td><td>string</td><td>query</td><td>optional flags: renderedBody (provides body rendered in HTML)</td></tr></tbody></table><h3 id="获取筛选器详情"><a href="#获取筛选器详情" class="headerlink" title="获取筛选器详情"></a>获取筛选器详情</h3><p>接口名：<code>https://jira.shadow.com/rest/api/2/filter/{id}</code></p><h4 id="接口介绍-2"><a href="#接口介绍-2" class="headerlink" title="接口介绍"></a>接口介绍</h4><p>Returns a filter given an id<br>从<code>Response</code>中可以拿到筛选器对应的<code>JQL</code>条件</p><h4 id="Request-Options-2"><a href="#Request-Options-2" class="headerlink" title="Request Options"></a>Request Options</h4><table><thead><tr><th>Parameter</th><th>Value</th><th>Type</th><th>Style</th><th>Description</th></tr></thead><tbody><tr><td>id*</td><td></td><td>long</td><td>template</td><td>the id of the filter being looked up</td></tr><tr><td>expand</td><td></td><td>string</td><td>query</td><td>the parameters to expand</td></tr></tbody></table><h3 id="获取Issue的列表"><a href="#获取Issue的列表" class="headerlink" title="获取Issue的列表"></a>获取Issue的列表</h3><p>接口名：<code>https://jira.shadow.com/rest/api/2/search</code></p><h4 id="接口介绍-3"><a href="#接口介绍-3" class="headerlink" title="接口介绍"></a>接口介绍</h4><p>Searches for issues using JQL.<br><strong>Sorting</strong> the jql parameter is a full JQL expression, and includes an ORDER BY clause.</p><p>The fields param (which can be specified multiple times) gives a comma-separated list of fields to include in the response. This can be used to retrieve a subset of fields. A particular field can be excluded by prefixing it with a minus.</p><p>By default, only navigable (<em>navigable) fields are returned in this search resource. Note: the default is different in the get-issue resource – the default there all fields (</em>all).</p><ul><li>*all - include all fields</li><li>*navigable - include just navigable fields</li><li>summary,comment - include just the summary and comments</li><li>-description - include navigable fields except the description (the default is *navigable for search)</li><li><em>all,-comment - include everything except comments<br>*</em>GET vs POST**: If the JQL query is too large to be encoded as a query param you should instead POST to this resource.</li></ul><p><strong>Expanding Issues in the Search Result</strong>: It is possible to expand the issues returned by directly specifying the expansion on the expand parameter passed in to this resources.</p><p>For instance, to expand the “changelog” for all the issues on the search result, it is neccesary to specify “changelog” as one of the values to expand.</p><h4 id="Request-Options-3"><a href="#Request-Options-3" class="headerlink" title="Request Options"></a>Request Options</h4><table><thead><tr><th>Parameter</th><th>Value</th><th>Type</th><th>Style</th><th>Description</th></tr></thead><tbody><tr><td>jql</td><td></td><td>string</td><td>query</td><td>a JQL query string</td></tr><tr><td>startAt</td><td></td><td>int</td><td>query</td><td>the index of the first issue to return (0-based)</td></tr><tr><td>maxResults</td><td></td><td>int</td><td>query</td><td>the maximum number of issues to return (defaults to 50). The maximum allowable value is dictated by the JIRA property ‘jira.search.views.default.max’. If you specify a value that is higher than this number, your search results will be truncated.</td></tr><tr><td>validateQuery</td><td></td><td>boolean</td><td>query</td><td>whether to validate the JQL query</td></tr><tr><td>fields</td><td></td><td>string</td><td>query</td><td>the list of fields to return for each issue. By default, all navigable fields are returned.</td></tr><tr><td>expand</td><td></td><td>string</td><td>query</td><td>A comma-separated list of the parameters to expand.</td></tr></tbody></table><h3 id="模糊搜索，获取自定义字段的相关信息"><a href="#模糊搜索，获取自定义字段的相关信息" class="headerlink" title="模糊搜索，获取自定义字段的相关信息"></a>模糊搜索，获取自定义字段的相关信息</h3><p>接口名：<code>https://jira.shadow.com/rest/api/2/customFields</code></p><h4 id="Request-Options-4"><a href="#Request-Options-4" class="headerlink" title="Request Options"></a>Request Options</h4><table><thead><tr><th>Parameter</th><th>Value</th><th>Type</th><th>Style</th><th>Description</th></tr></thead><tbody><tr><td>startAt</td><td></td><td>long</td><td>query</td><td></td></tr><tr><td>maxResults</td><td></td><td>int</td><td>query</td><td></td></tr><tr><td>search</td><td></td><td>string</td><td>query</td><td></td></tr></tbody></table><h4 id="返回结果示例-1"><a href="#返回结果示例-1" class="headerlink" title="返回结果示例"></a>返回结果示例</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"maxResults"</span>: <span class="number">50</span>,</span><br><span class="line">  <span class="attr">"startAt"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"isLast"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"values"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="string">"customfield_17601"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"端"</span>,</span><br><span class="line">      <span class="attr">"description"</span>: <span class="string">"&lt;p&gt;标记Issue是在哪个端上被发现的&lt;/p&gt;"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"选择列表 (级联)"</span>,</span><br><span class="line">      <span class="attr">"searcherKey"</span>: <span class="string">"端"</span>,</span><br><span class="line">      <span class="attr">"self"</span>: <span class="string">"https://jira.shadow.com/rest/api/2/customFields/customfield_17601"</span>,</span><br><span class="line">      <span class="attr">"numericId"</span>: <span class="number">17601</span>,</span><br><span class="line">      <span class="attr">"isLocked"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"isManaged"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"isAllProjects"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"projectsCount"</span>: <span class="number">8</span>,</span><br><span class="line">      <span class="attr">"screensCount"</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;获取Issue详情&quot;&gt;&lt;a href=&quot;#获取Issue详情&quot; class=&quot;headerlink&quot; title=&quot;获取Issue详情&quot;&gt;&lt;/a&gt;获取Issue详情&lt;/h3&gt;&lt;p&gt;接口名：&lt;code&gt;https://jira.shadow.com/rest/api/2/issue/{issueIdOrKey}&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Jira" scheme="http://shadow000902.space/categories/Jira/"/>
    
    
      <category term="jira" scheme="http://shadow000902.space/tags/jira/"/>
    
      <category term="api" scheme="http://shadow000902.space/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>Jira问题列表转图片钉钉发送Python实现</title>
    <link href="http://shadow000902.space/2020/10/14/2020-10-14-Ding-Jira-Issues-List-Report/"/>
    <id>http://shadow000902.space/2020/10/14/2020-10-14-Ding-Jira-Issues-List-Report/</id>
    <published>2020-10-14T10:43:13.000Z</published>
    <updated>2023-04-20T08:48:51.466Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主要用到的开源API"><a href="#主要用到的开源API" class="headerlink" title="主要用到的开源API"></a>主要用到的开源API</h3><ol><li><p>公司内部JIRA的API文档地址：<a href="https://jira.shadow.com/plugins/servlet/restbrowser#/" target="_blank" rel="noopener">https://jira.shadow.com/plugins/servlet/restbrowser#/</a></p></li><li><p>JIRA官方提供的API文档地址：<a href="https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/" target="_blank" rel="noopener">https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/</a><br>官方已经出到第三个版本，使用时需要根据自己公司使用的API版本来进行调用<br>官方提供了各个语言的调用示例，可以进行参考</p></li><li><p>图床服务的API文档地址：<a href="https://doc.sm.ms/" target="_blank" rel="noopener">https://doc.sm.ms/</a><br>如果自己公司有影像件服务的话，可以传到公司的oss上进行保存</p><a id="more"></a></li></ol><h3 id="具体使用到的API"><a href="#具体使用到的API" class="headerlink" title="具体使用到的API"></a>具体使用到的API</h3><ol><li>获取JIRA筛选器详情：<a href="https://jira.shadow.com/rest/api/2/filter/{id" target="_blank" rel="noopener">https://jira.shadow.com/rest/api/2/filter/{id</a>}</li><li>获取问题列表：<a href="https://jira.shadow.com/rest/api/2/search" target="_blank" rel="noopener">https://jira.shadow.com/rest/api/2/search</a></li><li>上传图片到图床：<a href="https://sm.ms/api/v2/upload" target="_blank" rel="noopener">https://sm.ms/api/v2/upload</a></li></ol><h3 id="脚本主要方法说明"><a href="#脚本主要方法说明" class="headerlink" title="脚本主要方法说明"></a>脚本主要方法说明</h3><ol><li><p><code>getIssuesList()</code> 方法获取问题列表<br>首先调用<code>filter</code>接口，获取到筛选器的详情，从中取出<code>jql</code>字段值<br>然后调用<code>search</code>接口，获取问题列表</p></li><li><p><code>getShowWords()</code> 方法获取问题列表中所需的字段，并构建新的<code>jsonList</code><br>从原有复杂的问题列表的json返回接口中，提取出所需的字段</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"类型"</span>: <span class="string">"缺陷"</span>,</span><br><span class="line">        <span class="attr">"关键字"</span>: <span class="string">"ZSY-844"</span>,</span><br><span class="line">        <span class="attr">"链接"</span>: <span class="string">"https://jira.shadow.com/browse/ZSY-844"</span>,</span><br><span class="line">        <span class="attr">"概要"</span>: <span class="string">"【H5】工单失败"</span>,</span><br><span class="line">        <span class="attr">"报告人"</span>: <span class="string">"XX「测试」"</span>,</span><br><span class="line">        <span class="attr">"经办人"</span>: <span class="string">"XX「开发」"</span>,</span><br><span class="line">        <span class="attr">"优先级"</span>: <span class="string">"P1"</span>,</span><br><span class="line">        <span class="attr">"状态"</span>: <span class="string">"Close"</span>,</span><br><span class="line">        <span class="attr">"创建时间"</span>: <span class="string">"2020-10-12 16:37:23"</span>,</span><br><span class="line">        <span class="attr">"更新时间"</span>: <span class="string">"2020-10-12 19:03:20"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"类型"</span>: <span class="string">"缺陷"</span>,</span><br><span class="line">        <span class="attr">"关键字"</span>: <span class="string">"ZSY-843"</span>,</span><br><span class="line">        <span class="attr">"链接"</span>: <span class="string">"https://jira.shadow.com/browse/ZSY-843"</span>,</span><br><span class="line">        <span class="attr">"概要"</span>: <span class="string">"【H5】未显示指定门店"</span>,</span><br><span class="line">        <span class="attr">"报告人"</span>: <span class="string">"XX「测试」"</span>,</span><br><span class="line">        <span class="attr">"经办人"</span>: <span class="string">"XX「开发」"</span>,</span><br><span class="line">        <span class="attr">"优先级"</span>: <span class="string">"P3"</span>,</span><br><span class="line">        <span class="attr">"状态"</span>: <span class="string">"Close"</span>,</span><br><span class="line">        <span class="attr">"创建时间"</span>: <span class="string">"2020-10-12 16:02:58"</span>,</span><br><span class="line">        <span class="attr">"更新时间"</span>: <span class="string">"2020-10-12 17:55:15"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p><code>json2Excel()</code> 方法把第二点中得到的json转换成<code>Excel</code>，返回写入内容的<code>Excel</code>文件</p></li><li><p><code>excel2Image.py</code>自定义类中的<code>excel_html()</code> 方法把<code>Excel</code>文件转换为<code>HTML</code>文件</p></li><li><p><code>excel2Image.py</code>自定义类中的<code>html_image()</code> 方法把<code>HTML</code>文件转换为<code>.png</code>格式的图片</p></li><li><p><code>getBugImageUrl()</code> 方法把图片上传到图床服务，并获取到对应的图片<code>URL</code></p></li><li><p><code>sendMarkdownDing()</code> 方法以markdown格式组织消息体，发送钉钉通知</p></li></ol><h3 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h3><h4 id="excel2Image-py自定义类文件"><a href="#excel2Image-py自定义类文件" class="headerlink" title="excel2Image.py自定义类文件"></a><code>excel2Image.py</code>自定义类文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> imgkit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ReportImage -&gt; report convert include multiple sheets into pictures</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReportImage</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># excel_html -&gt; convert excel include multiple sheets into multiple html file</span></span><br><span class="line">    <span class="comment"># excel_file -&gt; file</span></span><br><span class="line">    <span class="comment"># html_path -&gt; path</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">excel_html</span><span class="params">(excel_file, html_path)</span>:</span></span><br><span class="line">        html_list = []</span><br><span class="line">        excel_obj = pd.ExcelFile(excel_file)</span><br><span class="line">        sheet_list = excel_obj.sheet_names</span><br><span class="line">        index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> sheet_list:</span><br><span class="line">            html_file = html_path + i + <span class="string">".html"</span></span><br><span class="line">            excel_data = excel_obj.parse(excel_obj.sheet_names[index])</span><br><span class="line">            <span class="keyword">with</span> codecs.open(html_file, <span class="string">'w'</span>, <span class="string">'utf-8'</span>) <span class="keyword">as</span> html:</span><br><span class="line">                html.write(excel_data.to_html(header=<span class="literal">True</span>, index=<span class="literal">True</span>))</span><br><span class="line">            html_list.append(html_file)</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> html_list</span><br><span class="line"></span><br><span class="line">    <span class="comment"># html_image -&gt; convert htmls into pictures file</span></span><br><span class="line">    <span class="comment"># html_list -&gt; list</span></span><br><span class="line">    <span class="comment"># image_path -&gt; path</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">html_image</span><span class="params">(html_list, image_path)</span>:</span></span><br><span class="line">        index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> html_list:</span><br><span class="line">            img_obj = image_path + str(index) + <span class="string">".png"</span></span><br><span class="line">            <span class="keyword">with</span> open(i, <span class="string">'r'</span>) <span class="keyword">as</span> html_file:</span><br><span class="line">                <span class="comment"># options内的参数，具体可以通过命令  `wkhtmltoimage --extended-help`  获取到详细的信息</span></span><br><span class="line">                imgkit.from_file(html_file, img_obj, options=&#123;<span class="string">"encoding"</span>: <span class="string">"UTF-8"</span>, <span class="string">"width"</span>: <span class="number">1920</span>, <span class="string">"quality"</span>: <span class="number">100</span>&#125;)</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    html_list = ReportImage.excel_html(<span class="string">"data.xlsx"</span>, <span class="string">"./"</span>)</span><br><span class="line">    ReportImage.html_image(html_list, <span class="string">"./"</span>)</span><br></pre></td></tr></table></figure><h4 id="jiraSearch-py脚本实现文件"><a href="#jiraSearch-py脚本实现文件" class="headerlink" title="jiraSearch.py脚本实现文件"></a><code>jiraSearch.py</code>脚本实现文件</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># This code sample uses the 'requests' library:</span></span><br><span class="line"><span class="comment"># http://docs.python-requests.org</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> tablib</span><br><span class="line"><span class="keyword">from</span> requests.auth <span class="keyword">import</span> HTTPBasicAuth</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> excel2Image</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">执行方式：python jiraSearch.py webhook mobiles</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">WEBHOOK_TOKEN = str(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    MOBILES = str(sys.argv[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    MOBILES = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">mobiles = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> MOBILES:</span><br><span class="line">    atMobiles = MOBILES.split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">for</span> mobile <span class="keyword">in</span> atMobiles:</span><br><span class="line">        mobiles += <span class="string">"@"</span> + mobile</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    atMobiles = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getIssuesList</span><span class="params">()</span>:</span></span><br><span class="line">    issuesSearchUrl = <span class="string">"https://jira.shadow.com/rest/api/2/search"</span></span><br><span class="line">    filterUrl = <span class="string">"https://jira.shadow.com/rest/api/2/filter/26517"</span></span><br><span class="line">    auth = HTTPBasicAuth(<span class="string">"taoyi"</span>, <span class="string">"XXXXXXXXXXXXXXXX"</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"Accept"</span>: <span class="string">"application/json"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    filterResp = requests.request(</span><br><span class="line">        <span class="string">"GET"</span>,</span><br><span class="line">        filterUrl,</span><br><span class="line">        headers=headers,</span><br><span class="line">        auth=auth</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    jql = filterResp.json()[<span class="string">'jql'</span>]</span><br><span class="line"></span><br><span class="line">    query = &#123;<span class="string">'jql'</span>: jql&#125;</span><br><span class="line"></span><br><span class="line">    response = requests.request(</span><br><span class="line">        <span class="string">"GET"</span>,</span><br><span class="line">        issuesSearchUrl,</span><br><span class="line">        headers=headers,</span><br><span class="line">        params=query,</span><br><span class="line">        auth=auth</span><br><span class="line">    )</span><br><span class="line">    issuesList = response.json()[<span class="string">'issues'</span>]</span><br><span class="line">    <span class="comment"># print(issuesList)</span></span><br><span class="line">    <span class="keyword">return</span> issuesList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getShowWords</span><span class="params">()</span>:</span></span><br><span class="line">    issueWords = []</span><br><span class="line">    issuesList = getIssuesList()</span><br><span class="line">    <span class="keyword">for</span> issue <span class="keyword">in</span> issuesList:</span><br><span class="line">        issueWords.append(&#123;<span class="string">'类型'</span>: issue[<span class="string">'fields'</span>][<span class="string">'issuetype'</span>][<span class="string">'name'</span>],</span><br><span class="line">                           <span class="string">'关键字'</span>: issue[<span class="string">'key'</span>],</span><br><span class="line">                           <span class="string">'概要'</span>: issue[<span class="string">'fields'</span>][<span class="string">'summary'</span>],</span><br><span class="line">                           <span class="string">'报告人'</span>: issue[<span class="string">'fields'</span>][<span class="string">'reporter'</span>][<span class="string">'displayName'</span>],</span><br><span class="line">                           <span class="string">'经办人'</span>: issue[<span class="string">'fields'</span>][<span class="string">'assignee'</span>][<span class="string">'displayName'</span>],</span><br><span class="line">                           <span class="string">'优先级'</span>: issue[<span class="string">'fields'</span>][<span class="string">'priority'</span>][<span class="string">'name'</span>],</span><br><span class="line">                           <span class="string">'状态'</span>: issue[<span class="string">'fields'</span>][<span class="string">'status'</span>][<span class="string">'name'</span>],</span><br><span class="line">                           <span class="string">'创建时间'</span>: issue[<span class="string">'fields'</span>][<span class="string">'created'</span>].replace(<span class="string">'T'</span>, <span class="string">' '</span>).split(<span class="string">'.'</span>)[<span class="number">0</span>],</span><br><span class="line">                           <span class="string">'更新时间'</span>: issue[<span class="string">'fields'</span>][<span class="string">'updated'</span>].replace(<span class="string">'T'</span>, <span class="string">' '</span>).split(<span class="string">'.'</span>)[<span class="number">0</span>]&#125;)</span><br><span class="line"></span><br><span class="line">    print(issueWords)</span><br><span class="line">    <span class="keyword">return</span> issueWords</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json2Excel</span><span class="params">()</span>:</span></span><br><span class="line">    rows = getShowWords()</span><br><span class="line">    <span class="comment"># 将json中的key作为header, 也可以自定义header（列名）</span></span><br><span class="line">    header = tuple([i <span class="keyword">for</span> i <span class="keyword">in</span> rows[<span class="number">0</span>].keys()])</span><br><span class="line">    <span class="comment"># print('header',header)</span></span><br><span class="line">    data = []</span><br><span class="line">    <span class="comment"># 循环里面的字典，将value作为数据写入进去</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        body = []</span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> row.values():</span><br><span class="line">            body.append(v)</span><br><span class="line">        data.append(tuple(body))</span><br><span class="line">    <span class="comment"># print('data',data)</span></span><br><span class="line">    data = tablib.Dataset(*data, headers=header)</span><br><span class="line">    print(data)</span><br><span class="line">    open(<span class="string">'data.xlsx'</span>, <span class="string">'wb'</span>).write(data.xlsx)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getBugImageUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'https://sm.ms/api/v2/upload'</span></span><br><span class="line">    headers = &#123;<span class="string">'Authorization'</span>: <span class="string">'dq2u9BXgV2AzsZm7UUzxz8heTxl4ojmM'</span>&#125;</span><br><span class="line">    file_obj = open(<span class="string">'./0.png'</span>, <span class="string">'rb'</span>)</span><br><span class="line">    file = &#123;<span class="string">'smfile'</span>: file_obj&#125;  <span class="comment"># 参数名称必须为smfile</span></span><br><span class="line">    response = requests.post(url, files=file, headers=headers)</span><br><span class="line">    print(response.json())</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> response.json()[<span class="string">'success'</span>]:</span><br><span class="line">        bugImageUrl = response.json()[<span class="string">'images'</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        bugImageUrl = response.json()[<span class="string">'data'</span>][<span class="string">'url'</span>]</span><br><span class="line">    print(bugImageUrl)</span><br><span class="line">    <span class="keyword">return</span> bugImageUrl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 钉钉自定义机器人文档地址：https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendMarkdownDing</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1、构建url</span></span><br><span class="line">    webhook = <span class="string">"https://oapi.dingtalk.com/robot/send?access_token="</span> + WEBHOOK_TOKEN</span><br><span class="line">    <span class="comment"># 2、构建一下请求头部</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">        <span class="string">"Charset"</span>: <span class="string">"UTF-8"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 3、构建请求数据</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"msgtype"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">        <span class="string">"markdown"</span>: &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"未解决BUG列表，请及时处理！"</span>,</span><br><span class="line">            <span class="string">"text"</span>: <span class="string">'#### **未解决BUG列表，请及时处理！**\n\n'</span></span><br><span class="line">                    <span class="string">' &gt;https://jira.shadow.com/issues/?filter=26517\n\n'</span></span><br><span class="line">                    <span class="string">' &gt;%s\n\n'</span> % mobiles</span><br><span class="line">                    + <span class="string">'![]('</span> + getBugImageUrl() + <span class="string">')'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"at"</span>: &#123;</span><br><span class="line">            <span class="string">"atMobiles"</span>: atMobiles,</span><br><span class="line">            <span class="string">"isAtAll"</span>: <span class="literal">False</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print(data)</span><br><span class="line">    <span class="comment"># 4、对请求的数据进行json封装</span></span><br><span class="line">    sendData = json.dumps(data)  <span class="comment"># 将字典类型数据转化为json格式</span></span><br><span class="line">    sendData = sendData.encode(<span class="string">"utf-8"</span>)  <span class="comment"># python3的Request要求data为byte类型</span></span><br><span class="line">    <span class="comment"># 5、发送请求</span></span><br><span class="line">    resp = requests.post(url=webhook, data=sendData, headers=header)</span><br><span class="line">    <span class="comment"># print(resp.json())</span></span><br><span class="line">    <span class="keyword">return</span> resp.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    json2Excel()</span><br><span class="line">    html_list = excel2Image.ReportImage.excel_html(<span class="string">"data.xlsx"</span>, <span class="string">"./"</span>)</span><br><span class="line">    excel2Image.ReportImage.html_image(html_list, <span class="string">"./"</span>)</span><br><span class="line">    sendMarkdownDing()</span><br></pre></td></tr></table></figure><h3 id="最后图片效果如下"><a href="#最后图片效果如下" class="headerlink" title="最后图片效果如下"></a>最后图片效果如下</h3><img src="/2020/10/14/2020-10-14-Ding-Jira-Issues-List-Report/%E7%BC%BA%E9%99%B7%E5%9B%BE.png" title="缺陷图">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;主要用到的开源API&quot;&gt;&lt;a href=&quot;#主要用到的开源API&quot; class=&quot;headerlink&quot; title=&quot;主要用到的开源API&quot;&gt;&lt;/a&gt;主要用到的开源API&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;公司内部JIRA的API文档地址：&lt;a href=&quot;https://jira.shadow.com/plugins/servlet/restbrowser#/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://jira.shadow.com/plugins/servlet/restbrowser#/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;JIRA官方提供的API文档地址：&lt;a href=&quot;https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/&lt;/a&gt;&lt;br&gt;官方已经出到第三个版本，使用时需要根据自己公司使用的API版本来进行调用&lt;br&gt;官方提供了各个语言的调用示例，可以进行参考&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;图床服务的API文档地址：&lt;a href=&quot;https://doc.sm.ms/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://doc.sm.ms/&lt;/a&gt;&lt;br&gt;如果自己公司有影像件服务的话，可以传到公司的oss上进行保存&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="http://shadow000902.space/categories/Tools/"/>
    
    
      <category term="python" scheme="http://shadow000902.space/tags/python/"/>
    
      <category term="jira" scheme="http://shadow000902.space/tags/jira/"/>
    
  </entry>
  
  <entry>
    <title>Allure报告结果钉钉发送Python实现</title>
    <link href="http://shadow000902.space/2020/10/10/2020-10-10-Ding-Allure-Detail-Report/"/>
    <id>http://shadow000902.space/2020/10/10/2020-10-10-Ding-Allure-Detail-Report/</id>
    <published>2020-10-10T04:33:01.000Z</published>
    <updated>2023-04-20T08:48:51.460Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Jenkins中的Allure插件，增加Owner插件"><a href="#Jenkins中的Allure插件，增加Owner插件" class="headerlink" title="Jenkins中的Allure插件，增加Owner插件"></a>Jenkins中的Allure插件，增加Owner插件</h4><ol><li><p>Jenkins中配置Allure插件，目录为<code>System Configuation -&gt; Global Tool Configuration</code>，从中找到<code>Allure Commandline</code></p><img src="/2020/10/10/2020-10-10-Ding-Allure-Detail-Report/AllureCommandline.png" title="AllureCommandline"><a id="more"></a></li><li><p>下载<code>owners-failed-plugin</code>插件<br><a href="https://pan.baidu.com/s/1qJF5V2Eb8w946DgYtgNUkA" target="_blank" rel="noopener">插件地址</a> 提取码: ifqw</p></li><li><p>把插件加入<code>Allure Commandline</code>的安装目录中<br>安装完插件后，可以在Jenkins任务的执行机上，也就是jenkins任务真正执行的机器上，会有一个<code>workspace/tools/ru.yandex.qatools.allure.jenkins.tools.AllureCommandlineInstallation/Allure_Commandline/plugins</code>目录，这个<code>workspace</code>也就是Jenkins的一个工作空间<br><code>plugins</code>目录下，就是<code>Allure</code>插件自带的一些插件<br>我们把第二步下载的插件解压后的文件夹，放到该目录下，<code>owners-failed-plugin</code>展示如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shadow @ domain in ~/jenkins_slave/workspace/tools/ru.yandex.qatools.allure.jenkins.tools.AllureCommandlineInstallation/Allure_Commandline/plugins [15:55:35] </span></span><br><span class="line">$ ll</span><br><span class="line">total 48K</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 behaviors-plugin</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 custom-logo-plugin</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 jira-plugin</span><br><span class="line">drwxrwxr-x 2 shadow shadow 4.0K Sep  9 14:45 junit-xml-plugin</span><br><span class="line">drwxr-xr-x 3 shadow shadow 4.0K Sep 10 09:31 owners-failed-plugin</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 packages-plugin</span><br><span class="line">-rwxrwxr-x 1 shadow shadow   85 Jul  7 10:18 README.txt</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 screen-diff-plugin</span><br><span class="line">drwxrwxr-x 2 shadow shadow 4.0K Sep  9 14:45 trx-plugin</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 xctest-plugin</span><br><span class="line">drwxrwxr-x 3 shadow shadow 4.0K Sep  9 14:45 xray-plugin</span><br><span class="line">drwxrwxr-x 2 shadow shadow 4.0K Sep  9 14:45 xunit-xml-plugin</span><br></pre></td></tr></table></figure><p>然后需要退一层目录，把插件的配置写入配置文件中，不然就无法被调用到</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> shadow @ domain <span class="keyword">in</span> ~/jenkins_slave/workspace/tools/ru.yandex.qatools.allure.jenkins.tools.AllureCommandlineInstallation/Allure_Commandline/plugins [15:55:51] </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ..</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> shadow @ domain <span class="keyword">in</span> ~/jenkins_slave/workspace/tools/ru.yandex.qatools.allure.jenkins.tools.AllureCommandlineInstallation/Allure_Commandline [16:03:19] </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ll</span></span><br><span class="line">total 16K</span><br><span class="line">drwxrwxr-x  2 shadow shadow 4.0K Sep  9 14:45 bin</span><br><span class="line">drwxrwxr-x  2 shadow shadow 4.0K Sep 10 09:32 config</span><br><span class="line">drwxrwxr-x  3 shadow shadow 4.0K Sep 10 09:06 lib</span><br><span class="line">drwxrwxr-x 13 shadow shadow 4.0K Sep 10 09:31 plugins</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> shadow @ domain <span class="keyword">in</span> ~/jenkins_slave/workspace/tools/ru.yandex.qatools.allure.jenkins.tools.AllureCommandlineInstallation/Allure_Commandline [16:03:20] </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> config </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> shadow @ domain <span class="keyword">in</span> ~/jenkins_slave/workspace/tools/ru.yandex.qatools.allure.jenkins.tools.AllureCommandlineInstallation/Allure_Commandline/config [16:03:25] </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ll</span></span><br><span class="line">total 8.0K</span><br><span class="line">-rwxrwxr-x 1 shadow shadow   0 Jul  7 10:18 allure-cucumber.yml</span><br><span class="line">-rwxrwxr-x 1 shadow shadow  46 Jul  7 10:18 allure-junit.yml</span><br><span class="line">-rwxrwxr-x 1 shadow shadow 205 Sep 10 09:32 allure.yml</span><br></pre></td></tr></table></figure><p>编辑allure.yml文件，写入<code>owners-failed-plugin</code>配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">junit-xml-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xunit-xml-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">trx-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">behaviors-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">packages-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">screen-diff-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xctest-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jira-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xray-plugin</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">owners-failed-plugin</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="读取报告信息"><a href="#读取报告信息" class="headerlink" title="读取报告信息"></a>读取报告信息</h4><ul><li>报告总体信息：”<a href="http://jenkins.shadow.com/job/&quot;" target="_blank" rel="noopener">http://jenkins.shadow.com/job/&quot;</a> + JOB_NAME + “/allure/widgets/summary.json”</li><li>Owner具体信息：”<a href="http://jenkins.shadow.com/job/&quot;" target="_blank" rel="noopener">http://jenkins.shadow.com/job/&quot;</a> + JOB_NAME + “/allure/data/owners.json”</li></ul><h4 id="脚本主要方法说明"><a href="#脚本主要方法说明" class="headerlink" title="脚本主要方法说明"></a>脚本主要方法说明</h4><ol><li><p><code>getSummary()</code> 方法返回总体信息</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">108</span>,</span><br><span class="line">    <span class="attr">"broken"</span>: <span class="number">25</span>,</span><br><span class="line">    <span class="attr">"skipped"</span>: <span class="number">196</span>,</span><br><span class="line">    <span class="attr">"passed"</span>: <span class="number">1055</span>,</span><br><span class="line">    <span class="attr">"unknown"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1384</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>getResultDetails()</code> 方法返回Owner具体信息，并对异常数据做清理</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"张三"</span>,</span><br><span class="line">        <span class="attr">"children"</span>: [&#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"passed"</span>&#125;, &#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"failed"</span>&#125;, &#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"broken"</span>&#125;, &#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"skipped"</span>&#125;],</span><br><span class="line">        <span class="attr">"uid"</span>: <span class="string">"e1aaed47c8239f38d3450e9dfd3e7646"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"name"</span>: <span class="string">"李四"</span>,</span><br><span class="line">        <span class="attr">"children"</span>: [&#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"passed"</span>&#125;, &#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"failed"</span>&#125;, &#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"broken"</span>&#125;, &#123;<span class="attr">""</span>: <span class="string">""</span>, <span class="attr">"status"</span>: <span class="string">"skipped"</span>&#125;],</span><br><span class="line">        <span class="attr">"uid"</span>: <span class="string">"90e00f4c3e58fc50b3766d36fe294203"</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p><code>getPersonCounts()</code> 方法返回每个Owner的具体用例数据</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"张三"</span>,</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">111</span>,</span><br><span class="line">    <span class="attr">"passed"</span>: <span class="number">110</span>,</span><br><span class="line">    <span class="attr">"broken"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"skipped"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"李四"</span>,</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">56</span>,</span><br><span class="line">    <span class="attr">"passed"</span>: <span class="number">56</span>,</span><br><span class="line">    <span class="attr">"broken"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"skipped"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p><code>spillDingText()</code> 方法返回钉钉发送消息体中的<code>text</code></p></li><li><p><code>sendMarkdownDing()</code> 方法以markdown格式组织消息体，发送钉钉通知</p></li></ol><h4 id="完整脚本"><a href="#完整脚本" class="headerlink" title="完整脚本"></a>完整脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">执行方式：python sendDingSummary.py Jenkins_Job webhook mobiles</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jenkins任务的名称</span></span><br><span class="line">JOB_NAME = str(sys.argv[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只需要最后那个Token</span></span><br><span class="line">WEBHOOK_TOKEN = str(sys.argv[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手机号用英文逗号分隔，可以不传</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    MOBILES = str(sys.argv[<span class="number">3</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    MOBILES = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">reportUrl = <span class="string">'http://jenkins.shadow.com/job/'</span> + JOB_NAME + <span class="string">'/allure/'</span></span><br><span class="line"></span><br><span class="line">mobiles = <span class="string">""</span></span><br><span class="line"><span class="keyword">if</span> MOBILES:</span><br><span class="line">    atMobiles = MOBILES.split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">for</span> mobile <span class="keyword">in</span> atMobiles:</span><br><span class="line">        mobiles += <span class="string">"@"</span> + mobile</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    atMobiles = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSummary</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://jenkins.shadow.com/job/'</span> + JOB_NAME + <span class="string">'/allure/widgets/summary.json'</span></span><br><span class="line">    summary = requests.get(url).json()[<span class="string">'statistic'</span>]</span><br><span class="line">    print(summary)</span><br><span class="line">    <span class="keyword">return</span> summary</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getResultDetails</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://jenkins.shadow.com/job/'</span> + JOB_NAME + <span class="string">'/allure/data/owners.json'</span></span><br><span class="line">    resultDetails = requests.get(url).json()[<span class="string">'children'</span>]</span><br><span class="line">    <span class="keyword">for</span> resultDetail <span class="keyword">in</span> resultDetails:</span><br><span class="line">        <span class="keyword">if</span> resultDetail.get(<span class="string">"children"</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            resultDetails.remove(resultDetail)</span><br><span class="line"></span><br><span class="line">    print(resultDetails)</span><br><span class="line">    <span class="keyword">return</span> resultDetails</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPersonCounts</span><span class="params">()</span>:</span></span><br><span class="line">    resultDetails = getResultDetails()</span><br><span class="line">    personCounts = []</span><br><span class="line">    <span class="keyword">for</span> resultDetail <span class="keyword">in</span> resultDetails:</span><br><span class="line">        passed = <span class="number">0</span></span><br><span class="line">        broken = <span class="number">0</span></span><br><span class="line">        skipped = <span class="number">0</span></span><br><span class="line">        failed = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> detail <span class="keyword">in</span> resultDetail[<span class="string">'children'</span>]:</span><br><span class="line">            <span class="keyword">if</span> detail[<span class="string">'status'</span>] == <span class="string">'passed'</span>:</span><br><span class="line">                passed += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> detail[<span class="string">'status'</span>] == <span class="string">'broken'</span>:</span><br><span class="line">                broken += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> detail[<span class="string">'status'</span>] == <span class="string">'skipped'</span>:</span><br><span class="line">                skipped += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> detail[<span class="string">'status'</span>] == <span class="string">'failed'</span>:</span><br><span class="line">                failed += <span class="number">1</span></span><br><span class="line">        personCounts.append(</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">'name'</span>: resultDetail[<span class="string">'name'</span>],</span><br><span class="line">                <span class="string">'total'</span>: len(resultDetail[<span class="string">'children'</span>]),</span><br><span class="line">                <span class="string">'passed'</span>: passed,</span><br><span class="line">                <span class="string">'broken'</span>: broken,</span><br><span class="line">                <span class="string">'skipped'</span>: skipped,</span><br><span class="line">                <span class="string">'failed'</span>: failed</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    print(personCounts)</span><br><span class="line">    <span class="keyword">return</span> personCounts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spillDingText</span><span class="params">()</span>:</span></span><br><span class="line">    summary = getSummary()</span><br><span class="line">    Failed = summary[<span class="string">'failed'</span>]</span><br><span class="line">    Broken = summary[<span class="string">'broken'</span>]</span><br><span class="line">    Skipped = summary[<span class="string">'skipped'</span>]</span><br><span class="line">    Passed = summary[<span class="string">'passed'</span>]</span><br><span class="line">    Total = summary[<span class="string">'total'</span>]</span><br><span class="line">    PassRate = <span class="string">'%.2f%%'</span> % (Passed / (Total - Skipped) * <span class="number">100</span>)</span><br><span class="line">    summaryText = <span class="string">"### **『%s』项目接口自动化每日报告！**\n\n"</span> \</span><br><span class="line">                  <span class="string">" &gt;%s\n\n"</span> \</span><br><span class="line">                  <span class="string">" &gt;**[&lt;font color=#0A83D1 &gt;PassRate:%s&lt;/font&gt;](%s)**\n\n"</span> \</span><br><span class="line">                  <span class="string">" &gt;**&lt;font color=#000000 &gt;Total:%d&lt;/font&gt;**\n\n"</span> \</span><br><span class="line">                  <span class="string">" &gt;**&lt;font color=#97CC64 &gt;Passed:%d&lt;/font&gt;, &lt;font color=#AAAAAA &gt;Skipped:%d&lt;/font&gt;**\n\n"</span> \</span><br><span class="line">                  <span class="string">" &gt;**&lt;font color=#FF0000 &gt;Failed:%d&lt;/font&gt;, &lt;font color=#FFD050 &gt;Broken:%d&lt;/font&gt;**\n\n"</span> \</span><br><span class="line">                  % (JOB_NAME, mobiles, PassRate, reportUrl, Total, Passed, Skipped, Failed, Broken)</span><br><span class="line"></span><br><span class="line">    personCounts = getPersonCounts()</span><br><span class="line">    personCountsText = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> personCount <span class="keyword">in</span> personCounts:</span><br><span class="line">        Name = personCount[<span class="string">'name'</span>]</span><br><span class="line">        Total = personCount[<span class="string">'total'</span>]</span><br><span class="line">        Failed = personCount[<span class="string">'failed'</span>]</span><br><span class="line">        Broken = personCount[<span class="string">'broken'</span>]</span><br><span class="line">        Skipped = personCount[<span class="string">'skipped'</span>]</span><br><span class="line">        Passed = personCount[<span class="string">'passed'</span>]</span><br><span class="line">        PassRate = <span class="string">'%.2f%%'</span> % (Passed / (Total - Skipped) * <span class="number">100</span>)</span><br><span class="line">        personCountText = <span class="string">"**『%s』：**\n\n"</span> \</span><br><span class="line">                          <span class="string">" &gt;&lt;font color=#000000 &gt;Total:%d&lt;/font&gt;, &lt;font color=#0A83D1 &gt;PassRate:%s&lt;/font&gt;\n\n"</span> \</span><br><span class="line">                          <span class="string">" &gt;&lt;font color=#97CC64 &gt;Passed:%d&lt;/font&gt;, &lt;font color=#AAAAAA &gt;Skipped:%d&lt;/font&gt;, "</span> \</span><br><span class="line">                          <span class="string">" &lt;font color=#FF0000 &gt;Failed:%d&lt;/font&gt;, &lt;font color=#FFD050 &gt;Broken:%d&lt;/font&gt;\n\n"</span> \</span><br><span class="line">                          % (Name, Total, PassRate, Passed, Skipped, Failed, Broken)</span><br><span class="line">        personCountsText += personCountText</span><br><span class="line">    text = summaryText + personCountsText</span><br><span class="line">    print(text)</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendMarkdownDing</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 1、构建url</span></span><br><span class="line">    webhook = <span class="string">"https://oapi.dingtalk.com/robot/send?access_token="</span> + WEBHOOK_TOKEN</span><br><span class="line">    <span class="comment"># 2、构建一下请求头部</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span><br><span class="line">        <span class="string">"Charset"</span>: <span class="string">"UTF-8"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 3、构建请求数据</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"msgtype"</span>: <span class="string">"markdown"</span>,</span><br><span class="line">        <span class="string">"markdown"</span>: &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"接口自动化执行报告，请及时跟进处理！"</span>,</span><br><span class="line">            <span class="string">"text"</span>: spillDingText()</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"at"</span>: &#123;</span><br><span class="line">            <span class="string">"atMobiles"</span>: atMobiles,</span><br><span class="line">            <span class="string">"isAtAll"</span>: <span class="literal">False</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    print(data)</span><br><span class="line">    <span class="comment"># 4、对请求的数据进行json封装</span></span><br><span class="line">    sendData = json.dumps(data)  <span class="comment"># 将字典类型数据转化为json格式</span></span><br><span class="line">    sendData = sendData.encode(<span class="string">"utf-8"</span>)  <span class="comment"># python3的Request要求data为byte类型</span></span><br><span class="line">    <span class="comment"># 5、发送请求</span></span><br><span class="line">    resp = requests.post(url=webhook, data=sendData, headers=header)</span><br><span class="line">    print(resp.json())</span><br><span class="line">    <span class="keyword">return</span> resp.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sendMarkdownDing()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Jenkins中的Allure插件，增加Owner插件&quot;&gt;&lt;a href=&quot;#Jenkins中的Allure插件，增加Owner插件&quot; class=&quot;headerlink&quot; title=&quot;Jenkins中的Allure插件，增加Owner插件&quot;&gt;&lt;/a&gt;Jenkins中的Allure插件，增加Owner插件&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Jenkins中配置Allure插件，目录为&lt;code&gt;System Configuation -&amp;gt; Global Tool Configuration&lt;/code&gt;，从中找到&lt;code&gt;Allure Commandline&lt;/code&gt;&lt;/p&gt;&lt;img src=&quot;/2020/10/10/2020-10-10-Ding-Allure-Detail-Report/AllureCommandline.png&quot; title=&quot;AllureCommandline&quot;&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="http://shadow000902.space/categories/Tools/"/>
    
    
      <category term="python" scheme="http://shadow000902.space/tags/python/"/>
    
      <category term="allure" scheme="http://shadow000902.space/tags/allure/"/>
    
  </entry>
  
  <entry>
    <title>EasyMock服务搭建</title>
    <link href="http://shadow000902.space/2020/08/25/2020-08-25-Build-Easy-Mock-Server/"/>
    <id>http://shadow000902.space/2020/08/25/2020-08-25-Build-Easy-Mock-Server/</id>
    <published>2020-08-25T10:07:04.000Z</published>
    <updated>2023-04-20T08:48:51.448Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Mock服务搭建整体步骤"><a href="#Mock服务搭建整体步骤" class="headerlink" title="Mock服务搭建整体步骤"></a>Mock服务搭建整体步骤</h3><ul><li><p>克隆<code>GitHub</code>代码仓库</p></li><li><p>安装<code>Node</code>环境</p></li><li><p>安装<code>MongoDB</code>服务</p></li><li><p>安装<code>Redis</code>服务</p></li><li><p>安装<code>Mock</code>服务</p><a id="more"></a></li></ul><h3 id="克隆代码"><a href="#克隆代码" class="headerlink" title="克隆代码"></a>克隆代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/easy-mock/easy-mock.git</span><br><span class="line"><span class="built_in">cd</span> easy-mock &amp;&amp; npm install</span><br></pre></td></tr></table></figure><h3 id="安装Node服务"><a href="#安装Node服务" class="headerlink" title="安装Node服务"></a>安装Node服务</h3><p>推荐使用<code>nvm</code>来管理本地<code>Node</code>服务，方便随意切换<code>Node</code>版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><p><a href="https://shadow000902.space/2018/04/10/2018-04-10-Python-version-management-tool-pyenv-use-summary/">Linux下安装Brew</a><br>然后再安装指定版本的Node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 10.22.0</span><br></pre></td></tr></table></figure><h3 id="安装MongoDB服务"><a href="#安装MongoDB服务" class="headerlink" title="安装MongoDB服务"></a>安装MongoDB服务</h3><p><a href="https://shadow000902.space/2017/01/18/2017-01-18-Useing-Extent-test-report/">安装MongoDB服务</a><br>注意文件目录需要放在当前用户有权限的位置，否则可能会有无法辨别的报错信息</p><h3 id="安装Redis服务"><a href="#安装Redis服务" class="headerlink" title="安装Redis服务"></a>安装Redis服务</h3><p><a href="https://shadow000902.space/2017/06/18/2017-06-18-Building-a-Redis-environment-under-Mac/">Redis服务部署</a></p><h3 id="启动Mock服务"><a href="#启动Mock服务" class="headerlink" title="启动Mock服务"></a>启动Mock服务</h3><p>基本命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ npm run dev</span><br><span class="line"><span class="comment"># Visit http://127.0.0.1:7300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># More Commands</span></span><br><span class="line"><span class="comment"># Build front-end assets</span></span><br><span class="line">$ npm run build</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run Easy Mock as production environment (You should run `build` first)</span></span><br><span class="line">$ npm run start</span><br><span class="line"></span><br><span class="line"><span class="comment"># Run unit test</span></span><br><span class="line">$ npm run <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Test lint</span></span><br><span class="line">$ npm run lint</span><br></pre></td></tr></table></figure><p>服务启动后，登录主页如下：</p><img src="/2020/08/25/2020-08-25-Build-Easy-Mock-Server/EasyMock%E4%B8%BB%E9%A1%B5.png" title="EasyMock主页"><p>如果IP+Port的方式无法访问，可能就是网络上的访问的限制了，可以配置一个域名映射解决</p><h3 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h3><h4 id="curl报错"><a href="#curl报错" class="headerlink" title="curl报错"></a>curl报错</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shadow @ kickseed in ~/easy-mock on git:dev x [17:43:05] C:1</span></span><br><span class="line">$ brew reinstall nvm</span><br><span class="line">==&gt; Reinstalling nvm </span><br><span class="line">==&gt; Downloading https://github.com/creationix/nvm/archive/v0.33.11.tar.gz</span><br><span class="line">Error: An exception occurred within a child process:</span><br><span class="line">  RuntimeError: no executable curl was found</span><br></pre></td></tr></table></figure><p>安装curl命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl</span><br></pre></td></tr></table></figure><h4 id="webpack报错"><a href="#webpack报错" class="headerlink" title="webpack报错"></a>webpack报错</h4><p>报错信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shadow @ kickseed in ~/easy-mock on git:dev x [17:53:45] </span></span><br><span class="line">$ npm run build                                                 </span><br><span class="line"></span><br><span class="line">&gt; easy-mock@1.6.0 build /home/shadow/easy-mock</span><br><span class="line">&gt; cross-env NODE_ENV=production npm run build:dev</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; easy-mock@1.6.0 build:dev /home/shadow/easy-mock</span><br><span class="line">&gt; rimraf dist &amp;&amp; npm run build:client &amp;&amp; npm run build:server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; easy-mock@1.6.0 build:client /home/shadow/easy-mock</span><br><span class="line">&gt; webpack --config build/webpack.client.config.js --progress --hide-modules</span><br><span class="line"></span><br><span class="line">WARNING: NODE_ENV value of <span class="string">'production'</span> did not match any deployment config file names.</span><br><span class="line">WARNING: See https://github.com/lorenwest/node-config/wiki/Strict-Mode</span><br><span class="line"> 23% building modules 116/140 modules 24 active ...odules/js-beautify/js/lib/beautify.jsnode[6188]: ../src/node_file.cc:943:void node::fs::Stat(const v8::FunctionCallbackInfo&lt;v8::Value&gt;&amp;): Assertion `(argc) == (4)<span class="string">' failed.</span></span><br><span class="line"><span class="string"> 1: 0x8fb090 node::Abort() [node]</span></span><br><span class="line"><span class="string"> 2: 0x8fb165  [node]</span></span><br><span class="line"><span class="string"> 3: 0x93bb1a  [node]</span></span><br><span class="line"><span class="string"> 4: 0xb917ef  [node]</span></span><br><span class="line"><span class="string"> 5: 0xb92359 v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [node]</span></span><br><span class="line"><span class="string"> 6: 0x3744a845be1d </span></span><br><span class="line"><span class="string">Aborted</span></span><br><span class="line"><span class="string">npm ERR! code ELIFECYCLE</span></span><br><span class="line"><span class="string">npm ERR! errno 134</span></span><br><span class="line"><span class="string">npm ERR! easy-mock@1.6.0 build:client: `webpack --config build/webpack.client.config.js --progress --hide-modules`</span></span><br><span class="line"><span class="string">npm ERR! Exit status 134</span></span><br><span class="line"><span class="string">npm ERR! </span></span><br><span class="line"><span class="string">npm ERR! Failed at the easy-mock@1.6.0 build:client script.</span></span><br><span class="line"><span class="string">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">npm ERR! A complete log of this run can be found in:</span></span><br><span class="line"><span class="string">npm ERR!     /home/shadow/.npm/_logs/2020-08-25T09_54_02_278Z-debug.log</span></span><br><span class="line"><span class="string">npm ERR! code ELIFECYCLE</span></span><br><span class="line"><span class="string">npm ERR! errno 134</span></span><br><span class="line"><span class="string">npm ERR! easy-mock@1.6.0 build:dev: `rimraf dist &amp;&amp; npm run build:client &amp;&amp; npm run build:server`</span></span><br><span class="line"><span class="string">npm ERR! Exit status 134</span></span><br><span class="line"><span class="string">npm ERR! </span></span><br><span class="line"><span class="string">npm ERR! Failed at the easy-mock@1.6.0 build:dev script.</span></span><br><span class="line"><span class="string">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">npm ERR! A complete log of this run can be found in:</span></span><br><span class="line"><span class="string">npm ERR!     /home/shadow/.npm/_logs/2020-08-25T09_54_02_300Z-debug.log</span></span><br><span class="line"><span class="string">npm ERR! code ELIFECYCLE</span></span><br><span class="line"><span class="string">npm ERR! errno 134</span></span><br><span class="line"><span class="string">npm ERR! easy-mock@1.6.0 build: `cross-env NODE_ENV=production npm run build:dev`</span></span><br><span class="line"><span class="string">npm ERR! Exit status 134</span></span><br><span class="line"><span class="string">npm ERR! </span></span><br><span class="line"><span class="string">npm ERR! Failed at the easy-mock@1.6.0 build script.</span></span><br><span class="line"><span class="string">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">npm ERR! A complete log of this run can be found in:</span></span><br><span class="line"><span class="string">npm ERR!     /home/shadow/.npm/_logs/2020-08-25T09_54_02_315Z-debug.log</span></span><br></pre></td></tr></table></figure><p>需要安装webpack，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install webpack</span><br></pre></td></tr></table></figure><h4 id="node报错"><a href="#node报错" class="headerlink" title="node报错"></a>node报错</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shadow @ kickseed in ~/easy-mock on git:dev x [17:54:02] C:134</span></span><br><span class="line">$ npm run dev  </span><br><span class="line"></span><br><span class="line">&gt; easy-mock@1.6.0 dev /home/shadow/easy-mock</span><br><span class="line">&gt; nodemon --ignore views/ --ignore public/ app</span><br><span class="line"></span><br><span class="line">[nodemon] 1.14.11</span><br><span class="line">[nodemon] to restart at any time, enter `rs`</span><br><span class="line">[nodemon] watching: *.*</span><br><span class="line">[nodemon] starting `node app.js`</span><br><span class="line">server started at http://0.0.0.0:7300</span><br><span class="line">&#123;<span class="string">"t"</span>:&#123;<span class="string">"<span class="variable">$date</span>"</span>:<span class="string">"2020-08-25T17:54:29.409+08:00"</span>&#125;,<span class="string">"s"</span>:<span class="string">"I"</span>,  <span class="string">"c"</span>:<span class="string">"NETWORK"</span>,  <span class="string">"id"</span>:22943,   <span class="string">"ctx"</span>:<span class="string">"listener"</span>,<span class="string">"msg"</span>:<span class="string">"connection accepted"</span>,<span class="string">"attr"</span>:&#123;<span class="string">"remote"</span>:<span class="string">"127.0.0.1:59488"</span>,<span class="string">"sessionId"</span>:5,<span class="string">"connectionCount"</span>:1&#125;&#125;</span><br><span class="line">&#123;<span class="string">"t"</span>:&#123;<span class="string">"<span class="variable">$date</span>"</span>:<span class="string">"2020-08-25T17:54:29.415+08:00"</span>&#125;,<span class="string">"s"</span>:<span class="string">"I"</span>,  <span class="string">"c"</span>:<span class="string">"NETWORK"</span>,  <span class="string">"id"</span>:51800,   <span class="string">"ctx"</span>:<span class="string">"conn5"</span>,<span class="string">"msg"</span>:<span class="string">"client metadata"</span>,<span class="string">"attr"</span>:&#123;<span class="string">"remote"</span>:<span class="string">"127.0.0.1:59488"</span>,<span class="string">"client"</span>:<span class="string">"conn5"</span>,<span class="string">"doc"</span>:&#123;<span class="string">"driver"</span>:&#123;<span class="string">"name"</span>:<span class="string">"nodejs"</span>,<span class="string">"version"</span>:<span class="string">"2.2.34"</span>&#125;,<span class="string">"os"</span>:&#123;<span class="string">"type"</span>:<span class="string">"Linux"</span>,<span class="string">"name"</span>:<span class="string">"linux"</span>,<span class="string">"architecture"</span>:<span class="string">"x64"</span>,<span class="string">"version"</span>:<span class="string">"4.4.0-140-generic"</span>&#125;,<span class="string">"platform"</span>:<span class="string">"Node.js v10.22.0, LE, mongodb-core: 2.1.18"</span>&#125;&#125;&#125;</span><br><span class="line">&#123;<span class="string">"t"</span>:&#123;<span class="string">"<span class="variable">$date</span>"</span>:<span class="string">"2020-08-25T17:54:29.435+08:00"</span>&#125;,<span class="string">"s"</span>:<span class="string">"I"</span>,  <span class="string">"c"</span>:<span class="string">"NETWORK"</span>,  <span class="string">"id"</span>:22943,   <span class="string">"ctx"</span>:<span class="string">"listener"</span>,<span class="string">"msg"</span>:<span class="string">"connection accepted"</span>,<span class="string">"attr"</span>:&#123;<span class="string">"remote"</span>:<span class="string">"127.0.0.1:59492"</span>,<span class="string">"sessionId"</span>:6,<span class="string">"connectionCount"</span>:2&#125;&#125;</span><br><span class="line">&#123;<span class="string">"t"</span>:&#123;<span class="string">"<span class="variable">$date</span>"</span>:<span class="string">"2020-08-25T17:54:29.440+08:00"</span>&#125;,<span class="string">"s"</span>:<span class="string">"I"</span>,  <span class="string">"c"</span>:<span class="string">"NETWORK"</span>,  <span class="string">"id"</span>:22943,   <span class="string">"ctx"</span>:<span class="string">"listener"</span>,<span class="string">"msg"</span>:<span class="string">"connection accepted"</span>,<span class="string">"attr"</span>:&#123;<span class="string">"remote"</span>:<span class="string">"127.0.0.1:59494"</span>,<span class="string">"sessionId"</span>:7,<span class="string">"connectionCount"</span>:3&#125;&#125;</span><br><span class="line">&#123;<span class="string">"t"</span>:&#123;<span class="string">"<span class="variable">$date</span>"</span>:<span class="string">"2020-08-25T17:54:29.443+08:00"</span>&#125;,<span class="string">"s"</span>:<span class="string">"I"</span>,  <span class="string">"c"</span>:<span class="string">"NETWORK"</span>,  <span class="string">"id"</span>:22943,   <span class="string">"ctx"</span>:<span class="string">"listener"</span>,<span class="string">"msg"</span>:<span class="string">"connection accepted"</span>,<span class="string">"attr"</span>:&#123;<span class="string">"remote"</span>:<span class="string">"127.0.0.1:59496"</span>,<span class="string">"sessionId"</span>:8,<span class="string">"connectionCount"</span>:4&#125;&#125;</span><br><span class="line">/home/shadow/.nvm/versions/node/v10.22.0/bin/node[6242]: ../src/node_file.cc:943:void node::fs::Stat(const v8::FunctionCallbackInfo&lt;v8::Value&gt;&amp;): Assertion `(argc) == (4)<span class="string">' failed.</span></span><br><span class="line"><span class="string"> 1: 0x8fb090 node::Abort() [/home/shadow/.nvm/versions/node/v10.22.0/bin/node]</span></span><br><span class="line"><span class="string"> 2: 0x8fb165  [/home/shadow/.nvm/versions/node/v10.22.0/bin/node]</span></span><br><span class="line"><span class="string"> 3: 0x93bb1a  [/home/shadow/.nvm/versions/node/v10.22.0/bin/node]</span></span><br><span class="line"><span class="string"> 4: 0xb917ef  [/home/shadow/.nvm/versions/node/v10.22.0/bin/node]</span></span><br><span class="line"><span class="string"> 5: 0xb92359 v8::internal::Builtin_HandleApiCall(int, v8::internal::Object**, v8::internal::Isolate*) [/home/shadow/.nvm/versions/node/v10.22.0/bin/node]</span></span><br><span class="line"><span class="string"> 6: 0x3a1c83a5be1d </span></span><br><span class="line"><span class="string">&#123;"t":&#123;"$date":"2020-08-25T17:54:39.976+08:00"&#125;,"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn8","msg":"connection ended","attr":&#123;"remote":"127.0.0.1:59496","connectionCount":3&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;"t":&#123;"$date":"2020-08-25T17:54:39.976+08:00"&#125;,"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn7","msg":"connection ended","attr":&#123;"remote":"127.0.0.1:59494","connectionCount":1&#125;&#125;</span></span><br><span class="line"><span class="string">&#123;"t":&#123;"$date":"2020-08-25T17:54:39.976+08:00"&#125;,"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn6","msg":"connection ended","attr":&#123;"remote":"127.0.0.1:59492","connectionCount":0&#125;&#125;</span></span><br><span class="line"><span class="string">[nodemon] app crashed - waiting for file changes before starting...</span></span><br><span class="line"><span class="string">&#123;"t":&#123;"$date":"2020-08-25T17:54:39.976+08:00"&#125;,"s":"I",  "c":"NETWORK",  "id":22944,   "ctx":"conn5","msg":"connection ended","attr":&#123;"remote":"127.0.0.1:59488","connectionCount":2&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>切换node版本为8.17.0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8.17.0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Mock服务搭建整体步骤&quot;&gt;&lt;a href=&quot;#Mock服务搭建整体步骤&quot; class=&quot;headerlink&quot; title=&quot;Mock服务搭建整体步骤&quot;&gt;&lt;/a&gt;Mock服务搭建整体步骤&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;克隆&lt;code&gt;GitHub&lt;/code&gt;代码仓库&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Node&lt;/code&gt;环境&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;安装&lt;code&gt;MongoDB&lt;/code&gt;服务&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Redis&lt;/code&gt;服务&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;安装&lt;code&gt;Mock&lt;/code&gt;服务&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="http://shadow000902.space/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Mock" scheme="http://shadow000902.space/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Mock/"/>
    
    
      <category term="mock" scheme="http://shadow000902.space/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>Mac中Node多版本管理</title>
    <link href="http://shadow000902.space/2020/07/16/2020-07-16-Node-Version-Manage/"/>
    <id>http://shadow000902.space/2020/07/16/2020-07-16-Node-Version-Manage/</id>
    <published>2020-07-15T17:34:01.000Z</published>
    <updated>2023-04-20T08:48:51.444Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>安装<code>brew</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>安装<code>NVM</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量<br>在环境变量文件中加入如下内容，如<code>zsh</code>即为<code>~/.zshrc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=~/.nvm</span><br><span class="line"><span class="built_in">source</span> $(brew --prefix nvm)/nvm.sh</span><br></pre></td></tr></table></figure></li><li><p>安装指定版本的<code>node</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8.17.0        </span><br><span class="line">Downloading and installing node v8.17.0...</span><br><span class="line">Downloading https://nodejs.org/dist/v8.17.0/node-v8.17.0-darwin-x64.tar.xz...</span><br><span class="line"><span class="comment">######################################################################################################################################################### 100.0%</span></span><br><span class="line">Computing checksum with shasum -a 256</span><br><span class="line">Checksums matched!</span><br><span class="line">Now using node v8.17.0 (npm v6.13.4)</span><br><span class="line">Creating default <span class="built_in">alias</span>: default -&gt; 8.17.0 (-&gt; v8.17.0)</span><br></pre></td></tr></table></figure></li><li><p><code>nvm</code>常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote           <span class="comment"># 查看所有的node可用版本</span></span><br><span class="line">nvm install xxx         <span class="comment"># 下载你想要的版本</span></span><br><span class="line">nvm use xxx             <span class="comment"># 使用指定版本的node</span></span><br><span class="line">nvm <span class="built_in">alias</span> default xxx   <span class="comment"># 每次启动终端都使用该版本的node</span></span><br></pre></td></tr></table></figure></li><li><p>问题解决</p></li></ol><ul><li><p>问题如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br><span class="line">dyld: Library not loaded: /usr/<span class="built_in">local</span>/opt/openssl/lib/libssl.1.0.0.dylib</span><br><span class="line">  Referenced from: /usr/<span class="built_in">local</span>/opt/curl-openssl/bin/curl</span><br><span class="line">  Reason: image not found</span><br><span class="line">dyld: Library not loaded: /usr/<span class="built_in">local</span>/opt/openssl/lib/libssl.1.0.0.dylib</span><br><span class="line">  Referenced from: /usr/<span class="built_in">local</span>/opt/curl-openssl/bin/curl</span><br><span class="line">  Reason: image not found</span><br><span class="line">            N/A</span><br></pre></td></tr></table></figure></li><li><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew switch openssl 1.0.2s</span><br><span class="line">Cleaning /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2s</span><br><span class="line">Opt link created <span class="keyword">for</span> /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2s</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;&lt;li&gt;&lt;p&gt;安装&lt;code&gt;brew&lt;/code&gt;&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/bin/bash -c &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://shadow000902.space/categories/Tips/"/>
    
    
      <category term="node" scheme="http://shadow000902.space/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Xpath定位方法总结</title>
    <link href="http://shadow000902.space/2020/07/13/2020-07-13-Xpath-Location-Summary/"/>
    <id>http://shadow000902.space/2020/07/13/2020-07-13-Xpath-Location-Summary/</id>
    <published>2020-07-13T02:21:47.000Z</published>
    <updated>2023-04-20T08:48:51.435Z</updated>
    
    <content type="html"><![CDATA[<h3 id="浏览器控制台下，用Xpath命令调试"><a href="#浏览器控制台下，用Xpath命令调试" class="headerlink" title="浏览器控制台下，用Xpath命令调试"></a>浏览器控制台下，用<code>Xpath</code>命令调试</h3><ol><li><p>查看元素是否找到，如果有返回一个列表：<code>$x(&#39;xpath路径&quot;)][text()=&quot;项目总数&quot;]&#39;)</code><br>示例：</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span>(<span class="string">"//*[text()='确认']"</span>)</span><br><span class="line">(<span class="number">4</span>) [span.confirm, span.confirm, span.confirm, span.confirm]</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>实现元素点击：<code>$x(&#39;xpath路径&quot;)][text()=&quot;项目总数&quot;]&#39;)[0].click()</code><br>示例：</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span>(<span class="string">"//*[text()='确认']"</span>)[<span class="number">0</span>].click()</span><br></pre></td></tr></table></figure></li><li><p>调试模式下的其它元素定位方法</p><img src="/2020/07/13/2020-07-13-Xpath-Location-Summary/web%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%91%BD%E4%BB%A4%E8%B0%83%E8%AF%95.png" title="web控制台命令调试"></li></ol><h3 id="定位路径表达式"><a href="#定位路径表达式" class="headerlink" title="定位路径表达式"></a>定位路径表达式</h3><table><thead><tr><th>表达式</th><th>实例</th><th>描述</th></tr></thead><tbody><tr><td><code>/</code></td><td><code>xpath(&#39;//div&#39;)</code></td><td>路径以<code>/</code>开始，表示找到满足绝对路径的元素</td></tr><tr><td><code>//</code></td><td><code>xpath(&#39;//div&#39;)</code></td><td>路径以<code>//</code>开始，表示找到文档中所有满足<code>//</code>后规则的元素，如<code>//div</code>表示找到所有<code>div</code>元素</td></tr><tr><td><code>*</code></td><td><code>xpath（&#39;/div/*&#39;)</code></td><td>表示选择所有元素</td></tr><tr><td>[表达式]</td><td><code>xpath(&#39;/body/div[1]&#39;)</code><br><code>xpath(&#39;/body/div[@class]&#39;)</code><br><code>xpath(&#39;/body/div[@class=&quot;main&quot;]&#39;)</code></td><td>①[数字]：表示选择第几个，其中[last()]表示最后一个<br>②[@属性]限定满足该属性，如<code>//TEXT[@name]</code>表示含有<code>name</code>属性的<code>TEXT</code>元素；<code>//TEXT[not(@*)]</code>表示所有没有属性的<code>TEXT</code>元素；<br>③<code>/TEXT[@name=&quot;text&quot;]</code>表示所有含有name属性且其值为<code>text</code>的<code>TEXT</code>元素</td></tr><tr><td>&#124;</td><td>xpath(‘//div&#124;//table’)</td><td>逻辑或，将多个路径合并到一起，如<code>//BBB</code> &#124; <code>/AAA</code> 选择所有BBB元素和根元素AAA；可合并的路径数目没有限制</td></tr></tbody></table><h3 id="Xpath定位方法"><a href="#Xpath定位方法" class="headerlink" title="Xpath定位方法"></a><code>Xpath</code>定位方法</h3><ol><li><p>绝对路径定位</p><p>就是从根部开始找，一级一级往下走，如果有同级别的需要用[]标明序号，从1开始</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// CSDN博客的博主头像</span><br><span class="line">//*[<span class="built_in">@id</span>=<span class="string">"csdn_container_tool"</span>]/div/ul/li[<span class="number">6</span>]/div[<span class="number">1</span>]/a/img</span><br><span class="line">// CSDN博客的CSDNlogo</span><br><span class="line">//*[<span class="built_in">@id</span>=<span class="string">"nav-left-menu"</span>]/li[<span class="number">1</span>]/a/img</span><br><span class="line"></span><br><span class="line">// CSDN博客的搜索框的两种xpath定位方法</span><br><span class="line">//*[<span class="built_in">@id</span>=<span class="string">"toolber-keyword"</span>]</span><br><span class="line">/html/body/div[<span class="number">4</span>]/div/ul/div/input</span><br></pre></td></tr></table></figure></li><li><p>相对路径定位</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/html/body/div[<span class="number">1</span>]/div[<span class="number">2</span>]/div[<span class="number">1</span>]/div[<span class="number">1</span>]/form/span[<span class="number">1</span>]/input</span><br></pre></td></tr></table></figure><p>以下都以定位到<code>input</code>做说明。</p><p>2.1 元素本身查找（@表示属性）</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//input[<span class="built_in">@id</span>=<span class="string">"kw"</span>]</span><br><span class="line">//*[<span class="built_in">@id</span>=<span class="string">"kw"</span>]</span><br><span class="line">//*[@type=<span class="string">"text"</span>]</span><br></pre></td></tr></table></figure><p><code>//input</code>表示匹配<code>input</code>标签的所有元素<br><code>//*</code>表示匹配所有元素的标签</p><p>2.2 布尔值写法<br>如果<code>input</code>标签中，<code>id</code>不是唯一的，<code>type</code>也不是唯一的，但在该页面中包含该<code>id</code>和<code>type</code>的只有这个元素时，就可以用组合的方式定位</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//*[<span class="built_in">@id</span>=<span class="string">"kw"</span> <span class="keyword">and</span> @type=<span class="string">"text"</span>]</span><br><span class="line">//*[<span class="built_in">@id</span>=<span class="string">"kw"</span> <span class="keyword">or</span> @type=<span class="string">"text"</span>]</span><br></pre></td></tr></table></figure><p>2.3 找父级<br>如果自己没有唯一的标志，那么就找自己的上级（父级），或者上级的上级，以此类推。</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//找父级</span><br><span class="line">//span[@class=<span class="string">"s_ipt_w"</span>]/input</span><br><span class="line">//找父级的父级</span><br><span class="line">//form[<span class="built_in">@id</span>=<span class="string">"form"</span>]/span[<span class="number">1</span>]/input</span><br></pre></td></tr></table></figure><p>2.4 跳级<br>如果需要定位的元素在该页面不是唯一，但在某个容器内是唯一的，当然那个容器必须要有唯一的标志；<br>该方法要保证在某容器内该元素是唯一的。</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//div[<span class="built_in">@id</span>=<span class="string">"wrapper"</span>]//input[<span class="built_in">@id</span>=<span class="string">"kw"</span>]</span><br></pre></td></tr></table></figure></li><li><p><code>Xpath</code>函数过滤</p><p>3.1 <code>contains()</code></p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//div<span class="built_in">[contains</span>(<span class="built_in">@id</span>,<span class="string">'in'</span>)]</span><br></pre></td></tr></table></figure><p>表示选择<code>id</code>中包含有<code>in</code>的<code>div</code>节点</p><p>3.2 <code>text()</code></p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//a[<span class="type">text</span>()=<span class="string">'baidu'</span>]</span><br></pre></td></tr></table></figure><p>由于一个节点的文本值不属于属性，比如<code>&lt;a class=&quot;baidu&quot; herf=&quot;http://www.baidu.com&quot;&gt;baidu&lt;/a&gt;</code>，所以用<code>text()</code>函数来匹配节点</p><p>3.3 <code>last()</code><br>表示取列表的最后一个</p><p>3.4 <code>start-with()</code></p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//div<span class="built_in">[starts-with</span>(<span class="built_in">@id</span>,<span class="string">'in'</span>)]</span><br></pre></td></tr></table></figure><p>表示选择以<code>in</code>开头的<code>id</code>属性的<code>div</code>节点</p><p>3.5 <code>not()</code>函数</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//input[<span class="built_in">@name</span>=<span class="string">'identity'</span> <span class="keyword">and</span><span class="built_in"> not</span><span class="built_in">(contains</span>(@class, <span class="string">'a'</span>))]</span><br></pre></td></tr></table></figure><p>表示匹配出<code>name</code>为<code>identity</code>，并且<code>class</code>的值中不包含a的<code>input</code>节点；<br>not()函数通常与返回值为<code>true or false</code>的函数组合使用，比如<code>contains()</code>，<code>starts-with()</code>等；<br>有一种特殊情况需要注意：要匹配出<code>input</code>节点下所有的<code>id</code>属性<code>//input[@id]</code>，要匹配出<code>input</code>节点下不含有<code>id</code>属性<code>//input[not(@id)]</code></p></li><li><p>轴&amp;步</p><p>轴可定义相对于当前节点的节点集。</p><table><thead><tr><th>轴名称</th><th>描述</th></tr></thead><tbody><tr><td><code>ancestor</code></td><td>选取当前节点的所有先辈（父、祖父等）。</td></tr><tr><td><code>ancestor-or-self</code></td><td>选取当前节点的所有先辈（父、祖父等）以及当前节点本身。</td></tr><tr><td><code>attribute</code></td><td>选取当前节点的所有属性。</td></tr><tr><td><code>child</code></td><td>选取当前节点的所有子元素。</td></tr><tr><td><code>descendant</code></td><td>选取当前节点的所有后代元素（子、孙等）。</td></tr><tr><td><code>descendant-or-self</code></td><td>选取当前节点的所有后代元素（子、孙等）以及当前节点本身。</td></tr><tr><td><code>following</code></td><td>选取文档中当前节点的结束标签之后的所有节点。</td></tr><tr><td><code>following-sibling</code></td><td>选取当前节点之后的所有同级节点</td></tr><tr><td><code>namespace</code></td><td>选取当前节点的所有命名空间节点。</td></tr><tr><td><code>parent</code></td><td>选取当前节点的父节点。</td></tr><tr><td><code>preceding</code></td><td>选取文档中当前节点的开始标签之前的所有节点。</td></tr><tr><td><code>preceding-sibling</code></td><td>选取当前节点之前的所有同级节点。</td></tr><tr><td><code>self</code></td><td>选取当前节点。</td></tr></tbody></table><p>语法：<code>轴名称::节点测试[谓语]</code></p></li></ol><h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><ol><li><p>实例1：</p><table><thead><tr><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>child::book</td><td>选取所有属于当前节点的子元素的 book 节点。</td></tr><tr><td>attribute::lang</td><td>选取当前节点的 lang 属性。</td></tr><tr><td>child::*</td><td>选取当前节点的所有子元素。</td></tr><tr><td>attribute::*</td><td>选取当前节点的所有属性。</td></tr><tr><td>child::text()</td><td>选取当前节点的所有文本子节点。</td></tr><tr><td>child::node()</td><td>选取当前节点的所有子节点。</td></tr><tr><td>descendant::book</td><td>选取当前节点的所有 book 后代。</td></tr><tr><td>ancestor::book</td><td>选择当前节点的所有 book 先辈。</td></tr><tr><td>ancestor-or-self::book</td><td>选取当前节点的所有 book 先辈以及当前节点（如果此节点是 book 节点）</td></tr><tr><td>child::*/child::price</td><td>选取当前节点的所有 price 孙节点。</td></tr></tbody></table></li><li><p>实例2：复杂HTML列表定位</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"carInfo"</span> <span class="attr">class</span>=<span class="string">"mt48"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>车辆信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>车型<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>2016款 锐行 1.5L 手动风尚版<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>外观颜色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>泰晤士青<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>内饰颜色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>黑色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>车型编码<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>15004-n<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>车架号<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"princeInfo"</span> <span class="attr">class</span>=<span class="string">"mt48"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span>金额信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>裸车价<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>¥ 0.06<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>装潢合计<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>金融合计<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>保险合计<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>延保金额<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>代办合计<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"label mr12"</span>&gt;</span>实际成交价<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-v-f7a7d94e</span>=<span class="string">""</span> <span class="attr">class</span>=<span class="string">"value"</span>&gt;</span>¥ 0.06<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/07/13/2020-07-13-Xpath-Location-Summary/UI%E5%B1%95%E7%A4%BA.png" title="UI展示"><p>UI组件化获取label对应的value：</p><figure class="highlight xpath"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//div[@class=<span class="string">'title'</span> <span class="keyword">and</span><span class="built_in"> contains</span>(<span class="type">text</span>(),<span class="string">'"+分组名+"'</span>)]/parent::div/div[@class=<span class="string">'content'</span>]/descendant::div<span class="built_in">[contains</span>(@class,<span class="string">'label'</span>) <span class="keyword">and</span> <span class="type">text</span>()=<span class="string">'"+标签+"'</span>]/parent::div/div[@class=<span class="string">'value'</span>]</span><br></pre></td></tr></table></figure><ul><li>分组名：选择的<code>title</code>的名称</li><li>标签：选择的<code>label</code>的名称</li><li><code>//div[@class=&#39;title&#39; and contains(text(),&#39;&quot;+分组名+&quot;&#39;)]</code>：选取<code>div</code>中，<code>class</code>等于<code>title</code>，并且<code>div</code>中文案包含对应的<code>分组名</code>的节点</li><li><code>parent::div/div[@class=&#39;content&#39;]</code>：选取父级<code>div</code>节点的子<code>div</code>节点中，<code>class</code>等于<code>content</code>的节点</li><li><code>descendant::div[contains(@class,&#39;label&#39;) and text()=&#39;&quot;+标签+&quot;&#39;]</code>：选取当前节点所有的<code>div</code>子节点中，<code>class</code>包含<code>label</code>，并且文本等于<code>标签</code>值的节点</li><li><code>parent::div/div[@class=&#39;value&#39;]</code>：选取父级<code>div</code>节点的子<code>div</code>节点中，<code>class</code>等于<code>value</code>的节点</li></ul></li><li><p>实例3：Python中xpath取值</p><p>可以从需要的值开始往外取值，直到取值唯一就OK</p><img src="/2020/07/13/2020-07-13-Xpath-Location-Summary/%E7%A4%BA%E4%BE%8BHTML%E4%BB%A3%E7%A0%81.png" title="示例HTML代码"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">html = etree.HTML(resp)</span><br><span class="line">reportName = html.xpath(<span class="string">"//caption/h4/text()"</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><img src="/2020/07/13/2020-07-13-Xpath-Location-Summary/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BF%90%E8%A1%8C.png" title="浏览器控制台运行"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;浏览器控制台下，用Xpath命令调试&quot;&gt;&lt;a href=&quot;#浏览器控制台下，用Xpath命令调试&quot; class=&quot;headerlink&quot; title=&quot;浏览器控制台下，用Xpath命令调试&quot;&gt;&lt;/a&gt;浏览器控制台下，用&lt;code&gt;Xpath&lt;/code&gt;命令调试&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;查看元素是否找到，如果有返回一个列表：&lt;code&gt;$x(&amp;#39;xpath路径&amp;quot;)][text()=&amp;quot;项目总数&amp;quot;]&amp;#39;)&lt;/code&gt;&lt;br&gt;示例：&lt;/p&gt;&lt;figure class=&quot;highlight xpath&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$x&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;//*[text()=&#39;确认&#39;]&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) [span.confirm, span.confirm, span.confirm, span.confirm]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="http://shadow000902.space/categories/Tools/"/>
    
    
      <category term="web" scheme="http://shadow000902.space/tags/web/"/>
    
      <category term="xpath" scheme="http://shadow000902.space/tags/xpath/"/>
    
  </entry>
  
  <entry>
    <title>TestNG使用简单总结</title>
    <link href="http://shadow000902.space/2020/04/19/2020-04-19-Simple-Summary-of-TestNG/"/>
    <id>http://shadow000902.space/2020/04/19/2020-04-19-Simple-Summary-of-TestNG/</id>
    <published>2020-04-19T10:03:46.000Z</published>
    <updated>2023-04-20T08:48:51.430Z</updated>
    
    <content type="html"><![CDATA[<h3 id="TestNG介绍"><a href="#TestNG介绍" class="headerlink" title="TestNG介绍"></a><code>TestNG</code>介绍</h3><p><code>TestNG</code>是一个开源自动化测试框架；<code>TestNG</code>表示<strong>下一代</strong>(<strong>N</strong>ext <strong>G</strong>eneration的首字母)。</p><a id="more"></a><p>TestNG的特点：</p><ul><li>注解</li><li>使用Java和面向对象的功能</li><li>灵活的运行时配置</li><li>支持依赖测试方法，并行测试，负载测试，局部故障</li><li>灵活的插件API</li><li>支持多线程测试</li></ul><h3 id="TestNG测试类配置注释说明"><a href="#TestNG测试类配置注释说明" class="headerlink" title="TestNG测试类配置注释说明"></a><code>TestNG</code>测试类配置注释说明</h3><table><thead><tr><th>注解</th><th>描述</th></tr></thead><tbody><tr><td><code>@BeforeMethod</code></td><td>在每个测试方法 前 执行</td></tr><tr><td><code>@AfterMethod</code></td><td>在每个测试方法 后 执行</td></tr><tr><td><code>@BeforeClass</code></td><td>被注释的方法将在当前类的第一个测试方法调用前运行</td></tr><tr><td><code>@AfterClass</code></td><td>被注释的方法将在当前类的所有测试方法调用后运行</td></tr><tr><td><code>@BeforeGroups</code></td><td>被配置的方法将在列表中的gourp前运行。这个方法保证在第一个属于这些组的测试方法调用前立即执行</td></tr><tr><td><code>@BeforeTest</code></td><td>被注释的方法将在测试运行前运行</td></tr><tr><td><code>@AfterTest</code></td><td>被注释的方法将在测试运行后运行</td></tr><tr><td><code>@BeforeSuite</code></td><td>被注释的方法将在所有测试运行前运行</td></tr><tr><td><code>@AfterSuite</code></td><td>被注释的方法将在所有测试运行后运行</td></tr><tr><td><code>alwaysRun</code></td><td>对于每个bufore方法(beforeSuite, beforeTest, beforeTestClass 和 beforeTestMethod, 但是不包括 beforeGroups):\n如果设置为true，被配置的方法将总是运行而不管它属于哪个组。\n对于after方法(afterSuite, afterClass, …): 如果设置为true，被配置的方法甚至在一个或多个先调用的方法失败或被忽略时也将运行。</td></tr><tr><td><code>dependsOnGroups</code></td><td>这个方法依赖的组列表</td></tr><tr><td><code>dependsOnMethods</code></td><td>这个方法依赖的方法列表</td></tr><tr><td><code>enabled</code></td><td>这个类的方法是否激活</td></tr><tr><td><code>groups</code></td><td>这个类或方法所属的分组列表</td></tr><tr><td><code>inheritGroups</code></td><td>如果设置为true，这个方法被属于在类级别被@Test annotation指定的组</td></tr></tbody></table><h3 id="testng-xml-配置详解"><a href="#testng-xml-配置详解" class="headerlink" title="testng.xml 配置详解"></a><code>testng.xml</code> 配置详解</h3><h4 id="XML规则"><a href="#XML规则" class="headerlink" title="XML规则"></a><code>XML</code>规则</h4><ul><li>suite</li><li>–tests</li><li>—-parameters</li><li>—-groups</li><li>——definitions</li><li>——runs</li><li>—-classes</li><li>–parameters</li></ul><h4 id="XML简单的大概结构"><a href="#XML简单的大概结构" class="headerlink" title="XML简单的大概结构"></a><code>XML</code>简单的大概结构</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">"xxx"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">"xxxx"</span>&gt;</span></span><br><span class="line">    　　<span class="comment">&lt;!-- 参数定义的方法 --&gt;</span></span><br><span class="line">    　　<span class="tag">&lt;<span class="name">parameter</span> <span class="attr">name</span>=<span class="string">"first-name"</span> <span class="attr">value</span>=<span class="string">"Cedric"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    　　<span class="comment">&lt;!-- groups的用法，前提是需要存在classes的组，否则所有方法不被运行 --&gt;</span></span><br><span class="line">    　　<span class="tag">&lt;<span class="name">groups</span>&gt;</span></span><br><span class="line">    　　<span class="comment">&lt;!-- 定义组中组的方法 --&gt;</span></span><br><span class="line">    　　　　<span class="tag">&lt;<span class="name">define</span> <span class="attr">name</span>=<span class="string">"groups_name"</span>&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"group1"</span>/&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"group2"</span>/&gt;</span></span><br><span class="line">    　　　　<span class="tag">&lt;/<span class="name">define</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    　　　　<span class="tag">&lt;<span class="name">run</span>&gt;</span></span><br><span class="line">    　　　　　　<span class="comment">&lt;!-- 此处用组名来区别 --&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;<span class="name">inclue</span> <span class="attr">name</span>=<span class="string">"groups_name"</span> /&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;<span class="name">exclue</span> <span class="attr">name</span>=<span class="string">"groups_name"</span> /&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;/<span class="name">run</span>&gt;</span></span><br><span class="line">    　　<span class="tag">&lt;/<span class="name">groups</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    　　<span class="comment">&lt;!-- classes的用法，classes中包含类名，类名底下可以包含方法名或排除方法名 --&gt;</span></span><br><span class="line">    　　<span class="tag">&lt;<span class="name">classes</span>&gt;</span></span><br><span class="line">    　　　　<span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"class1"</span>&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;<span class="name">methods</span>&gt;</span></span><br><span class="line">    　　　　　　　　<span class="comment">&lt;!-- 此处用方法名来区别 --&gt;</span></span><br><span class="line">    　　　　　　　　<span class="tag">&lt;<span class="name">inclue</span> <span class="attr">name</span>=<span class="string">"method_name"</span> /&gt;</span></span><br><span class="line">    　　　　　　　　<span class="tag">&lt;<span class="name">exclue</span> <span class="attr">name</span>=<span class="string">"method_name"</span> /&gt;</span></span><br><span class="line">    　　　　　　<span class="tag">&lt;/<span class="name">methods</span>&gt;</span></span><br><span class="line">    　　　　<span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line">    　　<span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="各个参数说明"><a href="#各个参数说明" class="headerlink" title="各个参数说明"></a>各个参数说明</h4><ol><li><p><code>&lt;suite&gt;</code><br>说明：一个<code>xml</code>文件只能有一个<code>&lt;suite&gt;</code>，是一个<code>xml</code>文件的根级<br><code>&lt;suite&gt;</code>由<code>&lt;test&gt;</code>和<code>&lt;parameters&gt;</code>组成</p><p>参数说明：</p><p>参数 |说明|使用方法|参数值</p></li></ol><p>——————————|—|—|—<br><code>name</code> |必选项，<suite>的名字，将出现在reports里|name=”XXX”|suite名字<br><code>junit</code> |是否执行Junit模式(识别setup()等)|junit=”true”|true和false，默认false<br><code>verbose</code> |控制台输出的详细内容等级,0-10级（0无，10最详细）|verbose=”5”|0到10<br><code>parallel</code> |是否在不同的线程并行进行测试，要与thread-count配套使用|parallel=”mehods”|详见表格下内容，默认false<br><code>parent-module</code> |和Guice框架有关，只运行一次，创建一个parent injector给所有guice injectors|<br><code>guice-stage</code> |和Guice框架有关|guice-stage=”DEVELOPMENT”|DEVELOPMENT，PRODUCTION，TOOL，默认”DEVELOPMENT”<br><code>configfailurepolicy</code> |测试失败后是再次执行还是跳过，值skip和continue|configfailurepolicy=”skip”|skip、continue，默认skip<br><code>thread-count</code> |与parallel配套使用，线程池的大小，决定并行线程数量|thread-count=”10”|整数，默认5<br><code>annotations</code> |获取注解，值为javadoc时，使用JavaDoc的注释；否则用JDK5注释|annotations=”javadoc”|javadoc<br><code>time-out</code> |设置parallel时，终止执行单元之前的等待时间（毫秒）|time-out=”10000”|整数，单位毫秒<br><code>skipfailedinvocationcounts</code> |是否跳过失败的调用|skipfailedinvocationcounts=”true”|true和false，默认false<br><code>data-provider-thread-count</code> |并发时data-provider的线程池数量|data-provider-thread-count=”5”|整数<br><code>object-factory</code> |一个实现IObjectFactory接口的类，实例化测试对象|object-factory=”classname”|类名<br><code>allow-return-values</code> |是否允许返回函数值|all-return-values=”true”|true和false<br><code>preserve-order</code> |是否按照排序执行|preserve-order=”true”|true和false，默认true<br><code>group-by-instances</code> |按照实例分组|group-by-instances=”true”|true和false，默认false</suite></p><ol start="2"><li><p><code>&lt;test&gt;</code><br>说明：一个<suite>下可以有多个<test>，可以通过<suite>的parallel=”tests”来进行并行测试，必须和thread-count配套使用，否则是无效参数<br><code>&lt;test&gt;</code>由<code>&lt;parameters&gt;</code>、<code>&lt;groups&gt;</code>、<code>&lt;classes&gt;</code>三部分组成</suite></test></suite></p><p>参数说明：</p><p>参数 |说明|使用方法|参数值</p></li></ol><p>——————————|—|—|—<br><code>name</code> |test的名字，将出现在报告里|name=”testname”|test的名字<br><code>junit</code> |是否按照Junit模式运行|junit=”true”|true和false，默认false<br><code>verbose</code> |控制台输出的详细内容等级,0-10级（0无，10最详细），不在报告显示|verbose=”5”|0到10<br><code>parallel</code> |是否在不同的线程并行进行测试，要与thread-count配套使用|parallel=”mehods”|与suite的parallel一致，默认false<br><code>thread-count</code> |与parallel配套使用，线程池的大小，决定并行线程数量|thread-count=”10”|整数，默认5<br><code>annotations</code> |获取注解，值为javadoc时，使用JavaDoc的注释；否则用JDK5注释|annotations=”javadoc”|javadoc<br><code>time-out</code> |设置parallel时，终止执行单元之前的等待时间（毫秒）|time-out=”10000”|整数，单位毫秒<br><code>enabled</code> |标记是否执行这个test|enabled=”true”|true和false，默认true<br><code>skipfailedinvocationcounts</code> |是否跳过失败的调用|skipfailedinvocationcounts=”true”|true和false，默认false<br><code>preserve-order</code> |是否按照排序执行，如果是true，将按照xml文件中的顺序去执行|preserve-order=”true”|true和false，默认true<br><code>allow-return-values</code> |是否允许返回函数值|all-return-values=”true”|true和false，默认false</p><ol start="3"><li><p><code>parallel</code><br>该参数的值可以是<code>false</code>、<code>methods</code>、<code>tests</code>、<code>classes</code>、<code>instances</code>。默认<code>false</code><br><code>parallel</code>必须和<code>thread-count</code>配套使用，否则相当于无效参数，<code>thread-count</code>决定了并行测试时开启的线程数量</p><ul><li><code>parallel=&quot;mehods&quot;</code> TestNG将并行执行所有的测试方法在不同的线程里</li><li><code>parallel=&quot;tests&quot;</code> TestNG将并行执行在同一个<test>下的所有方法在不同线程里</test></li><li><code>parallel=&quot;classes&quot;</code> TestNG将并行执行在相同<class>下的方法在不同线程里</class></li><li><code>parallel=&quot;instances&quot;</code> TestNG将并行执行相同实例下的所有方法在不同的线程里</li></ul></li><li><p><code>&lt;parameter&gt;</code><br>说明：提供测试数据，有<code>name</code>和<code>value</code>两个参数<br>声明方法：<code>&lt;parameter name = &quot;parameter_name&quot; value = &quot;parameter_value &quot;/&gt;</code><br><code>testng.xml</code>文件中的<code>&lt;parameter&gt;</code>可以声明在<code>&lt;suite&gt;</code>或者<code>&lt;test&gt;</code>级别，在<code>&lt;test&gt;</code>下的<code>&lt;parameter&gt;</code>会覆盖在<code>&lt;suite&gt;</code>下声明的同名变量<br>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestParameterXML</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Parameters</span>(&#123; <span class="string">"parameter_name1"</span>, <span class="string">"parameter_name2"</span> &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createConnection</span><span class="params">(String parameter_name1, <span class="keyword">int</span> parameter_name2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"parameter_name1 : "</span> + dbconfig);</span><br><span class="line">        System.out.println(<span class="string">"parameter_name2 : "</span> + poolsize);</span><br><span class="line"></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        InputStream input = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>&lt;DataProvider&gt;</code></p><p>使用示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.Assert;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.DataProvider;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestParameterDataProvider</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span>(dataProvider = <span class="string">"provideNumbers"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span> expected)</span> </span>&#123;</span><br><span class="line">        Assert.assertEquals(number + <span class="number">10</span>, expected);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DataProvider</span>(name = <span class="string">"provideNumbers"</span>)</span><br><span class="line">    <span class="keyword">public</span> Object[][] provideData() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Object[][] &#123; &#123; <span class="number">10</span>, <span class="number">20</span> &#125;, &#123; <span class="number">100</span>, <span class="number">110</span> &#125;, &#123; <span class="number">200</span>, <span class="number">210</span> &#125; &#125;;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>&lt;groups&gt;</code><br>说明：要运行的组，可以自定义一个组，可以包括要执行的，还排除要执行的方法。必须和<code>&lt;classes&gt;</code>配套使用，从下面的类中找到对应名字的方法<br><code>&lt;groups&gt;</code>由<code>&lt;difine&gt;</code>和<code>&lt;run&gt;</code>、<code>&lt;dependencies&gt;</code>三部分组成。<code>&lt;diffine&gt;</code>可以将<code>group</code>组成一个新组，包括要执行和不执行的大组；<code>&lt;run&gt;</code>要执行的方法；<code>&lt;dependencies&gt;</code>指定了某<code>group</code>需要依赖的<code>group</code>（比如下面的例子，<code>group1</code>需要依赖<code>group2</code>和<code>group3</code>先执行）。</p><p>声明方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groups</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">define</span> <span class="attr">name</span> =<span class="string">"all"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span> =<span class="string">"testgroup1"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span> =<span class="string">"testgroup2'/&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">     &lt;/define&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">     &lt;run&gt;</span></span></span><br><span class="line"><span class="tag"><span class="string">          &lt;include name ="</span><span class="attr">all</span>"/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span> =<span class="string">"testmethod1"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span>=<span class="string">"testmethod2"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">run</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span> =<span class="string">"group1"</span> <span class="attr">depends-on</span>=<span class="string">"goup2 group3"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">groups</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>&lt;classes&gt;</code><br>说明：方法选择器，要执行的方法写在这里，参数有<code>name</code>和<code>priority</code>。<br>注释：<br>1.<classes>下必须写要执行的<class>，否则不会执行任何内容，如果填写了class没有写methods，会按照填写的class的下的注释@Test去执行所有的方法<br>2.<classes>下的<methods>如果填写了<include>，那只会执行所填写的方法，没有填写的方法不会去执行</include></methods></classes></class></classes></p><p>声明方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">classes</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"要执行的class名"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">methods</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span> =<span class="string">"要执行的方法名"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">methods</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">class</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>&lt;packages&gt;</code><br>说明：<code>&lt;packages&gt;</code>指定包名代替类名。查找包下的所有包含<code>testNG annotation</code>的类进行测试</p><p>声明方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packages</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"packagename"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"packagename"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"methodname"</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclude</span> <span class="attr">name</span>=<span class="string">"methodname"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">packages</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>&lt;listener&gt;</code><br>说明：指定<code>listeners</code>，这个<code>class</code>必须继承自<code>org.testng.ITestNGListener</code>。在<code>java</code>中使用<code>@Listeners({com.example.MyListener.class,com.example.MyMethodInterceptor.class})</code>的注释也可以有同样效果</p><p>声明方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listeners</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.example.MyListener"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.example.MyMehodIntercepor"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listeners</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="忽略测试"><a href="#忽略测试" class="headerlink" title="忽略测试"></a>忽略测试</h3><p>在测试用例写好，但是并没有调试或者说还没有测试通过时，希望先不要执行该测试，可以使用<code>@Test(enabled = false)</code>来忽略这个测试方法。默认情况下，<code>enabled</code>参数是<code>true</code>。</p><h3 id="超时测试"><a href="#超时测试" class="headerlink" title="超时测试"></a>超时测试</h3><p><code>超时</code>表示如果单元测试花费的时间超过指定的毫秒数，那么<code>TestNG</code>将会终止它，并标记为失败。<br><code>超时</code>也可用于性能测试，以确保方法在合理的时间内返回。<br>示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yiibai;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.Test;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestTimeout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span>(timeOut = <span class="number">5000</span>) <span class="comment">// time in mulliseconds</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testThisShouldPass</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">4000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span>(timeOut = <span class="number">1000</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testThisShouldFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="comment">// do nothing</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="设置失败用例重跑"><a href="#设置失败用例重跑" class="headerlink" title="设置失败用例重跑"></a>设置失败用例重跑</h3><p>对于<code>TestNG</code>，首先重写接口<code>IRetryAnalyzer</code>，重写该接口中的<code>retry</code>方法，自定义需要重试的次数<code>maxRetryCount</code>，如果一个用例失败，自动进入<code>retry</code>方法，在此方法中判断已经重试的次数是否小于<code>maxRetryCount</code>，如果是，则返回<code>true</code>，则自动再次执行失败的用例，如果是失败的用例再次执行还是失败，那么还是自动调用<code>retry</code>方法，直到到重试次数大于设定的<code>maxRetryCount</code>了，则返回<code>false</code>，那么系统就是判定该方法失败了。<br>失败用例重跑方法代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shadow.qa.common.listeners;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.shadow.qa.common.tools.BT;</span><br><span class="line"><span class="keyword">import</span> org.testng.IRetryAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.testng.ITestResult;</span><br><span class="line"><span class="keyword">import</span> org.testng.Reporter;</span><br><span class="line"><span class="keyword">import</span> org.testng.log4testng.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestNGRetryAnalyzer</span> <span class="keyword">implements</span> <span class="title">IRetryAnalyzer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Logger logger = Logger.getLogger(TestNGRetryAnalyzer<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> retryCount = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> maxRetryCount = Integer.parseInt(BT.GetProv(<span class="string">"/config/application.properties"</span>, <span class="string">"maxRetryCount"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">retry</span><span class="params">(ITestResult iTestResult)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (retryCount &lt; maxRetryCount) &#123;</span><br><span class="line">            String message = <span class="string">"方法&lt;"</span> + iTestResult.getName() + <span class="string">"&gt;执行失败，重试第"</span> + retryCount + <span class="string">"次"</span>;</span><br><span class="line">            logger.info(message);</span><br><span class="line">            Reporter.setCurrentTestResult(iTestResult);</span><br><span class="line">            Reporter.log(message);</span><br><span class="line">            retryCount++;</span><br><span class="line">            BT.sleep(<span class="number">3000</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写了<code>TestNG</code>的<code>IRetryAnalyzer</code>接口，那么就需要让系统调用我们重写的接口，需要让<code>TestNG</code>调用，还需要对<code>TestNG.xml</code>中的注解接口进行重写。先判断<code>TestNG.xml</code>中是否有重试分析器，如果没有，则调用我们自己重写类。<br>失败重跑监听器代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shadow.qa.common.listeners;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.testng.IAnnotationTransformer;</span><br><span class="line"><span class="keyword">import</span> org.testng.IRetryAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.testng.annotations.ITestAnnotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetryListener</span> <span class="keyword">implements</span> <span class="title">IAnnotationTransformer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transform</span><span class="params">(ITestAnnotation iTestAnnotation, Class aClass, Constructor constructor, Method method)</span> </span>&#123;</span><br><span class="line">        IRetryAnalyzer iRetryAnalyzer= iTestAnnotation.getRetryAnalyzer();</span><br><span class="line">        <span class="keyword">if</span>(iRetryAnalyzer==<span class="keyword">null</span>)&#123;</span><br><span class="line">            iTestAnnotation.setRetryAnalyzer(TestNGRetryAnalyzer<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法一：在<code>TestNG</code>的执行文件中配置<br>在<code>TestNG</code>的执行文件的<code>suite</code>标签中，增加一个监听器，用于监听<code>suite</code>下所有的用例执行情况。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">"接口测试"</span> <span class="attr">verbose</span>=<span class="string">"1"</span>  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listeners</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener</span> <span class="attr">class-name</span>=<span class="string">"com.shadow.qa.common.listeners.RetryListener"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listeners</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">"网管层接口"</span> <span class="attr">preserve-order</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">packages</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.shadow.qa.testCases.hhh.*"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">packages</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用方法二：对特定的用例进行设置<br>在用例的<code>@Test</code>中，增加失败用例重跑的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span>(dataProvider = <span class="string">"data"</span>, description = <span class="string">"Test"</span>, retryAnalyzer = TestNGRetryAnalyzer<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><h4 id="使用groups时，-BeforeClass、-BeforeSuite被跳过"><a href="#使用groups时，-BeforeClass、-BeforeSuite被跳过" class="headerlink" title="使用groups时，@BeforeClass、@BeforeSuite被跳过"></a>使用<code>groups</code>时，<code>@BeforeClass</code>、<code>@BeforeSuite</code>被跳过</h4><p>有两种解决方式：</p><ol><li><p>在<code>@BeforeClass</code>中添加<code>alwaysRun=true</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">classTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@BeforeClass</span>(alwaysRun=<span class="keyword">true</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initTest</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span>(groups = &#123;<span class="string">"testGroup"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>testNG</code>文件中包含了<code>该class</code>中存在的<code>groups</code>时，<code>该class</code>中的<code>@BeforeClass</code>才会执行，所以不必担心在所有的<code>@BeforeClass</code>中都添加<code>alwaysRun=true</code>会造成没必要的<code>@BeforeClass</code>执行的问题。</p></li><li><p>在<code>@BeforeClass</code>中也添加需要的<code>groups</code>参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">classTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@BeforeClass</span>(groups = &#123;<span class="string">"testGroup"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initTest</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span>(groups = &#123;<span class="string">"testGroup"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testMethod</span><span class="params">()</span> </span>&#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h4 id="执行某个包下所有包含某个分组的用例"><a href="#执行某个包下所有包含某个分组的用例" class="headerlink" title="执行某个包下所有包含某个分组的用例"></a>执行某个包下所有包含某个分组的用例</h4><p>testNG的xml配置文件如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">suite</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://testng.org/testng-1.0.dtd"</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">"接口测试"</span> <span class="attr">verbose</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">"网管层接口"</span> <span class="attr">preserve-order</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groups</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">run</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span> <span class="attr">name</span>=<span class="string">"testGroup"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">run</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">groups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">packages</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.shadow.qa.testCases.api.*"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">packages</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多数文档说<code>groups</code>必须和<code>classes</code>配合使用，但是<code>class</code>是无法用通配符的，会造成要枚举所有的<code>class</code>，这样就会非常麻烦；<br>实际上<code>groups</code>也可以和<code>packages</code>配合使用，<code>packages</code>可以使用通配符，这样就大大省去了去找所有有需要的<code>groups</code>的<code>class</code>的麻烦</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;TestNG介绍&quot;&gt;&lt;a href=&quot;#TestNG介绍&quot; class=&quot;headerlink&quot; title=&quot;TestNG介绍&quot;&gt;&lt;/a&gt;&lt;code&gt;TestNG&lt;/code&gt;介绍&lt;/h3&gt;&lt;p&gt;&lt;code&gt;TestNG&lt;/code&gt;是一个开源自动化测试框架；&lt;code&gt;TestNG&lt;/code&gt;表示&lt;strong&gt;下一代&lt;/strong&gt;(&lt;strong&gt;N&lt;/strong&gt;ext &lt;strong&gt;G&lt;/strong&gt;eneration的首字母)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="TestNG" scheme="http://shadow000902.space/categories/TestNG/"/>
    
    
      <category term="java" scheme="http://shadow000902.space/tags/java/"/>
    
      <category term="testng" scheme="http://shadow000902.space/tags/testng/"/>
    
  </entry>
  
  <entry>
    <title>Vue入门实践学习总结</title>
    <link href="http://shadow000902.space/2020/03/03/2020-03-03-Simple-Summary-of-Vue-Practice/"/>
    <id>http://shadow000902.space/2020/03/03/2020-03-03-Simple-Summary-of-Vue-Practice/</id>
    <published>2020-03-03T06:17:26.000Z</published>
    <updated>2021-10-20T03:18:24.012Z</updated>
    
    <content type="html"><![CDATA[<h3 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h3><p><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">官网</a><br><a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">官方入门教程</a><br>VuePC端UI组件库：<a href="https://element.eleme.cn/" target="_blank" rel="noopener">Element</a>、<a href="https://www.iviewui.com/" target="_blank" rel="noopener">iView</a>、[vue-element-admin](<a href="https://panjiachen.github.io/vue-element" target="_blank" rel="noopener">https://panjiachen.github.io/vue-element</a><br>-admin-site/#/)、<a href="https://www.jianshu.com/p/669d3e41dca6" target="_blank" rel="noopener">更多</a></p><a id="more"></a><h3 id="列表增加筛选项"><a href="#列表增加筛选项" class="headerlink" title="列表增加筛选项"></a>列表增加筛选项</h3><ol><li><p>列表头增加筛选项『下拉选择、输入框』<br>在<template>……</template>中增加如下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label&#x3D;&quot;角色&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    增加角色筛选</span><br><span class="line">    筛选下拉项来源为：roleData，从接口获取赋值</span><br><span class="line">    示例[&#123;role_id: 1, role_name: &quot;测试人员&quot;&#125;, &#123;role_id: 2, role_name: &quot;管理员&quot;&#125;]</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;el-select v-model&#x3D;&quot;form.role_id&quot;</span><br><span class="line">               placeholder&#x3D;&quot;请选择角色&quot;</span><br><span class="line">               clearable</span><br><span class="line">               filterable</span><br><span class="line">               @change&#x3D;&quot;initUserChoice&quot;</span><br><span class="line">               value-key&#x3D;&quot;role_id&quot;</span><br><span class="line">               style&#x3D;&quot;padding-right:3px&quot;&gt;</span><br><span class="line">        &lt;el-option</span><br><span class="line">                v-for&#x3D;&quot;(item) in roleData&quot;</span><br><span class="line">                :key&#x3D;&quot;item.role_id&quot;</span><br><span class="line">                :label&#x3D;&quot;item.role_name&quot;</span><br><span class="line">                :value&#x3D;&quot;item.role_id&quot;&gt;</span><br><span class="line">        &lt;&#x2F;el-option&gt;</span><br><span class="line">    &lt;&#x2F;el-select&gt;</span><br><span class="line">&lt;&#x2F;el-form-item&gt;</span><br><span class="line">&lt;el-form-item label&#x3D;&quot;状态&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    增加状态筛选</span><br><span class="line">    筛选下拉项来源为：userStatusList，筛选值为自己自定义的list</span><br><span class="line">    示例：</span><br><span class="line">        [</span><br><span class="line">            &#123;</span><br><span class="line">                &#39;id&#39;: &#39;0&#39;,</span><br><span class="line">                &#39;name&#39;: &#39;冻结&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &#39;id&#39;: &#39;1&#39;,</span><br><span class="line">                &#39;name&#39;: &#39;正常&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;el-select</span><br><span class="line">            v-model&#x3D;&quot;form.status&quot;</span><br><span class="line">            placeholder&#x3D;&quot;请选择状态&quot;</span><br><span class="line">            clearable</span><br><span class="line">            filterable</span><br><span class="line">            @change&#x3D;&quot;initUserChoice&quot;</span><br><span class="line">            value-key&#x3D;&quot;status&quot;</span><br><span class="line">            style&#x3D;&quot;padding-right: 3px&quot;</span><br><span class="line">    &gt;&lt;el-option</span><br><span class="line">            v-for&#x3D;&quot;item in userStatusList&quot;</span><br><span class="line">            :key&#x3D;&quot;item.id&quot;</span><br><span class="line">            :label&#x3D;&quot;item.name&quot;</span><br><span class="line">            :value&#x3D;&quot;item.id&quot;&gt;</span><br><span class="line">    &lt;&#x2F;el-option&gt;</span><br><span class="line">    &lt;&#x2F;el-select&gt;</span><br><span class="line">&lt;&#x2F;el-form-item&gt;</span><br></pre></td></tr></table></figure></li><li><p>筛选字段定义<br>①定义筛选字段所需的自定义下来列表项<br>②增加两个筛选的值的字段定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                userStatusList: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &#39;id&#39;: &#39;0&#39;,</span><br><span class="line">                        &#39;name&#39;: &#39;冻结&#39;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &#39;id&#39;: &#39;1&#39;,</span><br><span class="line">                        &#39;name&#39;: &#39;正常&#39;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                form: &#123;</span><br><span class="line">                    role_id: &#39;&#39;,</span><br><span class="line">                    status: &#39;&#39;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li><li><p>筛选接口增加筛选字段的传参<br>在请求接口中新增两个字段：role_id、status</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    export default &#123;</span><br><span class="line">        methods: &#123;</span><br><span class="line">            findUser() &#123;</span><br><span class="line">                var roleItem &#x3D; &#39;&#39;;</span><br><span class="line">                this.$axios.post(this.$api.findUserApi, &#123;</span><br><span class="line">                    &#39;role_id&#39;: this.form.role_id,</span><br><span class="line">                    &#39;status&#39;: this.form.status,</span><br><span class="line">                &#125;).then((response) &#x3D;&gt; &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                )</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></li></ol><h3 id="文本换行"><a href="#文本换行" class="headerlink" title="文本换行"></a>文本换行</h3><ol><li><p>通过 <code>css属性</code>实现</p><p>示例1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style&#x3D;&quot;white-space: pre-wrap;&quot; v-text&#x3D;&#39;item.des&#39;&gt;&lt;&#x2F;p&gt;</span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-row&gt;</span><br><span class="line">   &lt;el-col&gt;职位描述：&lt;&#x2F;el-col&gt;</span><br><span class="line">   &lt;el-col style&#x3D;&quot;white-space: pre-wrap;&quot;&gt;&#123;&#123;resumeDetails.postDescribe&#125;&#125;&lt;&#x2F;el-col&gt;</span><br><span class="line">&lt;&#x2F;el-row&gt;</span><br></pre></td></tr></table></figure><p><code>white-space</code>的各属性详情可以阅读<a href="https://www.w3school.com.cn/cssref/pr_text_white-space.asp" target="_blank" rel="noopener">这里</a></p></li><li><p>通过<code>v-html</code>实现</p><p>需要先把字符串里的<code>\n</code>替换为<code>&lt;br&gt;</code>，然后用<code>v-html</code>指令渲染字符串为<code>innerHTML</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; JS部分</span><br><span class="line">this.text &#x3D; res.data.replace(&#x2F;\n&#x2F;g, &#39;&lt;br&gt;&#39;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; HTML部分</span><br><span class="line">&lt;div v-html&#x3D;&quot;text&quot;&gt;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;学习资料&quot;&gt;&lt;a href=&quot;#学习资料&quot; class=&quot;headerlink&quot; title=&quot;学习资料&quot;&gt;&lt;/a&gt;学习资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://cn.vuejs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://cn.vuejs.org/v2/guide/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方入门教程&lt;/a&gt;&lt;br&gt;VuePC端UI组件库：&lt;a href=&quot;https://element.eleme.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Element&lt;/a&gt;、&lt;a href=&quot;https://www.iviewui.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iView&lt;/a&gt;、[vue-element-admin](&lt;a href=&quot;https://panjiachen.github.io/vue-element&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://panjiachen.github.io/vue-element&lt;/a&gt;&lt;br&gt;-admin-site/#/)、&lt;a href=&quot;https://www.jianshu.com/p/669d3e41dca6&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;更多&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue" scheme="http://shadow000902.space/categories/Vue/"/>
    
    
      <category term="vue" scheme="http://shadow000902.space/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>性能压测监控环境搭建</title>
    <link href="http://shadow000902.space/2019/11/19/2019-11-19-Grafana-Prometheus-Performance-Monitor-Platform/"/>
    <id>http://shadow000902.space/2019/11/19/2019-11-19-Grafana-Prometheus-Performance-Monitor-Platform/</id>
    <published>2019-11-19T07:35:45.000Z</published>
    <updated>2021-08-20T08:04:08.536Z</updated>
    
    <content type="html"><![CDATA[<h3 id="几个关键地址"><a href="#几个关键地址" class="headerlink" title="几个关键地址"></a>几个关键地址</h3><ol><li><p>包下载地址：<a href="https://prometheus.io/download/" target="_blank" rel="noopener">官网下载地址</a></p><ul><li>监控服务：<a href="https://github.com/prometheus/prometheus/releases/download/v2.14.0/prometheus-2.14.0.linux-amd64.tar.gz" target="_blank" rel="noopener">prometheus</a></li><li>服务器监控服务：<a href="https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz" target="_blank" rel="noopener">node_exporter</a></li><li>MySQL监控服务：<a href="https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz" target="_blank" rel="noopener">mysqld_exporter</a></li><li>JVM监控服务：<a href="https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar" target="_blank" rel="noopener">jmx_exporter</a></li></ul><a id="more"></a></li></ol><h3 id="监控服务部署"><a href="#监控服务部署" class="headerlink" title="监控服务部署"></a><code>监控服务</code>部署</h3><p>下载上述的监控服务包，并解压，可以得到如下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@su-007:~/tools/prometheus-2.13.1.linux-amd64<span class="comment"># ll</span></span><br><span class="line">total 136300</span><br><span class="line">drwxr-xr-x  5 3434 3434     4096 Nov 22 09:35 ./</span><br><span class="line">drwxr-xr-x  5 root root     4096 Nov  6 18:29 ../</span><br><span class="line">drwxr-xr-x  2 3434 3434     4096 Oct 17 23:09 console_libraries/</span><br><span class="line">drwxr-xr-x  2 3434 3434     4096 Oct 17 23:09 consoles/</span><br><span class="line">drwxr-xr-x 24 root root     4096 Nov 23 23:00 data/</span><br><span class="line">-rw-r--r--  1 3434 3434    11357 Oct 17 23:09 LICENSE</span><br><span class="line">-rw-r--r--  1 root root   169283 Nov 23 23:00 nohup.log</span><br><span class="line">-rw-r--r--  1 3434 3434     2770 Oct 17 23:09 NOTICE</span><br><span class="line">-rwxr-xr-x  1 3434 3434 78646149 Oct 17 21:17 prometheus*</span><br><span class="line">-rw-r--r--  1 3434 3434     1531 Nov 22 09:35 prometheus.yml</span><br><span class="line">-rwxr-xr-x  1 3434 3434 47209942 Oct 17 21:18 promtool*</span><br><span class="line">-rwxr-xr-x  1 3434 3434 13493572 Oct 17 21:19 tsdb*</span><br></pre></td></tr></table></figure><p>其中<code>prometheus*</code>为服务启动脚本文件，<code>prometheus.yml</code>为普罗米修斯监控系统的配置文件</p><p>全量配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># my global config</span></span><br><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">scrape_interval:</span>     <span class="string">15s</span> <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">15s</span> <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line"><span class="attr">alerting:</span></span><br><span class="line">  <span class="attr">alertmanagers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="comment"># - alertmanager:9093</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span></span><br><span class="line"><span class="attr">rule_files:</span></span><br><span class="line">  <span class="comment"># - "first_rules.yml"</span></span><br><span class="line">  <span class="comment"># - "second_rules.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it's Prometheus itself.</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'prometheus'</span></span><br><span class="line">    <span class="comment"># metrics_path defaults to '/metrics'</span></span><br><span class="line">    <span class="comment"># scheme defaults to 'http'.</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">['10.10.10.10:9090']</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">"mysql"</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">["10.10.10.11:9104"]</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">"node"</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span> <span class="string">["10.10.10.10:9100","10.10.10.11:9100","10.10.10.12:9100"]</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">'java'</span></span><br><span class="line">    <span class="attr">scrape_interval:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">static_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">targets:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'10.10.10.11:2031'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'10.10.10.11:2032'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'10.10.10.11:2035'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'10.10.10.12:52031'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'10.10.10.12:52032'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'10.10.10.12:52035'</span></span><br></pre></td></tr></table></figure><p>其中主要使用了几个模块的监控，没有会用报警，有需要的话，可以自己尝试。<br>几个模块的定义介绍：<br>- <code>job_name: &#39;prometheus&#39;</code>：是监控程序本身，用于监控检测被监控系统是否正确连接，默认端口9090<br>- <code>job_name: &quot;mysql&quot;</code>：监控mysql服务器的情况，默认端口9104<br>- <code>job_name: &quot;node&quot;</code>：监控服务器状态，默认端口9100<br>- <code>job_name: &#39;java&#39;</code>：JVM监控，这里的端口是自己在启动tomcat应用服务时，在启动脚本中自己定义的端口号<br>这里的<code>job_name</code>都是可以自己定义，主要用来区分几个监控模块</p><p>配置好配置文件后，就可以启动监控服务了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./prometheus &gt;&gt; ./nohup.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>启动脚本，设置后台运行，并把运行日志写进<code>nohup.log</code>文件中<br>启动后，就可以在浏览器中访问<code>10.10.10.10:9090/targets</code>查看各个节点的状态了，确保<code>State</code>是<code>UP</code>，不然就可能有问题，需要排查了</p><img src="/2019/11/19/2019-11-19-Grafana-Prometheus-Performance-Monitor-Platform/%E7%9B%91%E6%8E%A7%E8%8A%82%E7%82%B9%E6%83%85%E5%86%B5.png" title="监控节点情况"><h3 id="服务器监控部署"><a href="#服务器监控部署" class="headerlink" title="服务器监控部署"></a><code>服务器</code>监控部署</h3><p>下载上述的服务器监控服务包，并解压，可以得到如下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@su-007:~/tools/node_exporter-0.18.1.linux-amd64<span class="comment"># ll</span></span><br><span class="line">total 16512</span><br><span class="line">drwxr-xr-x 2 3434 3434     4096 Nov  5 14:53 ./</span><br><span class="line">drwxr-xr-x 5 root root     4096 Nov  6 18:29 ../</span><br><span class="line">-rw-r--r-- 1 3434 3434    11357 Jun  5 00:50 LICENSE</span><br><span class="line">-rwxr-xr-x 1 3434 3434 16878582 Jun  5 00:41 node_exporter*</span><br><span class="line">-rw-r--r-- 1 root root     3439 Nov  5 14:53 nohup.log</span><br><span class="line">-rw-r--r-- 1 3434 3434      463 Jun  5 00:50 NOTICE</span><br></pre></td></tr></table></figure><p>这里面东西很简单，它不需要配置文件，只有一个关键的<code>node_exporter*</code>启动脚本文件，直接启动脚本就OK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./node_exporter &gt;&gt; ./nohup.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>在浏览器访问<code>10.10.10.10:9100/metrics</code>，可以看到监控数据，就说明服务启动成功了</p><h3 id="MySQL监控部署"><a href="#MySQL监控部署" class="headerlink" title="MySQL监控部署"></a><code>MySQL</code>监控部署</h3><p>下载上述的MySQL监控服务包，并解压，可以得到如下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@<span class="built_in">test</span>-01:~/tools/mysqld_exporter-0.12.1.linux-amd64$ ll</span><br><span class="line">total 14500</span><br><span class="line">drwxr-xr-x  2 root root     4096 Nov  6 17:43 ./</span><br><span class="line">drwxrwxr-x 15 root root     4096 Nov  6 18:02 ../</span><br><span class="line">-rw-r--r--  1 root root    11325 Jul 29 20:47 LICENSE</span><br><span class="line">-rw-rw-r--  1 root root       51 Nov  6 17:38 .my.cnf</span><br><span class="line">-rwxr-xr-x  1 root root 14813452 Jul 29 20:36 mysqld_exporter*</span><br><span class="line">-rw-rw-r--  1 root root      529 Nov  6 16:58 nohup.log</span><br><span class="line">-rw-r--r--  1 root root       65 Jul 29 20:47 NOTICE</span><br></pre></td></tr></table></figure><p>默认只有一个<code>mysqld_exporter*</code>启动脚本文件。<br><code>mysqld_exporter</code>需要连接到Mysql，所以需要Mysql的权限，我们先为它创建用户并赋予所需的权限。<br>命令行登录mysql，执行如下命令：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; GRANT REPLICATION CLIENT,PROCESS ON *.* TO 'mysql_monitor'@'localhost' identified by 'mysql_monitor';</span><br><span class="line">mysql&gt; GRANT SELECT ON *.* TO 'mysql_monitor'@'localhost';</span><br></pre></td></tr></table></figure><p>创建<code>mysqld_exporter</code>执行的配置文件<code>.my.cnf</code>，写入如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">user=mysql_monitor</span><br><span class="line">password=mysql_monitor</span><br></pre></td></tr></table></figure><p>启动监控服务并调用脚本文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./mysqld_exporter --config.my-cnf=./.my.cnf &gt;&gt; ./nohup.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>在浏览器访问<code>10.10.10.11:9104/metrics</code>，可以看到监控数据，就说明服务启动成功了</p><h3 id="JVM监控部署"><a href="#JVM监控部署" class="headerlink" title="JVM监控部署"></a><code>JVM</code>监控部署</h3><p>下载上述的jar文件，创建配置文件<code>jmx_exporter.yml</code><br>配置文件内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---    # ---前的#要去掉</span></span><br><span class="line"><span class="attr">lowercaseOutputLabelNames:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">lowercaseOutputName:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">whitelistObjectNames:</span> <span class="string">["java.lang:type=OperatingSystem"]</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">'java.lang&lt;type=OperatingSystem&gt;&lt;&gt;((?!process_cpu_time)\w+):'</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">os_$1</span></span><br><span class="line">   <span class="attr">type:</span> <span class="string">GAUGE</span></span><br><span class="line">   <span class="attr">attrNameSnakeCase:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>在启动tomcat的脚本中，添加参数<code>-javaagent:/home/shadow/tools/JMX/jmx_prometheus_javaagent-0.12.0.jar=3080:/home/shadow/tools/JMX/jmx_exporter.yml</code><br>在启动脚本中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OPTS=<span class="string">"-Xms2g -Xmx2g -javaagent:/home/shadow/tools/JMX/jmx_prometheus_javaagent-0.12.0.jar=3080:/home/shadow/tools/JMX/jmx_exporter.yml"</span></span><br></pre></td></tr></table></figure><p>这里定义的3080端口，既是<code>prometheus</code>监控服务获取JVM参数的端口<br>还有一点需要注意的是：<code>jmx_prometheus_javaagent-0.12.0.jar</code>和<code>jmx_exporter.yml</code>存放的位置必须和tomcat的位置在同一用户下，不然可能会出现因为权限问题，无法调用的情况。<br>在浏览器访问<code>10.10.10.11:3080/metrics</code>，可以看到监控数据，就说明服务启动成功了</p><h3 id="Grafana各个监控面板配置"><a href="#Grafana各个监控面板配置" class="headerlink" title="Grafana各个监控面板配置"></a><code>Grafana</code>各个监控面板配置</h3><p>每个不同类型的监控，需要有不同类型的面板，这里不自己配置面板，而是从外部导入，<a href="https://grafana.com/grafana/dashboards" target="_blank" rel="noopener">官方Dashboards平台</a></p><ol><li>服务器监控面板：选择<code>主机基础监控(cpu，内存，磁盘，网络)</code>，<code>ID</code>为<code>9276</code></li><li>MySQL监控面板：选择<code>MySQL Overview</code>，<code>ID</code>为<code>7362</code></li><li>JVM监控面板：选择<code>JMX Overview</code>，<code>ID</code>为<code>3457</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;几个关键地址&quot;&gt;&lt;a href=&quot;#几个关键地址&quot; class=&quot;headerlink&quot; title=&quot;几个关键地址&quot;&gt;&lt;/a&gt;几个关键地址&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;包下载地址：&lt;a href=&quot;https://prometheus.io/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官网下载地址&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;监控服务：&lt;a href=&quot;https://github.com/prometheus/prometheus/releases/download/v2.14.0/prometheus-2.14.0.linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;prometheus&lt;/a&gt;&lt;/li&gt;&lt;li&gt;服务器监控服务：&lt;a href=&quot;https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;node_exporter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;MySQL监控服务：&lt;a href=&quot;https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mysqld_exporter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;JVM监控服务：&lt;a href=&quot;https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jmx_exporter&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="http://shadow000902.space/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="性能测试" scheme="http://shadow000902.space/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="shell" scheme="http://shadow000902.space/tags/shell/"/>
    
      <category term="performance" scheme="http://shadow000902.space/tags/performance/"/>
    
      <category term="prometheus" scheme="http://shadow000902.space/tags/prometheus/"/>
    
      <category term="influxDB" scheme="http://shadow000902.space/tags/influxDB/"/>
    
      <category term="grafana" scheme="http://shadow000902.space/tags/grafana/"/>
    
  </entry>
  
  <entry>
    <title>Linux&amp;Mac控制台操作</title>
    <link href="http://shadow000902.space/2019/10/16/2019-10-16-Linux-Cursor-Control/"/>
    <id>http://shadow000902.space/2019/10/16/2019-10-16-Linux-Cursor-Control/</id>
    <published>2019-10-16T08:14:16.000Z</published>
    <updated>2021-08-20T08:04:08.503Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>VIM编辑下，控制光标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令模式下，移动光标到段位</span></span><br><span class="line"><span class="built_in">shift</span>+a</span><br><span class="line"><span class="comment"># 命令模式下，移动光标到文尾</span></span><br><span class="line"><span class="built_in">shift</span>+g</span><br></pre></td></tr></table></figure><a id="more"></a></li><li><p>MAC下，命令行控制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ctrl + a            移动到命令行首</span><br><span class="line">ctrl + e            移动到行尾</span><br><span class="line">ctrl + b            光标后退</span><br><span class="line">ctrl + f            光标前进</span><br><span class="line">alt + f             光标前进一个单词</span><br><span class="line">alt + b             光标后退一格单词</span><br><span class="line">ctrl + ]            从当前光标往后搜索字符串，用于快速移动到该字符串</span><br><span class="line">ctrl + alt + ]      从当前光标往前搜索字符串，用于快速移动到该字符串</span><br><span class="line">ctrl + H            删除光标的前一个字符</span><br><span class="line">ctrl + D            删除当前光标所在字符</span><br><span class="line">ctrl + K            删除光标之后所有单词</span><br><span class="line">ctrl + U            删除当前输入的命令</span><br><span class="line">ctrl + w            删除光标钱的单词</span><br><span class="line">ctrl + y            黏贴删除的内容</span><br><span class="line">alt + .             粘贴上一条命令的最后一个参数</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;&lt;li&gt;&lt;p&gt;VIM编辑下，控制光标&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 命令模式下，移动光标到段位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shift&lt;/span&gt;+a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 命令模式下，移动光标到文尾&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;shift&lt;/span&gt;+g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://shadow000902.space/categories/Linux/"/>
    
    
      <category term="linux" scheme="http://shadow000902.space/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>基于Docker&amp;Selenium的WEB自动化平台搭建</title>
    <link href="http://shadow000902.space/2019/09/19/2019-09-19-Docker-Selenium-environment-build/"/>
    <id>http://shadow000902.space/2019/09/19/2019-09-19-Docker-Selenium-environment-build/</id>
    <published>2019-09-18T16:24:23.000Z</published>
    <updated>2021-08-20T08:04:08.536Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装<code>Docker</code></h3><p><a href="https://download.docker.com/mac/stable/Docker.dmg" target="_blank" rel="noopener">MAC平台</a><br><a href="https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe" target="_blank" rel="noopener">Windows平台</a><br><a href="https://www.runoob.com/docker/ubuntu-docker-install.html" target="_blank" rel="noopener">Ubuntu平台</a><br><a href="https://blog.csdn.net/xinzhifu1/article/details/83579256" target="_blank" rel="noopener">Centos7平台</a></p><a id="more"></a><h3 id="下载主hub镜像selenium-hub"><a href="#下载主hub镜像selenium-hub" class="headerlink" title="下载主hub镜像selenium/hub"></a>下载主<code>hub</code>镜像<code>selenium/hub</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">docker pull selenium/hub</span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker run -d -P --name selenium-hub selenium/hub</span><br></pre></td></tr></table></figure><p><code>-d</code> 表示容器以守护态（Daemonized）形式运行。<br><code>-P</code> 表示 Docker 会随机映射一个 49000~49900 的端口到内部容器开放的网络端口。</p><h3 id="下载主node-chrome镜像selenium-node-chrome"><a href="#下载主node-chrome镜像selenium-node-chrome" class="headerlink" title="下载主node chrome镜像selenium/node-chrome"></a>下载主<code>node chrome</code>镜像<code>selenium/node-chrome</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">docker pull selenium/node-chrome</span><br><span class="line"><span class="comment"># 启动容器</span></span><br><span class="line">docker run -d --link selenium-hub:hub selenium/node-chrome</span><br></pre></td></tr></table></figure><p><code>--link</code> 通过 link 关联<code>selenium-hub</code>容器，并为其设置了别名<code>hub</code></p><h3 id="查看容器"><a href="#查看容器" class="headerlink" title="查看容器"></a>查看容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                     PORTS                                            NAMES</span><br><span class="line">65bdddeb9293        selenium/node-chrome   <span class="string">"/opt/bin/entry_poin…"</span>   17 seconds ago      Up 16 seconds                                                               intelligent_mirzakhani</span><br><span class="line">a280e0bce3a4        selenium/hub           <span class="string">"/opt/bin/entry_poin…"</span>   38 seconds ago      Up 36 seconds              0.0.0.0:32768-&gt;4444/tcp                          selenium-hub</span><br></pre></td></tr></table></figure><p><code>Selenium/hub</code>容器的端口号为<code>4444</code>，对<code>MAC</code>映射的端口为<code>32768</code>，前面通过<code>-P</code>参数自动分配。</p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>selenium Grid脚本 -&gt; ubuntu(32768) -&gt; Hub容器(4444) -&gt; Node Chrome 容器</p><h3 id="创建Grid测试脚本与运行"><a href="#创建Grid测试脚本与运行" class="headerlink" title="创建Grid测试脚本与运行"></a>创建Grid测试脚本与运行</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grid_demo.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line">driver = webdriver.Remote(</span><br><span class="line">command_executor=<span class="string">'http://127.0.0.1:32768/wd/hub'</span>,</span><br><span class="line">desired_capabilities=&#123;<span class="string">'browserName'</span>: <span class="string">'chrome'</span>&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">'https://www.baidu.com'</span>)</span><br><span class="line">print(<span class="string">"get baidu"</span>)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(<span class="string">"kw"</span>).send_keys(<span class="string">"docker selenium"</span>)</span><br><span class="line">driver.find_element_by_id(<span class="string">"su"</span>).click()</span><br><span class="line"></span><br><span class="line">sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">driver.get_screenshot_as_file(<span class="string">"~/baidu_img.png"</span>)</span><br><span class="line"></span><br><span class="line">driver.quit()</span><br><span class="line">print(<span class="string">"end..."</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=chrome -p 5902:5900 \</span><br><span class="line">    -e NODE_MAX_INSTANCES=5 \</span><br><span class="line">    -e NODE_MAX_SESSION=5 \</span><br><span class="line">    -e NODE_REGISTER_CYCLE=5000 \</span><br><span class="line">    -e DBUS_SESSION_BUS_ADDRESS=/dev/null \</span><br><span class="line">    --link hub -d selenium/node-chrome-debug:3.7.1-beryllium</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;安装&lt;code&gt;Docker&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://download.docker.com/mac/stable/Docker.dmg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MAC平台&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Windows平台&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.runoob.com/docker/ubuntu-docker-install.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ubuntu平台&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/xinzhifu1/article/details/83579256&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Centos7平台&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="环境搭建" scheme="http://shadow000902.space/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="Selenium" scheme="http://shadow000902.space/categories/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Selenium/"/>
    
    
      <category term="docker" scheme="http://shadow000902.space/tags/docker/"/>
    
      <category term="selenium" scheme="http://shadow000902.space/tags/selenium/"/>
    
  </entry>
  
  <entry>
    <title>Telegram代理设置</title>
    <link href="http://shadow000902.space/2019/09/07/2019-09-07-Telegram-set-proxy/"/>
    <id>http://shadow000902.space/2019/09/07/2019-09-07-Telegram-set-proxy/</id>
    <published>2019-09-07T15:26:31.000Z</published>
    <updated>2021-08-20T08:04:08.503Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>自身电脑的代理打开全局代理</p><a id="more"></a></li></ol><img src="/2019/09/07/2019-09-07-Telegram-set-proxy/%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE.png" title="全局代理设置"><ol start="2"><li><p>设置好全局代理后，查看全局代理情况下，电脑默认设置的socks代理IP和端口</p><img src="/2019/09/07/2019-09-07-Telegram-set-proxy/%E9%BB%98%E8%AE%A4SOCKS%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE.png" title="默认SOCKS代理设置"></li><li><p>然后设置Telegram的代理<br><code>Settings</code>-<code>Advanced</code>-<code>Network and proxy</code>-<code>Connection type</code></p><img src="/2019/09/07/2019-09-07-Telegram-set-proxy/%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE%E9%80%89%E6%8B%A9%E9%A1%B5.png" title="代理设置选择页"><p><code>Use custom proxy</code>，然后选择<code>ADD PROXY</code>，选择<code>SOCKS5</code>，填写其中的<code>Hostname</code>和<code>Port</code></p><img src="/2019/09/07/2019-09-07-Telegram-set-proxy/SOCKS%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE.png" title="SOCKS代理设置"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;&lt;li&gt;&lt;p&gt;自身电脑的代理打开全局代理&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tips" scheme="http://shadow000902.space/categories/Tips/"/>
    
    
      <category term="telegram" scheme="http://shadow000902.space/tags/telegram/"/>
    
      <category term="tips" scheme="http://shadow000902.space/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>Flask使用小结【更新ING】</title>
    <link href="http://shadow000902.space/2019/09/02/2019-09-02-Flask-problems-resolve/"/>
    <id>http://shadow000902.space/2019/09/02/2019-09-02-Flask-problems-resolve/</id>
    <published>2019-09-02T11:21:29.000Z</published>
    <updated>2021-08-20T08:04:08.537Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Can-39-t-locate-revision-identified-by-39-3ba21fe709f1-39-问题处理"><a href="#Can-39-t-locate-revision-identified-by-39-3ba21fe709f1-39-问题处理" class="headerlink" title="Can&#39;t locate revision identified by &#39;3ba21fe709f1&#39; 问题处理"></a><code>Can&#39;t locate revision identified by &#39;3ba21fe709f1&#39;</code> 问题处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># taoyi @ TyMac in ~ [16:26:14] </span></span><br><span class="line">$ flask db migrate</span><br><span class="line">INFO  [alembic.runtime.migration] Context impl MySQLImpl.</span><br><span class="line">INFO  [alembic.runtime.migration] Will assume non-transactional DDL.</span><br><span class="line">ERROR [root] Error: Can<span class="string">'t locate revision identified by '</span>3ba21fe709f1<span class="string">'</span></span><br></pre></td></tr></table></figure><a id="more"></a><ol><li>查询对应表中的数据<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM alembic_version;</span><br><span class="line">+-------------+</span><br><span class="line">| version_num |</span><br><span class="line">+-------------+</span><br><span class="line">| 3ba21fe709f1 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></li><li>删除版本控制的数据表<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE alembic_version;</span><br></pre></td></tr></table></figure></li><li>然后删除之前的<code>migrations</code>文件夹，重新生成迁移版本文件夹<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flask db init</span><br></pre></td></tr></table></figure></li><li>然后重新生成迁移版本文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flask db migrate</span><br></pre></td></tr></table></figure></li></ol><h3 id="query-filter常见操作符"><a href="#query-filter常见操作符" class="headerlink" title="query.filter常见操作符"></a><code>query.filter</code>常见操作符</h3><ol><li>equals<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name == <span class="string">'ed'</span>)</span><br></pre></td></tr></table></figure></li><li>not equals<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name != <span class="string">'ed'</span>)</span><br></pre></td></tr></table></figure></li><li>LIKE<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name.like(<span class="string">'%ed%'</span>))</span><br></pre></td></tr></table></figure></li><li>IN<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name.in_([<span class="string">'ed'</span>, <span class="string">'wendy'</span>, <span class="string">'jack'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># works with query objects too:</span></span><br><span class="line">query.filter(User.name.in_(session.query(User.name).filter(User.name.like(<span class="string">'%ed%'</span>))))</span><br></pre></td></tr></table></figure></li><li>NOT IN<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query.filter(~User.name.in_([<span class="string">'ed'</span>, <span class="string">'wendy'</span>, <span class="string">'jack'</span>]))</span><br></pre></td></tr></table></figure></li><li>IS NULL<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name == <span class="literal">None</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># alternatively, if pep8/linters are a concern</span></span><br><span class="line">query.filter(User.name.is_(<span class="literal">None</span>))</span><br></pre></td></tr></table></figure></li><li>IS NOT NULL<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name != <span class="literal">None</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># alternatively, if pep8/linters are a concern</span></span><br><span class="line">query.filter(User.name.isnot(<span class="literal">None</span>))</span><br></pre></td></tr></table></figure></li><li>AND<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use and_()</span></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> and_</span><br><span class="line">query.filter(and_(User.name == <span class="string">'ed'</span>, User.fullname == <span class="string">'Ed Jones'</span>))</span><br><span class="line"><span class="comment"># or send multiple expressions to .filter()</span></span><br><span class="line">query.filter(User.name == <span class="string">'ed'</span>, User.fullname == <span class="string">'Ed Jones'</span>)</span><br><span class="line"><span class="comment"># or chain multiple filter()/filter_by() calls</span></span><br><span class="line">query.filter(User.name == <span class="string">'ed'</span>).filter(User.fullname == <span class="string">'Ed Jones'</span>)</span><br></pre></td></tr></table></figure></li><li>OR<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> or_</span><br><span class="line">query.filter(or_(User.name == <span class="string">'ed'</span>, User.name == <span class="string">'wendy'</span>))</span><br></pre></td></tr></table></figure></li><li>MATCH<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query.filter(User.name.match(<span class="string">'wendy'</span>))</span><br></pre></td></tr></table></figure></li></ol><h3 id="多条件筛选接口"><a href="#多条件筛选接口" class="headerlink" title="多条件筛选接口"></a>多条件筛选接口</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@api.route('/gitCommit/find', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="meta">@login_required</span></span><br><span class="line"><span class="meta">@cost_count</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gitcommit_find</span><span class="params">()</span>:</span></span><br><span class="line">    data = request.json</span><br><span class="line">    projectName = data.get(<span class="string">'project_name'</span>)</span><br><span class="line">    branchName = data.get(<span class="string">'branch_name'</span>)</span><br><span class="line">    commitMessage = data.get(<span class="string">'title'</span>)</span><br><span class="line"></span><br><span class="line">    period = data.get(<span class="string">'period'</span>)</span><br><span class="line"></span><br><span class="line">    time_start = period[<span class="number">0</span>] <span class="keyword">if</span> period <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    time_end = period[<span class="number">1</span>] <span class="keyword">if</span> period <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    page = data.get(<span class="string">'page'</span>) <span class="keyword">if</span> data.get(<span class="string">'page'</span>) <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">    per_page = data.get(<span class="string">'sizePage'</span>) <span class="keyword">if</span> data.get(<span class="string">'sizePage'</span>) <span class="keyword">else</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    筛选的时候会遇到多个筛选条件，但都是非必填的</span></span><br><span class="line"><span class="string">    把存在的筛选条件添加到数组中，然后进行解包</span></span><br><span class="line"><span class="string">    最后把解包后的数据添加到筛选条件中</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"></span><br><span class="line">    filterList = []</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> projectName <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        filterList.append(GitCommits.project_name)</span><br><span class="line">    <span class="keyword">if</span> branchName <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        filterList.append(GitCommits.branch_name)</span><br><span class="line">    <span class="keyword">if</span> commitMessage <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        filterList.append(GitCommits.title.like(<span class="string">'%'</span> + commitMessage + <span class="string">'%'</span>))</span><br><span class="line">    <span class="keyword">if</span> time_start <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        filterList.append(time_start &lt; GitCommits.create_at &lt; time_end)</span><br><span class="line"></span><br><span class="line">    _data = GitCommits.query.filter(*filterList)</span><br><span class="line"></span><br><span class="line">    pagination = _data.order_by(GitCommits.create_at.desc()).paginate(page, per_page=per_page, error_out=<span class="literal">False</span>)</span><br><span class="line">    _data = pagination.items</span><br><span class="line">    total = pagination.total</span><br><span class="line"></span><br><span class="line">    end_data = [&#123;<span class="string">'id'</span>:c.id,</span><br><span class="line">                 <span class="string">'project_id'</span>: c.project_id,</span><br><span class="line">                 <span class="string">'project_name'</span>: c.project_name,</span><br><span class="line">                 <span class="string">'branch_name'</span>: c.branch_name,</span><br><span class="line">                 <span class="string">'commit_message'</span>: c.title,</span><br><span class="line">                 <span class="string">'author_name'</span>: c.author_name,</span><br><span class="line">                 <span class="string">'create_at'</span>: c.create_at&#125; <span class="keyword">for</span> c <span class="keyword">in</span> _data]</span><br><span class="line"></span><br><span class="line">    print(end_data)</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">'data'</span>: end_data, <span class="string">'total'</span>: total, <span class="string">'status'</span>: <span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Can-39-t-locate-revision-identified-by-39-3ba21fe709f1-39-问题处理&quot;&gt;&lt;a href=&quot;#Can-39-t-locate-revision-identified-by-39-3ba21fe709f1-39-问题处理&quot; class=&quot;headerlink&quot; title=&quot;Can&amp;#39;t locate revision identified by &amp;#39;3ba21fe709f1&amp;#39; 问题处理&quot;&gt;&lt;/a&gt;&lt;code&gt;Can&amp;#39;t locate revision identified by &amp;#39;3ba21fe709f1&amp;#39;&lt;/code&gt; 问题处理&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# taoyi @ TyMac in ~ [16:26:14] &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ flask db migrate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  [alembic.runtime.migration] Context impl MySQLImpl.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  [alembic.runtime.migration] Will assume non-transactional DDL.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR [root] Error: Can&lt;span class=&quot;string&quot;&gt;&#39;t locate revision identified by &#39;&lt;/span&gt;3ba21fe709f1&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Flask" scheme="http://shadow000902.space/categories/Flask/"/>
    
    
      <category term="flask" scheme="http://shadow000902.space/tags/flask/"/>
    
  </entry>
  
</feed>
